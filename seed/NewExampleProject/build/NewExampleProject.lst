ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"NewExampleProject.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1639:
  29              		.file 1 "../../libDaisy//src/hid/switch.h"
   1:../../libDaisy//src/hid/switch.h **** #pragma once
   2:../../libDaisy//src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../../libDaisy//src/hid/switch.h **** #define DSY_SWITCH_H
   4:../../libDaisy//src/hid/switch.h **** #include "daisy_core.h"
   5:../../libDaisy//src/hid/switch.h **** #include "per/gpio.h"
   6:../../libDaisy//src/hid/switch.h **** #include "sys/system.h"
   7:../../libDaisy//src/hid/switch.h **** 
   8:../../libDaisy//src/hid/switch.h **** namespace daisy
   9:../../libDaisy//src/hid/switch.h **** {
  10:../../libDaisy//src/hid/switch.h **** /** 
  11:../../libDaisy//src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../../libDaisy//src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../../libDaisy//src/hid/switch.h ****     @author Stephen Hensley
  14:../../libDaisy//src/hid/switch.h ****     @date December 2019
  15:../../libDaisy//src/hid/switch.h ****     @ingroup controls
  16:../../libDaisy//src/hid/switch.h **** */
  17:../../libDaisy//src/hid/switch.h **** class Switch
  18:../../libDaisy//src/hid/switch.h **** {
  19:../../libDaisy//src/hid/switch.h ****   public:
  20:../../libDaisy//src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../../libDaisy//src/hid/switch.h ****     enum Type
  22:../../libDaisy//src/hid/switch.h ****     {
  23:../../libDaisy//src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../../libDaisy//src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../../libDaisy//src/hid/switch.h ****     };
  26:../../libDaisy//src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../../libDaisy//src/hid/switch.h ****     enum Polarity
  28:../../libDaisy//src/hid/switch.h ****     {
  29:../../libDaisy//src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 2


  30:../../libDaisy//src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../../libDaisy//src/hid/switch.h ****     };
  32:../../libDaisy//src/hid/switch.h **** 
  33:../../libDaisy//src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../../libDaisy//src/hid/switch.h ****     enum Pull
  35:../../libDaisy//src/hid/switch.h ****     {
  36:../../libDaisy//src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../../libDaisy//src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../../libDaisy//src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../../libDaisy//src/hid/switch.h ****     };
  40:../../libDaisy//src/hid/switch.h **** 
  41:../../libDaisy//src/hid/switch.h ****     Switch() {}
  42:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 42 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 42 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1639:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB2555:
  54              		.file 2 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 3


  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB1551:
  61              	.LBI1551:
  62              		.file 3 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 4


  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy//src/sys/system.h ****     {
  64:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy//src/sys/system.h ****         SDRAM,
  71:../../libDaisy//src/sys/system.h ****         QSPI,
  72:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy//src/sys/system.h ****     };
  74:../../libDaisy//src/sys/system.h **** 
  75:../../libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy//src/sys/system.h ****     struct BootInfo
  77:../../libDaisy//src/sys/system.h ****     {
  78:../../libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy//src/sys/system.h ****         {
  80:../../libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy//src/sys/system.h ****         } status;
  85:../../libDaisy//src/sys/system.h ****         uint32_t data;
  86:../../libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy//src/sys/system.h ****         {
  88:../../libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy//src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy//src/sys/system.h ****             LAST
  93:../../libDaisy//src/sys/system.h ****         } version;
  94:../../libDaisy//src/sys/system.h ****     };
  95:../../libDaisy//src/sys/system.h **** 
  96:../../libDaisy//src/sys/system.h ****     System() {}
  97:../../libDaisy//src/sys/system.h ****     ~System() {}
  63              		.loc 3 97 5 view .LVU3
  64              		.loc 3 97 5 is_stmt 0 view .LVU4
  65              	.LBE1551:
  66              	.LBB1552:
  67              	.LBI1552:
  68              		.file 4 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 5


   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE1552:
  72              	.LBB1553:
  73              	.LBI1553:
  74              		.file 5 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 6


  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy//src/per/adc.h ****     {
  45:../../libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy//src/per/adc.h ****     };
  54:../../libDaisy//src/per/adc.h **** 
  55:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy//src/per/adc.h ****      */
  59:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy//src/per/adc.h **** 
  61:../../libDaisy//src/per/adc.h ****     /** 
  62:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 7


  69:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy//src/per/adc.h ****     */
  74:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy//src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_0,
  77:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy//src/per/adc.h **** 
  81:../../libDaisy//src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy//src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy//src/per/adc.h **** };
  86:../../libDaisy//src/per/adc.h **** 
  87:../../libDaisy//src/per/adc.h **** /**
  88:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy//src/per/adc.h **** */
  90:../../libDaisy//src/per/adc.h **** class AdcHandle
  91:../../libDaisy//src/per/adc.h **** {
  92:../../libDaisy//src/per/adc.h ****   public:
  93:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy//src/per/adc.h ****     enum OverSampling
  95:../../libDaisy//src/per/adc.h ****     {
  96:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
 106:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy//src/per/adc.h ****     };
 108:../../libDaisy//src/per/adc.h **** 
 109:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
 110:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 110 5 is_stmt 1 view .LVU7
  76              		.loc 5 110 5 is_stmt 0 view .LVU8
  77              	.LBE1553:
  78              	.LBB1554:
  79              	.LBI1554:
  80              		.file 6 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 8


  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 9


  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 96 5 is_stmt 1 view .LVU9
  82              		.loc 6 96 5 is_stmt 0 view .LVU10
  83              	.LBE1554:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE2555:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._ZN6Biquad10resetCoeffEv,"axG",%progbits,_ZN6Biquad10resetCoeffEv,comdat
  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN6Biquad10resetCoeffEv
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN6Biquad10resetCoeffEv:
 101              	.LVL2:
 102              	.LFB4748:
 103              		.file 7 "../../dsp_fv/biquad.h"
   1:../../dsp_fv/biquad.h **** #include <vector>
   2:../../dsp_fv/biquad.h **** #include <string>
   3:../../dsp_fv/biquad.h **** using std::string;
   4:../../dsp_fv/biquad.h **** using std::vector;
   5:../../dsp_fv/biquad.h **** 
   6:../../dsp_fv/biquad.h **** // =============================================================================
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 10


   7:../../dsp_fv/biquad.h **** // Biquad  Class
   8:../../dsp_fv/biquad.h **** // used to implement every kinf of second order filter, sample by sample reading
   9:../../dsp_fv/biquad.h **** // =============================================================================
  10:../../dsp_fv/biquad.h **** 
  11:../../dsp_fv/biquad.h **** 
  12:../../dsp_fv/biquad.h **** class Biquad
  13:../../dsp_fv/biquad.h **** {
  14:../../dsp_fv/biquad.h **** public:
  15:../../dsp_fv/biquad.h ****     
  16:../../dsp_fv/biquad.h ****     Biquad() {
  17:../../dsp_fv/biquad.h ****         aCoeffVector = { 0,0,0 };
  18:../../dsp_fv/biquad.h ****         bCoeffVector = { 0,0,0 };
  19:../../dsp_fv/biquad.h ****         form = "canonical";
  20:../../dsp_fv/biquad.h **** 
  21:../../dsp_fv/biquad.h ****     }
  22:../../dsp_fv/biquad.h ****     Biquad(const string f):form(f)
  23:../../dsp_fv/biquad.h ****     {
  24:../../dsp_fv/biquad.h ****         aCoeffVector = { 0,0,0 };
  25:../../dsp_fv/biquad.h ****         bCoeffVector = { 0,0,0 };
  26:../../dsp_fv/biquad.h ****     }
  27:../../dsp_fv/biquad.h ****     Biquad(vector<float> aCoeff, vector<float> bCoeff, int numCoeff, string f = "direct") :
  28:../../dsp_fv/biquad.h ****         aCoeffVector(aCoeff), bCoeffVector(bCoeff), form(f) { }
  29:../../dsp_fv/biquad.h ****     ~Biquad() {}
  30:../../dsp_fv/biquad.h **** 
  31:../../dsp_fv/biquad.h ****     void updateParameters(vector<float> aCoeff, vector<float> bCoeff)
  32:../../dsp_fv/biquad.h ****     {
  33:../../dsp_fv/biquad.h ****         // updates the biquad class a and b  parameters 
  34:../../dsp_fv/biquad.h ****         for (int i = 0; i < 3; ++i)
  35:../../dsp_fv/biquad.h ****         {
  36:../../dsp_fv/biquad.h ****             aCoeffVector[i] = aCoeff[i];
  37:../../dsp_fv/biquad.h ****             bCoeffVector[i] = bCoeff[i];
  38:../../dsp_fv/biquad.h ****         }
  39:../../dsp_fv/biquad.h ****     }
  40:../../dsp_fv/biquad.h ****     
  41:../../dsp_fv/biquad.h ****     virtual void resetCoeff()
 104              		.loc 7 41 18 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
  42:../../dsp_fv/biquad.h ****     {
  43:../../dsp_fv/biquad.h ****         // flushes all the vectors values, resets to 0
  44:../../dsp_fv/biquad.h ****         for (auto i = 0; i < aCoeffVector.size(); ++i)
 108              		.loc 7 44 9 view .LVU13
 109              	.LBB1567:
 110              		.loc 7 44 28 view .LVU14
 111              	.LBB1568:
 112              	.LBI1568:
 113              		.file 8 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_vector.
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // any later version.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 11


  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1996
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _STL_VECTOR_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <initializer_list>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201703L
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # include <compare>
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 12


  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <debug/assertions.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** extern "C" void
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  const void*, const void*);
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     struct _Vector_base
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        	pointer;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl_data
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_start;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_finish;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_start = __x._M_start;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // information used by TBAA.
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_copy_data(__x);
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 13


 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type()
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type) { }
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename _Up>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 14


 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      if (__impl._M_start)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Reinit
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Reinit()
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		if (_M_impl._M_start)
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    _M_impl._M_finish);
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 15


 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    private:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      size_type _M_n;
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp_alloc_type&
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp_alloc_type&
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       allocator_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() = default;
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() { }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 16


 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n)
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl()
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _M_create_storage(__n);
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_impl _M_impl;
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pointer
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_allocate(size_t __n)
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 17


 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__p)
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     };
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /**
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  individual elements in any order.
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @ingroup sequences
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   */
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Concept requirements.
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus < 201103L
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 18


 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Tp					value_type;
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator;
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef size_t					size_type;
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc					allocator_type;
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(true_type)
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return false; }
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_use_relocate()
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return __result; }
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 19


 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // C++11
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_allocate;
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_deallocate;
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_impl;
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() = default;
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() { }
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructed elements.
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 20


 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x  will not be copied
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x)
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  moved instance.
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector.
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&&) noexcept = default;
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 21


 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (!__rv.empty())
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __rv.clear();
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       noexcept( noexcept(
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a __l.
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a)
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 22


 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [first,last).
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  responsibility.
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector assignment operator.
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x will not be copied.
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 23


 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(const vector& __x);
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move assignment operator.
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  if the allocators permit it).
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	constexpr bool __move_storage =
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector list assignment operator.
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(initializer_list<value_type> __l)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __val  Value to be assigned.
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  value.  Note that the assignment completely changes the
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the number of elements assigned.
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(size_type __n, const value_type& __val)
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_assign(__n, __val); }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 24


 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  range [__first,__last).
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(initializer_list<value_type> __l)
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Get a copy of the memory allocation object.
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::get_allocator;
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // iterators
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points to the first
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 25


 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(end()); }
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  in reverse element order.
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 26


 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(begin()); }
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cbegin() const noexcept
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cend() const noexcept
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crbegin() const noexcept
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crend() const noexcept
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.2] capacity
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 114              		.loc 8 918 7 view .LVU15
 115              	.LBE1568:
 116              	.LBE1567:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 27


  41:../../dsp_fv/biquad.h ****     {
 117              		.loc 7 41 18 is_stmt 0 view .LVU16
 118 0000 70B5     		push	{r4, r5, r6, lr}
 119              		.cfi_def_cfa_offset 16
 120              		.cfi_offset 4, -16
 121              		.cfi_offset 5, -12
 122              		.cfi_offset 6, -8
 123              		.cfi_offset 14, -4
  41:../../dsp_fv/biquad.h ****     {
 124              		.loc 7 41 18 view .LVU17
 125 0002 0446     		mov	r4, r0
 126              	.LBB1575:
 127              	.LBB1570:
 128              	.LBB1569:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 129              		.loc 8 919 66 view .LVU18
 130 0004 D0E90103 		ldrd	r0, r3, [r0, #4]
 131              	.LVL3:
 132              		.loc 8 919 50 view .LVU19
 133 0008 1D1A     		subs	r5, r3, r0
 134              	.LVL4:
 135              		.loc 8 919 50 view .LVU20
 136              	.LBE1569:
 137              	.LBE1570:
 138              		.loc 7 44 28 view .LVU21
 139 000a AA08     		lsrs	r2, r5, #2
 140 000c 28D0     		beq	.L4
 141              	.LBB1571:
 142              	.LBB1572:
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  default constructed elements are appended.
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size)
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_default_append(__new_size - size());
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 28


 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       shrink_to_fit()
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_shrink_to_fit(); }
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns the total number of elements that the %vector can
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  hold before needing to allocate more memory.
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 - this->_M_impl._M_start); }
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  equal end().)
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 29


1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _GLIBCXX_NODISCARD bool
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return begin() == end(); }
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *          elements.
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements required.
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function attempts to reserve enough memory for the
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number requested is more than max_size(), length_error is
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  thrown.
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  necessity and the user can determine the number of elements
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that will be required, the user can reserve the memory in
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and copying of %vector data.
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reserve(size_type __n);
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // element access
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
 143              		.loc 8 1046 25 view .LVU22
 144 000e 2669     		ldr	r6, [r4, #16]
 145 0010 7219     		adds	r2, r6, r5
 146 0012 9042     		cmp	r0, r2
 147 0014 01D2     		bcs	.L13
 148 0016 9E42     		cmp	r6, r3
 149 0018 23D3     		bcc	.L6
 150              	.L13:
 151              	.LBE1572:
 152              	.LBE1571:
  45:../../dsp_fv/biquad.h ****         {
  46:../../dsp_fv/biquad.h ****             aCoeffVector[i] = 0.0f;
 153              		.loc 7 46 29 view .LVU23
 154 001a 2A46     		mov	r2, r5
 155 001c 0021     		movs	r1, #0
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 30


 156 001e FFF7FEFF 		bl	memset
 157              	.LVL5:
  47:../../dsp_fv/biquad.h ****             bCoeffVector[i] = 0.0f;
 158              		.loc 7 47 29 view .LVU24
 159 0022 2A46     		mov	r2, r5
 160 0024 0021     		movs	r1, #0
 161 0026 3046     		mov	r0, r6
 162 0028 FFF7FEFF 		bl	memset
 163              	.LVL6:
 164              	.L8:
 165              		.loc 7 47 29 view .LVU25
 166              	.LBE1575:
 167              	.LBB1576:
 168              	.LBB1577:
 169              	.LBB1578:
 170              		.loc 8 1046 25 view .LVU26
 171 002c E069     		ldr	r0, [r4, #28]
 172              	.LBE1578:
 173              	.LBE1577:
 174              	.LBB1579:
 175              	.LBB1580:
 176 002e A46A     		ldr	r4, [r4, #40]
 177              	.LVL7:
 178              		.loc 8 1046 25 view .LVU27
 179 0030 4319     		adds	r3, r0, r5
 180 0032 9C42     		cmp	r4, r3
 181 0034 02D2     		bcs	.L14
 182 0036 6219     		adds	r2, r4, r5
 183 0038 9042     		cmp	r0, r2
 184 003a 0AD3     		bcc	.L12
 185              	.L14:
 186              	.LBE1580:
 187              	.LBE1579:
  48:../../dsp_fv/biquad.h ****         }
  49:../../dsp_fv/biquad.h **** 
  50:../../dsp_fv/biquad.h ****         for (auto i = 0; i < aCoeffVector.size(); ++i)
  51:../../dsp_fv/biquad.h ****         {
  52:../../dsp_fv/biquad.h ****             xStateVector[i] = 0.0f;
 188              		.loc 7 52 29 view .LVU28
 189 003c 2A46     		mov	r2, r5
 190 003e 0021     		movs	r1, #0
 191 0040 FFF7FEFF 		bl	memset
 192              	.LVL8:
  53:../../dsp_fv/biquad.h ****             yStateVector[i] = 0.0f;
 193              		.loc 7 53 29 view .LVU29
 194 0044 2A46     		mov	r2, r5
 195 0046 2046     		mov	r0, r4
 196 0048 0021     		movs	r1, #0
 197              	.LBE1576:
  54:../../dsp_fv/biquad.h ****         }
  55:../../dsp_fv/biquad.h ****     }
 198              		.loc 7 55 5 view .LVU30
 199 004a BDE87040 		pop	{r4, r5, r6, lr}
 200              		.cfi_remember_state
 201              		.cfi_restore 14
 202              		.cfi_restore 6
 203              		.cfi_restore 5
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 31


 204              		.cfi_restore 4
 205              		.cfi_def_cfa_offset 0
 206              	.LBB1583:
  53:../../dsp_fv/biquad.h ****             yStateVector[i] = 0.0f;
 207              		.loc 7 53 29 view .LVU31
 208 004e FFF7FEBF 		b	memset
 209              	.LVL9:
 210              	.L12:
 211              		.cfi_restore_state
  52:../../dsp_fv/biquad.h ****             yStateVector[i] = 0.0f;
 212              		.loc 7 52 13 is_stmt 1 view .LVU32
 213              	.LBB1581:
 214              	.LBI1577:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 215              		.loc 8 1043 7 view .LVU33
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 216              		.loc 8 1043 7 is_stmt 0 view .LVU34
 217              	.LBE1581:
  52:../../dsp_fv/biquad.h ****             yStateVector[i] = 0.0f;
 218              		.loc 7 52 29 view .LVU35
 219 0052 0022     		movs	r2, #0
 220 0054 40F8042B 		str	r2, [r0], #4	@ float
  53:../../dsp_fv/biquad.h ****         }
 221              		.loc 7 53 13 is_stmt 1 view .LVU36
 222              	.LVL10:
 223              	.LBB1582:
 224              	.LBI1579:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 225              		.loc 8 1043 7 view .LVU37
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 226              		.loc 8 1043 7 is_stmt 0 view .LVU38
 227              	.LBE1582:
  50:../../dsp_fv/biquad.h ****         {
 228              		.loc 7 50 28 view .LVU39
 229 0058 8342     		cmp	r3, r0
  53:../../dsp_fv/biquad.h ****         }
 230              		.loc 7 53 29 view .LVU40
 231 005a 44F8042B 		str	r2, [r4], #4	@ float
  50:../../dsp_fv/biquad.h ****         {
 232              		.loc 7 50 9 is_stmt 1 view .LVU41
  50:../../dsp_fv/biquad.h ****         {
 233              		.loc 7 50 28 view .LVU42
 234 005e F8D1     		bne	.L12
 235              	.L4:
  50:../../dsp_fv/biquad.h ****         {
 236              		.loc 7 50 28 is_stmt 0 view .LVU43
 237              	.LBE1583:
 238              		.loc 7 55 5 view .LVU44
 239 0060 70BD     		pop	{r4, r5, r6, pc}
 240              	.LVL11:
 241              	.L6:
 242              		.loc 7 55 5 view .LVU45
 243 0062 4219     		adds	r2, r0, r5
 244              	.LVL12:
 245              	.L9:
 246              	.LBB1584:
  46:../../dsp_fv/biquad.h ****             bCoeffVector[i] = 0.0f;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 32


 247              		.loc 7 46 13 is_stmt 1 view .LVU46
  46:../../dsp_fv/biquad.h ****             bCoeffVector[i] = 0.0f;
 248              		.loc 7 46 29 is_stmt 0 view .LVU47
 249 0064 0023     		movs	r3, #0
 250 0066 40F8043B 		str	r3, [r0], #4	@ float
  47:../../dsp_fv/biquad.h ****         }
 251              		.loc 7 47 13 is_stmt 1 view .LVU48
 252              	.LVL13:
 253              	.LBB1573:
 254              	.LBI1571:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 255              		.loc 8 1043 7 view .LVU49
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 256              		.loc 8 1043 7 is_stmt 0 view .LVU50
 257              	.LBE1573:
  44:../../dsp_fv/biquad.h ****         {
 258              		.loc 7 44 28 view .LVU51
 259 006a 9042     		cmp	r0, r2
  47:../../dsp_fv/biquad.h ****         }
 260              		.loc 7 47 29 view .LVU52
 261 006c 46F8043B 		str	r3, [r6], #4	@ float
  44:../../dsp_fv/biquad.h ****         {
 262              		.loc 7 44 9 is_stmt 1 view .LVU53
  44:../../dsp_fv/biquad.h ****         {
 263              		.loc 7 44 28 view .LVU54
 264              	.LVL14:
 265              	.LBB1574:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 266              		.loc 8 918 7 view .LVU55
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 267              		.loc 8 918 7 is_stmt 0 view .LVU56
 268              	.LBE1574:
  44:../../dsp_fv/biquad.h ****         {
 269              		.loc 7 44 28 view .LVU57
 270 0070 F8D1     		bne	.L9
 271 0072 DBE7     		b	.L8
 272              	.LBE1584:
 273              		.cfi_endproc
 274              	.LFE4748:
 276              		.section	.rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St
 277              		.align	2
 278              	.LC0:
 279 0000 62617369 		.ascii	"basic_string::_M_construct null not valid\000"
 279      635F7374 
 279      72696E67 
 279      3A3A5F4D 
 279      5F636F6E 
 280              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20
 281              		.align	1
 282              		.p2align 2,,3
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu fpv5-d16
 288              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator
 289              	.LVL15:
 290              	.LFB5514:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 33


 291              		.file 9 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_strin
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** /** @file bits/basic_string.tcc
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #pragma GCC system_header
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** {
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 34


  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     void
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (this == &__s)
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	return;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (_M_is_local())
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__s._M_is_local())
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    if (length() && __s.length())
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (__s.length())
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_length(__s.length());
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_set_length(0);
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (length())
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_length(length());
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_set_length(0);
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	else
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 			      _S_local_capacity + 1);
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(__s._M_data());
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       else
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__s._M_is_local())
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				_S_local_capacity + 1);
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(_M_data());
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(_M_local_buf);
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 35


 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  else
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(__s._M_data());
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       const size_type __tmp_length = length();
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_length(__s.length());
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       __s._M_length(__tmp_length);
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > max_size())
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__capacity > max_size())
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __capacity = max_size();
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // null char_type() element.
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // istreambuf_iterators, etc.
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // pointers, calling for a different coding style.
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::input_iterator_tag)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __len = 0;
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 36


 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    ++__beg;
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    while (__beg != __end)
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		if (__len == __capacity)
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  {
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    // Allocate more space.
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    __capacity = __len + 1;
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_dispose();
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_data(__another);
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_capacity(__capacity);
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		++__beg;
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__len);
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       }
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 292              		.loc 9 206 7 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 8
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		.loc 9 206 7 is_stmt 0 view .LVU59
 297 0000 70B5     		push	{r4, r5, r6, lr}
 298              		.cfi_def_cfa_offset 16
 299              		.cfi_offset 4, -16
 300              		.cfi_offset 5, -12
 301              		.cfi_offset 6, -8
 302              		.cfi_offset 14, -4
 303 0002 0546     		mov	r5, r0
 304 0004 82B0     		sub	sp, sp, #8
 305              		.cfi_def_cfa_offset 24
 306              		.loc 9 206 7 view .LVU60
 307 0006 0E46     		mov	r6, r1
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::forward_iterator_tag)
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 37


 308              		.loc 9 211 42 view .LVU61
 309 0008 02B1     		cbz	r2, .L22
 310 000a 41B3     		cbz	r1, .L38
 311              	.L22:
 312              	.LVL16:
 313              	.LBB1614:
 314              	.LBI1614:
 315              		.file 10 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Functions used by iterators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  */
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 38


  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** /** @file bits/stl_iterator_base_funcs.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  This file contains all of the general iterator-related utility
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  *  functions, such as distance() and advance().
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****  */
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #ifndef _STL_ITERATOR_BASE_FUNCS_H
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #define _STL_ITERATOR_BASE_FUNCS_H 1
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #pragma GCC system_header
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #include <bits/concept_check.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #include <debug/assertions.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** {
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   // Forward declaration for the overloads of __distance.
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template <typename> struct _List_iterator;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template <typename> struct _List_const_iterator;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _InputIterator>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_InputIterator __first, _InputIterator __last,
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                input_iterator_tag)
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       typename iterator_traits<_InputIterator>::difference_type __n = 0;
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       while (__first != __last)
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	{
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	  ++__first;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	  ++__n;
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	}
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       return __n;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _RandomAccessIterator>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     typename iterator_traits<_RandomAccessIterator>::difference_type
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_RandomAccessIteratorConcept<
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 				  _RandomAccessIterator>)
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       return __last - __first;
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 39


 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #if _GLIBCXX_USE_CXX11_ABI
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   // Forward declaration because of the qualified call in distance.
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _Tp>
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     ptrdiff_t
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_iterator<_Tp>,
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_iterator<_Tp>,
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _Tp>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     ptrdiff_t
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** #endif
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   /**
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @brief A generalization of pointer arithmetic.
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @param  __first  An input iterator.
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @param  __last  An input iterator.
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @return  The distance between them.
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  Returns @c n such that __first + n == __last.  This requires
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  that @p __last must be reachable from @p __first.  Note that @c
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  n may be negative.
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  For random access iterators, this uses their @c + and @c - operations
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  and are constant time.  For other %iterator classes they are linear time.
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   */
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _InputIterator>
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX17_CONSTEXPR
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     distance(_InputIterator __first, _InputIterator __last)
 316              		.loc 10 138 5 is_stmt 1 view .LVU62
 317              	.LBB1615:
 318              	.LBI1615:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 319              		.loc 10 98 5 view .LVU63
 320              	.LBB1616:
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 321              		.loc 10 104 23 is_stmt 0 view .LVU64
 322 000c 941B     		subs	r4, r2, r6
 323              	.LBE1616:
 324              	.LBE1615:
 325              	.LBE1614:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 326              		.loc 9 217 2 view .LVU65
 327 000e 0F2C     		cmp	r4, #15
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 328              		.loc 9 215 12 view .LVU66
 329 0010 0194     		str	r4, [sp, #4]
 330              		.loc 9 217 2 view .LVU67
 331 0012 11D8     		bhi	.L39
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 40


 332              	.LVL17:
 333              	.LBB1617:
 334              	.LBI1617:
 335              		.file 11 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** /** @file bits/basic_string.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifndef _BASIC_STRING_H
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #define _BASIC_STRING_H 1
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #pragma GCC system_header
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/atomicity.h>
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/alloc_traits.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <debug/debug.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <initializer_list>
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # include <string_view>
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 41


  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					traits_type;
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							const_iterator;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const_iterator __const_iterator;
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 42


 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	pointer _M_p; // The actual data.
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type		_M_string_length;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 43


 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       union
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type        _M_allocated_capacity;
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(pointer __p)
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_length(size_type __length)
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const
 336              		.loc 11 186 7 is_stmt 1 view .LVU68
 337              	.LBE1617:
 338              	.LBB1619:
 339              	.LBB1620:
 340              	.LBB1621:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data()
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return pointer(_M_local_buf);
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_pointer
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data() const
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return const_pointer(_M_local_buf);
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_capacity(size_type __capacity)
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_set_length(size_type __n)
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__n);
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 44


 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_is_local() const
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Create & Destroy
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_create(size_type&, size_type);
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_dispose()
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local())
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_destroy(size_type __size) throw()
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Integer>
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__req, __c); }
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::input_iterator_tag);
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 45


 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _FwdIterator>
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::forward_iterator_tag);
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type&
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator()
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const allocator_type&
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator() const
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, bool _Requires =
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ typedef basic_string& __type; };
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 46


 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 341              		.loc 11 348 2 is_stmt 0 view .LVU69
 342 0014 012C     		cmp	r4, #1
 343              	.LBE1621:
 344              	.LBE1620:
 345              	.LBE1619:
 346              	.LBB1641:
 347              	.LBB1618:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 348              		.loc 11 187 28 view .LVU70
 349 0016 2868     		ldr	r0, [r5]
 350              	.LVL18:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 351              		.loc 11 187 28 view .LVU71
 352              	.LBE1618:
 353              	.LBE1641:
 354              	.LBB1642:
 355              	.LBI1619:
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 47


 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 356              		.loc 11 396 7 is_stmt 1 view .LVU72
 357              	.LBB1637:
 358              	.LBI1620:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 359              		.loc 11 346 7 view .LVU73
 360              	.LBB1633:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 361              		.loc 11 348 2 is_stmt 0 view .LVU74
 362 0018 08D1     		bne	.L25
 363              	.LVL19:
 364              	.LBB1622:
 365              	.LBI1622:
 366              		.file 12 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\char_trait
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 48


  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** /** @file bits/char_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define _CHAR_TRAITS_H 1
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #pragma GCC system_header
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus > 201703L
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # include <compare>
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Mapping from character type to associated types.
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note This is an implementation class for the generic version
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types, but who don't need to change the definitions of any function
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct _Char_types
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef unsigned long   int_type;
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streampos  pos_type;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streamoff  off_type;
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::mbstate_t  state_type;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note For any given actual character type, this definition is
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 49


  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  namespace __gnu_cxx may be.
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef _CharT                                    char_type;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = std::strong_ordering;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 < __c2; }
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s);
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_char_type(const int_type& __c)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<char_type>(__c); }
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 50


 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_int_type(const char_type& __c)
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(__c); }
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eof()
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       not_eof(const int_type& __c)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return -1;
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 1;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     length(const char_type* __p)
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::size_t __i = 0;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (!eq(__p[__i], char_type()))
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         ++__i;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i;
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         if (eq(__s[__i], __a))
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****           return __s + __i;
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 51


 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (__n == 0)
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __s1;
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (std::is_constant_evaluated())
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	{
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  if (__s1 > __s2 && __s1 < __s2 + __n)
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy_backward(__s2, __s2 + __n, __s1);
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  else
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy(__s2, __s2 + __n, __s1);
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	}
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 						    __n * sizeof(char_type)));
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s1;
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::fill_n(__s, __n, __a);
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s;
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** } // namespace
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  string are known at compile time.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __s  The string.
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 52


 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_string_p(const _CharT* __s)
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __s;
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all strings should be constant.
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__s++;
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_constant_p(*__s);
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a character array are
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  known at compile time.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __a  The character array.
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __n  Number of characters.
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __a;
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __n;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       size_t __i = 0;
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__i++;
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i == __n;
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   // 21.1
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note  For any given actual character type, this definition is
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   */
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<class _CharT>
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     { };
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 53


 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /// 21.1.3.1  char_traits specializations
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<>
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits<char>
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef char              char_type;
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef int               int_type;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streampos         pos_type;
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streamoff         off_type;
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef mbstate_t         state_type;
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = strong_ordering;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 367              		.loc 12 321 7 is_stmt 1 view .LVU75
 368              	.LBB1623:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 369              		.loc 12 322 9 view .LVU76
 370              		.loc 12 322 16 is_stmt 0 view .LVU77
 371 001a 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 372              		.loc 12 322 14 view .LVU78
 373 001c 0370     		strb	r3, [r0]
 374              	.LBE1623:
 375              	.LBE1622:
 376              	.LBE1633:
 377              	.LBE1637:
 378              	.LBE1642:
 379              	.LBB1643:
 380              	.LBB1644:
 381              	.LBB1645:
 382              	.LBB1646:
 383 001e 0023     		movs	r3, #0
 384              	.LBE1646:
 385              	.LBE1645:
 386              	.LBE1644:
 387              	.LBE1643:
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__dnew);
 388              		.loc 9 232 15 view .LVU79
 389 0020 019C     		ldr	r4, [sp, #4]
 390              	.LVL20:
 391              	.LBB1677:
 392              	.LBI1643:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 54


 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 393              		.loc 11 214 7 is_stmt 1 view .LVU80
 394              	.LBB1673:
 395              	.LBB1652:
 396              	.LBI1652:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 397              		.loc 11 182 7 view .LVU81
 398              	.LBE1652:
 399              	.LBB1656:
 400              	.LBB1657:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 401              		.loc 11 187 28 is_stmt 0 view .LVU82
 402 0022 2868     		ldr	r0, [r5]
 403              	.LBE1657:
 404              	.LBE1656:
 405              	.LBB1659:
 406              	.LBB1653:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 407              		.loc 11 183 26 view .LVU83
 408 0024 6C60     		str	r4, [r5, #4]
 409              	.LVL21:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 410              		.loc 11 183 26 view .LVU84
 411              	.LBE1653:
 412              	.LBE1659:
 413              	.LBB1660:
 414              	.LBI1656:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 415              		.loc 11 186 7 is_stmt 1 view .LVU85
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 416              		.loc 11 186 7 is_stmt 0 view .LVU86
 417              	.LBE1660:
 418              	.LBB1661:
 419              	.LBI1645:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 420              		.loc 12 321 7 is_stmt 1 view .LVU87
 421              	.LBB1647:
 422              		.loc 12 322 9 view .LVU88
 423              		.loc 12 322 14 is_stmt 0 view .LVU89
 424 0026 0355     		strb	r3, [r0, r4]
 425              	.LVL22:
 426              		.loc 12 322 14 view .LVU90
 427              	.LBE1647:
 428              	.LBE1661:
 429              	.LBE1673:
 430              	.LBE1677:
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       }
 431              		.loc 9 233 7 view .LVU91
 432 0028 02B0     		add	sp, sp, #8
 433              		.cfi_remember_state
 434              		.cfi_def_cfa_offset 16
 435              		@ sp needed
 436 002a 70BD     		pop	{r4, r5, r6, pc}
 437              	.LVL23:
 438              	.L25:
 439              		.cfi_restore_state
 440              	.LBB1678:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 55


 441              	.LBB1638:
 442              	.LBB1634:
 443              	.LBB1624:
 444              	.LBI1624:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 445              		.loc 11 346 7 is_stmt 1 view .LVU92
 446              	.LBB1625:
 447              	.LBI1625:
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	// LWG 467.
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 		< static_cast<unsigned char>(__c2));
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s)
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__constant_string_p(__s))
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_strlen(__s);
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __builtin_constant_p(__a)
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 56


 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::move(__s1, __s2, __n);
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 448              		.loc 12 387 7 view .LVU93
 449              	.LBB1626:
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 450              		.loc 12 389 2 view .LVU94
 451 002c 64B9     		cbnz	r4, .L24
 452              	.LVL24:
 453              		.loc 12 389 2 is_stmt 0 view .LVU95
 454              	.LBE1626:
 455              	.LBE1625:
 456              	.LBE1624:
 457              	.LBE1634:
 458              	.LBE1638:
 459              	.LBE1678:
 460              	.LBB1679:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 461              		.loc 11 214 7 is_stmt 1 view .LVU96
 462              	.LBB1674:
 463              	.LBB1662:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 464              		.loc 11 182 7 view .LVU97
 465              	.LBE1662:
 466              	.LBB1663:
 467              	.LBB1648:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 468              		.loc 12 322 14 is_stmt 0 view .LVU98
 469 002e 0023     		movs	r3, #0
 470              	.LBE1648:
 471              	.LBE1663:
 472              	.LBB1664:
 473              	.LBB1654:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 474              		.loc 11 183 26 view .LVU99
 475 0030 6C60     		str	r4, [r5, #4]
 476              	.LVL25:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 477              		.loc 11 183 26 view .LVU100
 478              	.LBE1654:
 479              	.LBE1664:
 480              	.LBB1665:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 57


 481              		.loc 11 186 7 is_stmt 1 view .LVU101
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 482              		.loc 11 186 7 is_stmt 0 view .LVU102
 483              	.LBE1665:
 484              	.LBB1666:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 485              		.loc 12 321 7 is_stmt 1 view .LVU103
 486              	.LBB1649:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 487              		.loc 12 322 9 view .LVU104
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 488              		.loc 12 322 14 is_stmt 0 view .LVU105
 489 0032 0355     		strb	r3, [r0, r4]
 490              	.LVL26:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 491              		.loc 12 322 14 view .LVU106
 492              	.LBE1649:
 493              	.LBE1666:
 494              	.LBE1674:
 495              	.LBE1679:
 496              		.loc 9 233 7 view .LVU107
 497 0034 02B0     		add	sp, sp, #8
 498              		.cfi_remember_state
 499              		.cfi_def_cfa_offset 16
 500              		@ sp needed
 501 0036 70BD     		pop	{r4, r5, r6, pc}
 502              	.LVL27:
 503              	.L39:
 504              		.cfi_restore_state
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 505              		.loc 9 219 13 view .LVU108
 506 0038 0022     		movs	r2, #0
 507              	.LVL28:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 508              		.loc 9 219 13 view .LVU109
 509 003a 01A9     		add	r1, sp, #4
 510              	.LVL29:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 511              		.loc 9 219 13 view .LVU110
 512 003c 2846     		mov	r0, r5
 513              	.LVL30:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 514              		.loc 9 219 13 view .LVU111
 515 003e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 516              	.LVL31:
 517              	.LBB1680:
 518              	.LBB1681:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 519              		.loc 11 211 31 view .LVU112
 520 0042 019B     		ldr	r3, [sp, #4]
 521              	.LVL32:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 522              		.loc 11 211 31 view .LVU113
 523              	.LBE1681:
 524              	.LBE1680:
 525              	.LBB1683:
 526              	.LBI1683:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 58


 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 527              		.loc 11 178 7 is_stmt 1 view .LVU114
 528              	.LBB1684:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 529              		.loc 11 179 26 is_stmt 0 view .LVU115
 530 0044 2860     		str	r0, [r5]
 531              	.LVL33:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 532              		.loc 11 179 26 view .LVU116
 533              	.LBE1684:
 534              	.LBE1683:
 535              	.LBB1685:
 536              	.LBI1680:
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 537              		.loc 11 210 7 is_stmt 1 view .LVU117
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 538              		.loc 11 210 7 is_stmt 0 view .LVU118
 539              	.LBE1685:
 540              	.LBB1686:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 541              		.loc 11 186 7 is_stmt 1 view .LVU119
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 542              		.loc 11 186 7 is_stmt 0 view .LVU120
 543              	.LBE1686:
 544              	.LBB1687:
 545              		.loc 11 396 7 is_stmt 1 view .LVU121
 546              	.LBB1639:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 547              		.loc 11 346 7 view .LVU122
 548              	.LBB1635:
 549              	.LBB1631:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 550              		.loc 11 346 7 view .LVU123
 551              	.LBB1629:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 552              		.loc 12 387 7 view .LVU124
 553              	.LBB1627:
 554              		.loc 12 389 2 view .LVU125
 555              	.LBE1627:
 556              	.LBE1629:
 557              	.LBE1631:
 558              	.LBE1635:
 559              	.LBE1639:
 560              	.LBE1687:
 561              	.LBB1688:
 562              	.LBB1682:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 563              		.loc 11 211 31 is_stmt 0 view .LVU126
 564 0046 AB60     		str	r3, [r5, #8]
 565              	.L24:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 566              		.loc 11 211 31 view .LVU127
 567              	.LBE1682:
 568              	.LBE1688:
 569              	.LBB1689:
 570              	.LBB1640:
 571              	.LBB1636:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 59


 572              	.LBB1632:
 573              	.LBB1630:
 574              	.LBB1628:
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 575              		.loc 12 395 2 is_stmt 1 view .LVU128
 576              		.loc 12 395 49 is_stmt 0 view .LVU129
 577 0048 2246     		mov	r2, r4
 578 004a 3146     		mov	r1, r6
 579 004c FFF7FEFF 		bl	memcpy
 580              	.LVL34:
 581              		.loc 12 395 49 view .LVU130
 582              	.LBE1628:
 583              	.LBE1630:
 584              	.LBE1632:
 585              	.LBE1636:
 586              	.LBE1640:
 587              	.LBE1689:
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       }
 588              		.loc 9 232 15 view .LVU131
 589 0050 019C     		ldr	r4, [sp, #4]
 590              	.LVL35:
 591              	.LBB1690:
 592              	.LBB1675:
 593              	.LBB1667:
 594              	.LBB1658:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 595              		.loc 11 187 28 view .LVU132
 596 0052 2868     		ldr	r0, [r5]
 597              	.LVL36:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 598              		.loc 11 187 28 view .LVU133
 599              	.LBE1658:
 600              	.LBE1667:
 601              	.LBE1675:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 602              		.loc 11 214 7 is_stmt 1 view .LVU134
 603              	.LBB1676:
 604              	.LBB1668:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 605              		.loc 11 182 7 view .LVU135
 606              	.LBE1668:
 607              	.LBB1669:
 608              	.LBB1650:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 609              		.loc 12 322 14 is_stmt 0 view .LVU136
 610 0054 0023     		movs	r3, #0
 611              	.LBE1650:
 612              	.LBE1669:
 613              	.LBB1670:
 614              	.LBB1655:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 615              		.loc 11 183 26 view .LVU137
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 60


 616 0056 6C60     		str	r4, [r5, #4]
 617              	.LVL37:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 618              		.loc 11 183 26 view .LVU138
 619              	.LBE1655:
 620              	.LBE1670:
 621              	.LBB1671:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 622              		.loc 11 186 7 is_stmt 1 view .LVU139
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 623              		.loc 11 186 7 is_stmt 0 view .LVU140
 624              	.LBE1671:
 625              	.LBB1672:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 626              		.loc 12 321 7 is_stmt 1 view .LVU141
 627              	.LBB1651:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 628              		.loc 12 322 9 view .LVU142
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 629              		.loc 12 322 14 is_stmt 0 view .LVU143
 630 0058 0355     		strb	r3, [r0, r4]
 631              	.LVL38:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 632              		.loc 12 322 14 view .LVU144
 633              	.LBE1651:
 634              	.LBE1672:
 635              	.LBE1676:
 636              	.LBE1690:
 637              		.loc 9 233 7 view .LVU145
 638 005a 02B0     		add	sp, sp, #8
 639              		.cfi_remember_state
 640              		.cfi_def_cfa_offset 16
 641              		@ sp needed
 642 005c 70BD     		pop	{r4, r5, r6, pc}
 643              	.LVL39:
 644              	.L38:
 645              		.cfi_restore_state
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 646              		.loc 9 212 28 view .LVU146
 647 005e 0148     		ldr	r0, .L40
 648              	.LVL40:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 649              		.loc 9 212 28 view .LVU147
 650 0060 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 651              	.LVL41:
 652              	.L41:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 653              		.loc 9 212 28 view .LVU148
 654              		.align	2
 655              	.L40:
 656 0064 00000000 		.word	.LC0
 657              		.cfi_endproc
 658              	.LFE5514:
 660              		.section	.rodata._ZNSt6vectorIfSaIfEE13_M_assign_auxIPKfEEvT_S5_St20forward_iterator_tag.isra.0.st
 661              		.align	2
 662              	.LC1:
 663 0000 63616E6E 		.ascii	"cannot create std::vector larger than max_size()\000"
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 61


 663      6F742063 
 663      72656174 
 663      65207374 
 663      643A3A76 
 664              		.section	.text._ZNSt6vectorIfSaIfEE13_M_assign_auxIPKfEEvT_S5_St20forward_iterator_tag.isra.0,"axG
 665              		.align	1
 666              		.p2align 2,,3
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 670              		.fpu fpv5-d16
 672              	_ZNSt6vectorIfSaIfEE13_M_assign_auxIPKfEEvT_S5_St20forward_iterator_tag.isra.0:
 673              	.LVL42:
 674              	.LFB5510:
 675              		.file 13 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\vector.tcc
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Vector implementation (out of line) -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1996
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 62


  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this  software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /** @file bits/vector.tcc
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #ifndef _VECTOR_TCC
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #define _VECTOR_TCC 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** {
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     reserve(size_type __n)
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > this->max_size())
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->capacity() < __n)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __old_size = size();
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  pointer __tmp;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = this->_M_allocate(__n);
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  __tmp, _M_get_Tp_allocator());
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = _M_allocate_and_copy(__n,
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_end_of_storage
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			- this->_M_impl._M_start);
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_start = __tmp;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = __tmp + __old_size;
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 63


 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       typename vector<_Tp, _Alloc>::reference
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::forward<_Args>(__args)...);
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return back();
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(const_iterator __position, const value_type& __x)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(iterator __position, const value_type& __x)
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __n = __position - begin();
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == end())
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     __x);
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const auto __pos = begin() + (__position - cbegin());
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // __x could be an existing element of this vector, so make a
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // copy of it before _M_insert_aux moves elements around.
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Temporary_value __x_copy(this, __x);
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__pos, std::move(__x_copy._M_val()));
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__position, __x);
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 64


 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + (__position - cbegin()), __x);
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(__position, __x);
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __position)
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__position + 1 != end())
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       --this->_M_impl._M_finish;
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __position;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __first, iterator __last)
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__first != __last)
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__last != end())
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_MOVE3(__last, end(), __first);
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__first.base() + (end() - __last));
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __first;
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>&
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     operator=(const vector<_Tp, _Alloc>& __x)
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (&__x != this)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      if (!_Alloc_traits::_S_always_equal()
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	        {
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  // replacement allocator cannot free existing storage
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->clear();
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_deallocate(this->_M_impl._M_start,
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				this->_M_impl._M_end_of_storage
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 65


 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				- this->_M_impl._M_start);
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_start = nullptr;
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish = nullptr;
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_end_of_storage = nullptr;
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x._M_get_Tp_allocator());
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __xlen = __x.size();
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__xlen > capacity())
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						   __x.end());
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __tmp;
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else if (size() >= __xlen)
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    end(), _M_get_Tp_allocator());
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_start);
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __x._M_impl._M_finish,
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return *this;
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_fill_assign(size_t __n, const value_type& __val)
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > capacity())
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  vector __tmp(__n, __val, _M_get_Tp_allocator());
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __tmp._M_impl._M_swap_data(this->_M_impl);
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else if (__n > size())
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::fill(begin(), end(), __val);
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __add = __n - size();
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GROW(__add);
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish =
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 66


 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __add, __val, _M_get_Tp_allocator());
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GREW(__add);
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****         _M_erase_at_end(std::fill_n(this->_M_impl._M_start, __n, __val));
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _InputIterator>
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_InputIterator __first, _InputIterator __last,
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::input_iterator_tag)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	pointer __cur(this->_M_impl._M_start);
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	for (; __first != __last && __cur != this->_M_impl._M_finish;
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	     ++__cur, (void)++__first)
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  *__cur = *__first;
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__first == __last)
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__cur);
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_range_insert(end(), __first, __last,
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  std::__iterator_category(__first));
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _ForwardIterator>
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 676              		.loc 13 300 7 is_stmt 1 view -0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 0
 679              		@ frame_needed = 0, uses_anonymous_args = 0
 680              		.loc 13 300 7 is_stmt 0 view .LVU150
 681 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 682              		.cfi_def_cfa_offset 32
 683              		.cfi_offset 4, -32
 684              		.cfi_offset 5, -28
 685              		.cfi_offset 6, -24
 686              		.cfi_offset 7, -20
 687              		.cfi_offset 8, -16
 688              		.cfi_offset 9, -12
 689              		.cfi_offset 10, -8
 690              		.cfi_offset 14, -4
 691              	.LBB1767:
 692              	.LBB1768:
 693              	.LBB1769:
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 694              		.loc 8 1000 5 view .LVU151
 695 0004 8368     		ldr	r3, [r0, #8]
 696              	.LBE1769:
 697              	.LBE1768:
 698              	.LBE1767:
 699              	.LBB1882:
 700              	.LBB1883:
 701              	.LBB1884:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 67


 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 702              		.loc 10 104 21 view .LVU152
 703 0006 551A     		subs	r5, r2, r1
 704              	.LBE1884:
 705              	.LBE1883:
 706              	.LBE1882:
 707              	.LBB1886:
 708              	.LBB1772:
 709              	.LBB1770:
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 710              		.loc 8 1000 21 view .LVU153
 711 0008 D0F80090 		ldr	r9, [r0]
 712              	.LBE1770:
 713              	.LBE1772:
 714              	.LBE1886:
 715              		.loc 13 300 7 view .LVU154
 716 000c 0446     		mov	r4, r0
 717 000e 0E46     		mov	r6, r1
 718              	.LVL43:
 719              		.loc 13 300 7 view .LVU155
 720 0010 1746     		mov	r7, r2
 721              	.LVL44:
 722              	.LBB1887:
 723              	.LBI1882:
 724              		.loc 10 138 5 is_stmt 1 view .LVU156
 725              	.LBB1885:
 726              	.LBI1883:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 727              		.loc 10 98 5 view .LVU157
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 728              		.loc 10 98 5 is_stmt 0 view .LVU158
 729              	.LBE1885:
 730              	.LBE1887:
 731              	.LBB1888:
 732              	.LBB1773:
 733              	.LBI1768:
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 734              		.loc 8 998 7 is_stmt 1 view .LVU159
 735              	.LBB1771:
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 736              		.loc 8 1000 5 is_stmt 0 view .LVU160
 737 0012 A3EB0908 		sub	r8, r3, r9
 738              	.LVL45:
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 739              		.loc 8 1000 5 view .LVU161
 740              	.LBE1771:
 741              	.LBE1773:
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::forward_iterator_tag)
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const size_type __len = std::distance(__first, __last);
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__len > capacity())
 742              		.loc 13 306 2 view .LVU162
 743 0016 4545     		cmp	r5, r8
 744 0018 20D9     		bls	.L43
 745              	.LVL46:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 68


 746              	.LBB1774:
 747              	.LBB1775:
 748              	.LBI1775:
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Safety check used only from at().
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_range_check(size_type __n) const
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n >= this->size())
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu) >= this->size() "
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu)"),
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				   __n, this->size());
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n)
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 69


1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n) const
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the first
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the last
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element of the %vector.
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 70


1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // data access
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp*
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp*
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.3] modifiers
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Add data to the end of the %vector.
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be added.
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation.  The function creates an
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element at the end of the %vector and assigns the given data
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  done in constant time if the %vector has preallocated space
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  available.
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(const value_type& __x)
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     __x);
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    ++this->_M_impl._M_finish;
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_realloc_insert(end(), __x);
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(value_type&& __x)
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201402L
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	reference
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace_back(_Args&&... __args);
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 71


1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Removes last element.
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that no data is returned, and if the last element's
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  called.
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	--this->_M_impl._M_finish;
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __args  Arguments.
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert an object of type T constructed
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and if it is frequently used the user should consider using
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::list.
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 72


1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, const value_type& __x);
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  specified by @a position.
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	auto __offset = __position - cbegin();
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			std::random_access_iterator_tag());
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 73


1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	difference_type __offset = __position - cbegin();
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     __first, __last, __false_type());
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  return begin() + __offset;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 74


1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove element at given position.
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the element at the given position and thus
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  shorten the %vector by one.
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointer is the user's responsibility.
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __position)
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __position)
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__position); }
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove a range of elements.
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *                  erased.
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 75


1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *           prior to erasing (or end()).
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the elements in the range
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the elements, and that if the elements themselves are
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __beg = begin();
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __cbeg = cbegin();
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __first, iterator __last)
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__first, __last); }
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Swaps data with another %vector.
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				  __x._M_get_Tp_allocator());
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the user's responsibility.
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 76


1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      return __result;
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __catch(...)
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _M_deallocate(__result, __n);
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __throw_exception_again;
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal constructor functions follow.
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(_S_check_init_len(
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		static_cast<size_type>(__n), _M_get_Tp_allocator()));
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			       __false_type)
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 77


1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::input_iterator_tag)
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try {
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    for (; __first != __last; ++__first)
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      emplace_back(*__first);
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      push_back(*__first);
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  } __catch(...) {
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    clear();
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __throw_exception_again;
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					this->_M_impl._M_start,
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // vector(n,value,a) constructor.
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the vector(n) constructor.
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_initialize(size_type __n)
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					   _M_get_Tp_allocator());
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // assignment work for the range versions.
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 78


1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_assign(__n, __val); }
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __false_type)
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::input_iterator_tag);
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::forward_iterator_tag);
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // to be the same thing.
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal insert functions follow.
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __true_type)
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_insert(__pos, __n, __val); }
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _InputIterator __first,
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   _InputIterator __last, __false_type)
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_insert(__pos, __first, __last,
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  std::__iterator_category(__first));
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 79


1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _InputIterator __first,
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _ForwardIterator __first,
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // the same thing.
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by resize(n).
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_append(size_type __n);
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       bool
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_shrink_to_fit();
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x)
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_realloc_insert(iterator __position, const value_type& __x);
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // A value_type object constructed with _Alloc_traits::construct()
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // and destroyed with _Alloc_traits::destroy().
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Temporary_value
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename... _Args>
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  explicit
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     std::forward<_Args>(__args)...);
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	~_Temporary_value()
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	value_type&
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_val() { return *_M_ptr(); }
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       private:
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Tp*
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_ptr() { return reinterpret_cast<_Tp*>(&__buf); }
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector* _M_this;
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 80


1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x) and other functions when insertion needs to
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Arg>
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_aux(iterator __position, _Arg&& __arg);
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_realloc_insert(iterator __position, _Args&&... __args);
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Either move-construct at the end, or forward to _M_insert_aux.
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_rval(const_iterator __position, value_type&& __v);
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Try to emplace at the end, otherwise forward to _M_insert_aux.
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_emplace_aux(const_iterator __position, _Args&&... __args);
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Emplacing an rvalue of the correct type can use _M_insert_rval.
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_emplace_aux(const_iterator __position, value_type&& __v)
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__v)); }
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by _M_fill_insert, _M_insert_aux etc.
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (max_size() - size() < __n)
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_type __len = size() + (std::max)(size(), __n);
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by constructors to check initial size.
1766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_check_init_len(size_type __n, const allocator_type& __a)
 749              		.loc 8 1767 7 is_stmt 1 view .LVU163
 750              	.LBB1776:
 751              	.LBB1777:
 752              	.LBI1777:
 753              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\allocator.
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 81


  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /** @file bits/allocator.h
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <type_traits>
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** {
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @addtogroup allocators
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @{
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator<void>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void        value_type;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t      size_type;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 82


  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void*       pointer;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #else
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() = default;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	constexpr
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // ! C++20
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	destroy(_Up* __p)
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ __p->~_Up(); }
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // C++11 to C++17
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     };
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  for further details.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<typename _Tp>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp        value_type;
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t     size_type;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 83


 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 754              		.loc 14 147 7 view .LVU164
 755              	.LBB1778:
 756              	.LBI1778:
 757              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\new_allocat
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 84


  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <new>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <type_traits>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** {
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   /**
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    */
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   template<typename _Tp>
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     class new_allocator
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::size_t     size_type;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	struct rebind
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 758              		.loc 15 82 7 view .LVU165
 759              		.loc 15 82 7 is_stmt 0 view .LVU166
 760              	.LBE1778:
 761              	.LBE1777:
 762              	.LBB1779:
 763              	.LBI1779:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 85


 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // Avoid implicit deprecation.
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator& operator=(const allocator&) = default;
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	_GLIBCXX20_CONSTEXPR
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cpp_constexpr_dynamic_alloc
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       constexpr
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 764              		.loc 14 162 7 is_stmt 1 view .LVU167
 765              	.LBB1780:
 766              	.LBI1780:
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 767              		.loc 15 89 7 view .LVU168
 768              	.LBE1780:
 769              	.LBE1779:
1768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n > _S_max_size(_Tp_alloc_type(__a)))
 770              		.loc 8 1769 2 is_stmt 0 view .LVU169
 771 001a 274B     		ldr	r3, .L60
 772 001c 9D42     		cmp	r5, r3
 773 001e 48D8     		bhi	.L59
 774              	.LVL47:
 775              		.loc 8 1769 2 view .LVU170
 776              	.LBE1776:
 777              	.LBE1775:
 778              	.LBB1782:
 779              	.LBI1782:
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
 780              		.loc 8 1508 2 is_stmt 1 view .LVU171
 781              	.LBB1783:
 782              	.LBB1784:
 783              	.LBI1784:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 784              		.loc 8 343 7 view .LVU172
 785              	.LBB1785:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 786              		.loc 8 346 18 is_stmt 0 view .LVU173
 787 0020 75B3     		cbz	r5, .L53
 788              	.LVL48:
 789              	.LBB1786:
 790              	.LBI1786:
 791              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\alloc_trai
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 86


   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** /** @file bits/alloc_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/stl_construct.h>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/memoryfwd.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/allocator.h>
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/ptr_traits.h>
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <ext/numeric_traits.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** {
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   struct __allocator_traits_base
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   protected:
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pointer = typename _Tp::pointer;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 87


  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   };
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using __alloc_rebind
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @ingroup allocators
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   */
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef _Alloc allocator_type;
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 88


 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's difference type
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's size type
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 89


 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr pointer
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct __construct_helper
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename _Alloc2,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static true_type __test(int);
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 90


 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename>
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static false_type __test(...);
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using __has_construct
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.max_size())
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.max_size(); }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr size_type
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 91


 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    / sizeof(value_type);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr _Alloc2
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a; }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 92


 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  arguments @a __args...
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus > 201703L
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 93


 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using value_type = _Tp;
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's pointer type.
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = _Tp*;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const pointer type.
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = const _Tp*;
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's void pointer type.
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = void*;
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const void pointer type.
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = const void*;
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's difference type
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's size type
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = std::size_t;
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on swap
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal = true_type;
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 94


 792              		.loc 16 459 7 is_stmt 1 view .LVU174
 793              	.LBB1787:
 794              	.LBI1787:
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       pointer
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       const_pointer
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 795              		.loc 15 103 7 view .LVU175
 796              	.LBB1788:
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (__n > this->_M_max_size())
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 797              		.loc 15 115 41 is_stmt 0 view .LVU176
 798 0022 2846     		mov	r0, r5
 799              	.LVL49:
 800              		.loc 15 115 41 view .LVU177
 801 0024 FFF7FEFF 		bl	_Znwj
 802              	.LVL50:
 803              		.loc 15 115 41 view .LVU178
 804              	.LBE1788:
 805              	.LBE1787:
 806              	.LBE1786:
 807              	.LBE1785:
 808              	.LBE1784:
 809              	.LBE1783:
 810              	.LBE1782:
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _S_check_init_len(__len, _M_get_Tp_allocator());
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 811              		.loc 13 310 19 view .LVU179
 812 0028 D4F80090 		ldr	r9, [r4]
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  _M_get_Tp_allocator());
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_REINIT;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_deallocate(this->_M_impl._M_start,
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  this->_M_impl._M_end_of_storage
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  - this->_M_impl._M_start);
 813              		.loc 13 315 6 view .LVU180
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 95


 814 002c A368     		ldr	r3, [r4, #8]
 815              	.LBB1810:
 816              	.LBB1807:
 817              	.LBB1794:
 818              	.LBB1792:
 819              	.LBB1791:
 820              	.LBB1790:
 821              	.LBB1789:
 822              		.loc 15 115 41 view .LVU181
 823 002e 8246     		mov	r10, r0
 824              	.LVL51:
 825              		.loc 15 115 41 view .LVU182
 826              	.LBE1789:
 827              	.LBE1790:
 828              	.LBE1791:
 829              	.LBE1792:
 830              	.LBE1794:
 831              	.LBE1807:
 832              	.LBE1810:
 833              		.loc 13 315 6 view .LVU183
 834 0030 A3EB0908 		sub	r8, r3, r9
 835              	.L45:
 836              	.LVL52:
 837              	.LBB1811:
 838              	.LBB1808:
 839              	.LBB1795:
 840              	.LBI1795:
 841              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_uninit
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 96


  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus > 201402L
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <bits/stl_pair.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <type_traits>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <ext/alloc_traits.h>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** {
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /** @addtogroup memory
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @{
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    */
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 97


  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy<true>
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType1;
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::copy
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType2, decltype(*__first)>::value,
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from value type of input range");
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::copy
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::copy:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 98


 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill<true>
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 99


 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       const _Tp& __x)
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 100


 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  any of the POD optimizations.
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 101


 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 842              		.loc 17 323 5 is_stmt 1 view .LVU184
 843              	.LBB1796:
 844              	.LBI1796:
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 845              		.loc 17 125 5 view .LVU185
 846              	.LBB1797:
 847              	.LBB1798:
 848              	.LBI1798:
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 849              		.loc 17 107 9 view .LVU186
 850              	.LBB1799:
 851              	.LBI1799:
 852              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_algoba
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 102


  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** /** @file bits/stl_algobase.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/c++config.h>
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/functexcept.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/type_traits.h>
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <ext/numeric_traits.h>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_pair.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/stl_iterator.h>
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/concept_check.h>
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <debug/debug.h>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #include <bits/predefined_ops.h>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <type_traits>
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus > 201703L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** # include <compare>
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /*
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    */
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline int
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 103


  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return 0;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       else
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _BoolType>
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    _ValueType1;
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__a = *__b;
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  *__b = __tmp;
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __iter_swap<true>
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static void
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  swap(*__a, *__b);
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif // C++03
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  An iterator.
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another iterator.
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   Nothing.
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  iterators themselves.
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 104


 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline void
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus < 201103L
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType1;
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ValueType2;
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType2>)
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ValueType1>)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType1;
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_ReferenceType2;
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	iter_swap(__a, __b);
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #else
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // 187. iter_swap underspecified
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       swap(*__a, *__b);
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  The ranges must not overlap.
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _ForwardIterator2
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator1>)
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 105


 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				  _ForwardIterator2>)
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __first2;
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__b < __a)
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  preprocessor macro.
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp>
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       // concept requirements
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__a < __b)
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 106


 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__b, __a))
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief This does what you think it does.
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup sorting_algorithms
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   The greater of the parameters.
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline const _Tp&
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (__comp(__a, __b))
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return __b;
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return __a;
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_base(_Iterator __it)
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __it; }
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _From, typename _To>
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 107


 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _From
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Iterator>
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _Iterator
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return __res; }
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // a for loop with an explicit count.
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = *__first;
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Category>
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    *__result = std::move(*__first);
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 108


 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = *__first;
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _II, typename _OI>
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _OI
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    {
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      *__result = std::move(*__first);
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__first;
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	      ++__result;
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    }
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result;
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove>
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       template<typename _Tp>
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	static _Tp*
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #if __cplusplus >= 201103L
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     };
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct char_traits;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 109


 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class istreambuf_iterator;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     class ostreambuf_iterator;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 				    _CharT*>::__type
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       if (std::is_constant_evaluated())
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** #endif
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     struct _Deque_iterator;
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _OI);
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 110


 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****       return std::__niter_wrap(__result,
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__last),
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 					     std::__niter_base(__result)));
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     }
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _OI
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  _OI);
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(_II, _II,
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<bool _IsMove,
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   /**
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __first  An input iterator.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __last   An input iterator.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @param  __result An output iterator.
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  @return   result + (last - first)
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 111


 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****    *  within [first,last).
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   */
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****   template<typename _II, typename _OI>
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     inline _OI
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 853              		.loc 18 560 5 view .LVU187
 854              	.LBB1800:
 855              	.LBI1800:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 856              		.loc 18 511 5 view .LVU188
 857              	.LBB1801:
 858              	.LBI1801:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 859              		.loc 18 505 5 view .LVU189
 860              	.LBB1802:
 861              	.LBI1802:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 862              		.loc 18 463 5 view .LVU190
 863              	.LBB1803:
 864              	.LBB1804:
 865              	.LBI1804:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 866              		.loc 18 415 2 view .LVU191
 867              	.LBB1805:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 868              		.loc 18 425 4 is_stmt 0 view .LVU192
 869 0034 B742     		cmp	r7, r6
 870 0036 04D0     		beq	.L46
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 871              		.loc 18 426 23 view .LVU193
 872 0038 3146     		mov	r1, r6
 873 003a 2A46     		mov	r2, r5
 874 003c 5046     		mov	r0, r10
 875 003e FFF7FEFF 		bl	memcpy
 876              	.LVL53:
 877              	.L46:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 878              		.loc 18 426 23 view .LVU194
 879              	.LBE1805:
 880              	.LBE1804:
 881              	.LBE1803:
 882              	.LBE1802:
 883              	.LBE1801:
 884              	.LBE1800:
 885              	.LBE1799:
 886              	.LBE1798:
 887              	.LBE1797:
 888              	.LBE1796:
 889              	.LBE1795:
 890              	.LBE1808:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 112


 891              	.LBE1811:
 892              	.LBB1812:
 893              	.LBI1812:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 894              		.loc 8 350 7 is_stmt 1 view .LVU195
 895              	.LBB1813:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 896              		.loc 8 353 2 is_stmt 0 view .LVU196
 897 0042 B9F1000F 		cmp	r9, #0
 898 0046 03D0     		beq	.L47
 899              	.LVL54:
 900              	.LBB1814:
 901              	.LBI1814:
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n);
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 902              		.loc 16 491 7 is_stmt 1 view .LVU197
 903              	.LBB1815:
 904              	.LBB1816:
 905              	.LBI1816:
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 906              		.loc 15 120 7 view .LVU198
 907              	.LBB1817:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 113


 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    ::operator delete(__p,
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # if __cpp_sized_deallocation
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      __t * sizeof(_Tp),
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # endif
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return;
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	::operator delete(__p
 908              		.loc 15 133 19 is_stmt 0 view .LVU199
 909 0048 4146     		mov	r1, r8
 910 004a 4846     		mov	r0, r9
 911 004c FFF7FEFF 		bl	_ZdlPvj
 912              	.LVL55:
 913              	.L47:
 914              		.loc 15 133 19 view .LVU200
 915              	.LBE1817:
 916              	.LBE1816:
 917              	.LBE1815:
 918              	.LBE1814:
 919              	.LBE1813:
 920              	.LBE1812:
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_start = __tmp;
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish = this->_M_impl._M_start + __len;
 921              		.loc 13 317 55 view .LVU201
 922 0050 5544     		add	r5, r5, r10
 923              	.LVL56:
 924              		.loc 13 317 30 view .LVU202
 925 0052 C4E900A5 		strd	r10, r5, [r4]
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_end_of_storage = this->_M_impl._M_finish;
 926              		.loc 13 318 38 view .LVU203
 927 0056 A560     		str	r5, [r4, #8]
 928              	.LVL57:
 929              	.L42:
 930              		.loc 13 318 38 view .LVU204
 931              	.LBE1774:
 932              	.LBE1888:
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else if (size() >= __len)
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(std::copy(__first, __last, this->_M_impl._M_start));
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _ForwardIterator __mid = __first;
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::advance(__mid, size());
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::copy(__first, __mid, this->_M_impl._M_start);
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const size_type __attribute__((__unused__)) __n = __len - size();
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish =
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__mid, __last,
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 114


 933              		.loc 13 335 7 view .LVU205
 934 0058 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 935              	.LVL58:
 936              	.L43:
 937              	.LBB1889:
 938              	.LBB1820:
 939              	.LBB1821:
 940              	.LBI1821:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 941              		.loc 8 918 7 is_stmt 1 view .LVU206
 942              	.LBB1822:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 943              		.loc 8 919 40 is_stmt 0 view .LVU207
 944 005c 4368     		ldr	r3, [r0, #4]
 945              	.LVL59:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 946              		.loc 8 919 50 view .LVU208
 947 005e A3EB0902 		sub	r2, r3, r9
 948              	.LVL60:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 949              		.loc 8 919 50 view .LVU209
 950              	.LBE1822:
 951              	.LBE1821:
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(std::copy(__first, __last, this->_M_impl._M_start));
 952              		.loc 13 320 7 view .LVU210
 953 0062 9542     		cmp	r5, r2
 954 0064 0ED8     		bhi	.L49
 955              	.LVL61:
 956              	.LBB1823:
 957              	.LBI1823:
 958              		.loc 18 560 5 is_stmt 1 view .LVU211
 959              	.LBB1824:
 960              	.LBI1824:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 961              		.loc 18 511 5 view .LVU212
 962              	.LBB1825:
 963              	.LBI1825:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 964              		.loc 18 505 5 view .LVU213
 965              	.LBB1826:
 966              	.LBI1826:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 967              		.loc 18 463 5 view .LVU214
 968              	.LBB1827:
 969              	.LBB1828:
 970              	.LBI1828:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 971              		.loc 18 415 2 view .LVU215
 972              	.LBB1829:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 973              		.loc 18 425 4 is_stmt 0 view .LVU216
 974 0066 8F42     		cmp	r7, r1
 975 0068 04D0     		beq	.L50
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 976              		.loc 18 426 23 view .LVU217
 977 006a 2A46     		mov	r2, r5
 978 006c 4846     		mov	r0, r9
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 115


 979              	.LVL62:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 980              		.loc 18 426 23 view .LVU218
 981 006e FFF7FEFF 		bl	memmove
 982              	.LVL63:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 983              		.loc 18 426 23 view .LVU219
 984              	.LBE1829:
 985              	.LBE1828:
 986              	.LBE1827:
 987              	.LBE1826:
 988              	.LBE1825:
 989              	.LBE1824:
 990              	.LBE1823:
 991              	.LBB1836:
 992              	.LBB1837:
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(
1771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
1772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n;
1773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static size_type
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
1777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
1779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
1780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// (even if std::allocator_traits::max_size says we can).
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __diffmax
1782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const size_t __allocmax = _Alloc_traits::max_size(__a);
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (std::min)(__diffmax, __allocmax);
1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal erase functions follow.
1788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _M_assign_aux.
1791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
1793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (size_type __n = this->_M_impl._M_finish - __pos)
 993              		.loc 8 1794 36 view .LVU220
 994 0072 6368     		ldr	r3, [r4, #4]
 995              	.L50:
 996              		.loc 8 1794 36 view .LVU221
 997              	.LBE1837:
 998              	.LBE1836:
 999              	.LBB1839:
 1000              	.LBB1835:
 1001              	.LBB1834:
 1002              	.LBB1833:
 1003              	.LBB1832:
 1004              	.LBB1831:
 1005              	.LBB1830:
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 1006              		.loc 18 427 22 view .LVU222
 1007 0074 4D44     		add	r5, r5, r9
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 116


 1008              	.LVL64:
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 1009              		.loc 18 427 22 view .LVU223
 1010              	.LBE1830:
 1011              	.LBE1831:
 1012              	.LBE1832:
 1013              	.LBE1833:
 1014              	.LBE1834:
 1015              	.LBE1835:
 1016              	.LBE1839:
 1017              	.LBB1840:
 1018              	.LBI1836:
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1019              		.loc 8 1792 7 is_stmt 1 view .LVU224
 1020              	.LBB1838:
 1021              		.loc 8 1794 2 is_stmt 0 view .LVU225
 1022 0076 9D42     		cmp	r5, r3
 1023 0078 EED0     		beq	.L42
1795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::_Destroy(__pos, this->_M_impl._M_finish,
1797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  _M_get_Tp_allocator());
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish = __pos;
 1024              		.loc 8 1798 30 view .LVU226
 1025 007a 6560     		str	r5, [r4, #4]
 1026              	.LVL65:
 1027              		.loc 8 1798 30 view .LVU227
 1028              	.LBE1838:
 1029              	.LBE1840:
 1030              	.LBE1820:
 1031              	.LBE1889:
 1032              		.loc 13 335 7 view .LVU228
 1033 007c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1034              	.LVL66:
 1035              	.L53:
 1036              	.LBB1890:
 1037              	.LBB1878:
 1038              	.LBB1818:
 1039              	.LBB1809:
 1040              	.LBB1806:
 1041              	.LBB1793:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 1042              		.loc 8 346 18 view .LVU229
 1043 0080 AA46     		mov	r10, r5
 1044 0082 D7E7     		b	.L45
 1045              	.LVL67:
 1046              	.L49:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 1047              		.loc 8 346 18 view .LVU230
 1048              	.LBE1793:
 1049              	.LBE1806:
 1050              	.LBE1809:
 1051              	.LBE1818:
 1052              	.LBE1878:
 1053              	.LBB1879:
 1054              	.LBB1841:
 1055              	.LBB1842:
 1056              	.LBI1842:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 117


 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements -- taken care of in __distance
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       return std::__distance(__first, __last,
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 			     std::__iterator_category(__first));
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _InputIterator, typename _Distance>
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR void
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __advance(_InputIterator& __i, _Distance __n, input_iterator_tag)
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_assert(__n >= 0);
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       while (__n--)
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	++__i;
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _BidirectionalIterator, typename _Distance>
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR void
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __advance(_BidirectionalIterator& __i, _Distance __n,
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	      bidirectional_iterator_tag)
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 				  _BidirectionalIterator>)
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       if (__n > 0)
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****         while (__n--)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	  ++__i;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       else
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****         while (__n++)
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	  --__i;
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _RandomAccessIterator, typename _Distance>
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR void
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     __advance(_RandomAccessIterator& __i, _Distance __n,
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****               random_access_iterator_tag)
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       // concept requirements
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_RandomAccessIteratorConcept<
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 				  _RandomAccessIterator>)
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       if (__builtin_constant_p(__n) && __n == 1)
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	++__i;
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       else if (__builtin_constant_p(__n) && __n == -1)
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	--__i;
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****       else
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 	__i += __n;
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h **** 
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   /**
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @brief A generalization of pointer arithmetic.
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @param  __i  An input iterator.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @param  __n  The @a delta by which to change @p __i.
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  @return  Nothing.
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  This increments @p i by @p n.  For bidirectional and random access
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  iterators, @p __n may be negative, in which case @p __i is decremented.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 118


 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  For random access iterators, this uses their @c + and @c - operations
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****    *  and are constant time.  For other %iterator classes they are linear time.
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   */
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****   template<typename _InputIterator, typename _Distance>
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     inline _GLIBCXX17_CONSTEXPR void
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     advance(_InputIterator& __i, _Distance __n)
 1057              		.loc 10 202 5 is_stmt 1 view .LVU231
 1058              	.LBB1843:
 1059              	.LBB1844:
 1060              	.LBI1844:
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****               random_access_iterator_tag)
 1061              		.loc 10 174 5 view .LVU232
 1062              	.LBB1845:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 1063              		.loc 10 185 6 is_stmt 0 view .LVU233
 1064 0084 8D18     		adds	r5, r1, r2
 1065              	.LVL68:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 1066              		.loc 10 185 6 view .LVU234
 1067              	.LBE1845:
 1068              	.LBE1844:
 1069              	.LBE1843:
 1070              	.LBE1842:
 1071              	.LBB1846:
 1072              	.LBI1846:
 1073              		.loc 18 560 5 is_stmt 1 view .LVU235
 1074              	.LBB1847:
 1075              	.LBI1847:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1076              		.loc 18 511 5 view .LVU236
 1077              	.LBB1848:
 1078              	.LBI1848:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 1079              		.loc 18 505 5 view .LVU237
 1080              	.LBB1849:
 1081              	.LBI1849:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1082              		.loc 18 463 5 view .LVU238
 1083              	.LBB1850:
 1084              	.LBB1851:
 1085              	.LBI1851:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 1086              		.loc 18 415 2 view .LVU239
 1087              	.LBB1852:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1088              		.loc 18 425 4 is_stmt 0 view .LVU240
 1089 0086 A942     		cmp	r1, r5
 1090 0088 03D0     		beq	.L51
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1091              		.loc 18 426 23 view .LVU241
 1092 008a 4846     		mov	r0, r9
 1093              	.LVL69:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1094              		.loc 18 426 23 view .LVU242
 1095 008c FFF7FEFF 		bl	memmove
 1096              	.LVL70:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 119


 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1097              		.loc 18 426 23 view .LVU243
 1098              	.LBE1852:
 1099              	.LBE1851:
 1100              	.LBE1850:
 1101              	.LBE1849:
 1102              	.LBE1848:
 1103              	.LBE1847:
 1104              	.LBE1846:
 1105              	.LBB1853:
 1106              	.LBB1854:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 1107              		.loc 8 919 40 view .LVU244
 1108 0090 6368     		ldr	r3, [r4, #4]
 1109              	.L51:
 1110              	.LVL71:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 1111              		.loc 8 919 40 view .LVU245
 1112              	.LBE1854:
 1113              	.LBI1853:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 1114              		.loc 8 918 7 is_stmt 1 view .LVU246
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 1115              		.loc 8 918 7 is_stmt 0 view .LVU247
 1116              	.LBE1853:
 1117              	.LBB1855:
 1118              	.LBI1855:
 1119              		.loc 17 323 5 is_stmt 1 view .LVU248
 1120              	.LBB1856:
 1121              	.LBI1856:
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 1122              		.loc 17 125 5 view .LVU249
 1123              	.LBB1857:
 1124              	.LBB1858:
 1125              	.LBI1858:
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 1126              		.loc 17 107 9 view .LVU250
 1127              	.LBB1859:
 1128              	.LBI1859:
 1129              		.loc 18 560 5 view .LVU251
 1130              	.LBB1860:
 1131              	.LBI1860:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1132              		.loc 18 511 5 view .LVU252
 1133              	.LBB1861:
 1134              	.LBI1861:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 1135              		.loc 18 505 5 view .LVU253
 1136              	.LBB1862:
 1137              	.LBI1862:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 1138              		.loc 18 463 5 view .LVU254
 1139              	.LBB1863:
 1140              	.LBB1864:
 1141              	.LBI1864:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 1142              		.loc 18 415 2 view .LVU255
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 120


 1143              	.LBB1865:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1144              		.loc 18 425 4 is_stmt 0 view .LVU256
 1145 0092 AF42     		cmp	r7, r5
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 1146              		.loc 18 424 34 view .LVU257
 1147 0094 A7EB0506 		sub	r6, r7, r5
 1148              	.LVL72:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 1149              		.loc 18 425 4 view .LVU258
 1150 0098 09D0     		beq	.L54
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1151              		.loc 18 426 23 view .LVU259
 1152 009a 1846     		mov	r0, r3
 1153 009c 2946     		mov	r1, r5
 1154 009e 3246     		mov	r2, r6
 1155 00a0 FFF7FEFF 		bl	memmove
 1156              	.LVL73:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 1157              		.loc 18 426 23 view .LVU260
 1158 00a4 0346     		mov	r3, r0
 1159              	.LVL74:
 1160              	.L52:
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	}
 1161              		.loc 18 427 22 view .LVU261
 1162 00a6 3344     		add	r3, r3, r6
 1163              	.LBE1865:
 1164              	.LBE1864:
 1165              	.LBE1863:
 1166              	.LBE1862:
 1167              	.LBE1861:
 1168              	.LBE1860:
 1169              	.LBE1859:
 1170              	.LBE1858:
 1171              	.LBE1857:
 1172              	.LBE1856:
 1173              	.LBE1855:
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__mid, __last,
 1174              		.loc 13 329 30 view .LVU262
 1175 00a8 6360     		str	r3, [r4, #4]
 1176              	.LVL75:
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__mid, __last,
 1177              		.loc 13 329 30 view .LVU263
 1178              	.LBE1841:
 1179              	.LBE1879:
 1180              	.LBE1890:
 1181              		.loc 13 335 7 view .LVU264
 1182 00aa BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1183              	.LVL76:
 1184              	.L54:
 1185              	.LBB1891:
 1186              	.LBB1880:
 1187              	.LBB1877:
 1188              	.LBB1876:
 1189              	.LBB1875:
 1190              	.LBB1874:
 1191              	.LBB1873:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 121


 1192              	.LBB1872:
 1193              	.LBB1871:
 1194              	.LBB1870:
 1195              	.LBB1869:
 1196              	.LBB1868:
 1197              	.LBB1867:
 1198              	.LBB1866:
 1199              		.loc 13 335 7 view .LVU265
 1200 00ae 0026     		movs	r6, #0
 1201              	.LVL77:
 1202              		.loc 13 335 7 view .LVU266
 1203 00b0 F9E7     		b	.L52
 1204              	.LVL78:
 1205              	.L59:
 1206              		.loc 13 335 7 view .LVU267
 1207              	.LBE1866:
 1208              	.LBE1867:
 1209              	.LBE1868:
 1210              	.LBE1869:
 1211              	.LBE1870:
 1212              	.LBE1871:
 1213              	.LBE1872:
 1214              	.LBE1873:
 1215              	.LBE1874:
 1216              	.LBE1875:
 1217              	.LBE1876:
 1218              	.LBE1877:
 1219              	.LBE1880:
 1220              	.LBB1881:
 1221              	.LBB1819:
 1222              	.LBB1781:
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 1223              		.loc 8 1770 24 view .LVU268
 1224 00b2 0248     		ldr	r0, .L60+4
 1225              	.LVL79:
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 1226              		.loc 8 1770 24 view .LVU269
 1227 00b4 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 1228              	.LVL80:
 1229              	.L61:
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __N("cannot create std::vector larger than max_size()"));
 1230              		.loc 8 1770 24 view .LVU270
 1231              		.align	2
 1232              	.L60:
 1233 00b8 FCFFFF7F 		.word	2147483644
 1234 00bc 00000000 		.word	.LC1
 1235              	.LBE1781:
 1236              	.LBE1819:
 1237              	.LBE1881:
 1238              	.LBE1891:
 1239              		.cfi_endproc
 1240              	.LFE5510:
 1242              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20f
 1243              		.align	1
 1244              		.p2align 2,,3
 1245              		.syntax unified
 1246              		.thumb
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 122


 1247              		.thumb_func
 1248              		.fpu fpv5-d16
 1250              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_
 1251              	.LVL81:
 1252              	.LFB5517:
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 1253              		.loc 9 206 7 is_stmt 1 view -0
 1254              		.cfi_startproc
 1255              		@ args = 0, pretend = 0, frame = 8
 1256              		@ frame_needed = 0, uses_anonymous_args = 0
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 1257              		.loc 9 206 7 is_stmt 0 view .LVU272
 1258 0000 70B5     		push	{r4, r5, r6, lr}
 1259              		.cfi_def_cfa_offset 16
 1260              		.cfi_offset 4, -16
 1261              		.cfi_offset 5, -12
 1262              		.cfi_offset 6, -8
 1263              		.cfi_offset 14, -4
 1264 0002 0546     		mov	r5, r0
 1265 0004 82B0     		sub	sp, sp, #8
 1266              		.cfi_def_cfa_offset 24
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 1267              		.loc 9 206 7 view .LVU273
 1268 0006 0E46     		mov	r6, r1
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 1269              		.loc 9 211 42 view .LVU274
 1270 0008 02B1     		cbz	r2, .L63
 1271 000a 41B3     		cbz	r1, .L79
 1272              	.L63:
 1273              	.LVL82:
 1274              	.LBB1921:
 1275              	.LBI1921:
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     {
 1276              		.loc 10 138 5 is_stmt 1 view .LVU275
 1277              	.LBB1922:
 1278              	.LBI1922:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 1279              		.loc 10 98 5 view .LVU276
 1280              	.LBB1923:
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator_base_funcs.h ****     }
 1281              		.loc 10 104 23 is_stmt 0 view .LVU277
 1282 000c 941B     		subs	r4, r2, r6
 1283              	.LBE1923:
 1284              	.LBE1922:
 1285              	.LBE1921:
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 1286              		.loc 9 217 2 view .LVU278
 1287 000e 0F2C     		cmp	r4, #15
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 1288              		.loc 9 215 12 view .LVU279
 1289 0010 0194     		str	r4, [sp, #4]
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 1290              		.loc 9 217 2 view .LVU280
 1291 0012 11D8     		bhi	.L80
 1292              	.LVL83:
 1293              	.LBB1924:
 1294              	.LBI1924:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 123


 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1295              		.loc 11 186 7 is_stmt 1 view .LVU281
 1296              	.LBE1924:
 1297              	.LBB1926:
 1298              	.LBB1927:
 1299              	.LBB1928:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 1300              		.loc 11 348 2 is_stmt 0 view .LVU282
 1301 0014 012C     		cmp	r4, #1
 1302              	.LBE1928:
 1303              	.LBE1927:
 1304              	.LBE1926:
 1305              	.LBB1948:
 1306              	.LBB1925:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1307              		.loc 11 187 28 view .LVU283
 1308 0016 2868     		ldr	r0, [r5]
 1309              	.LVL84:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1310              		.loc 11 187 28 view .LVU284
 1311              	.LBE1925:
 1312              	.LBE1948:
 1313              	.LBB1949:
 1314              	.LBI1926:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 1315              		.loc 11 392 7 is_stmt 1 view .LVU285
 1316              	.LBB1944:
 1317              	.LBI1927:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1318              		.loc 11 346 7 view .LVU286
 1319              	.LBB1940:
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 1320              		.loc 11 348 2 is_stmt 0 view .LVU287
 1321 0018 08D1     		bne	.L66
 1322              	.LVL85:
 1323              	.LBB1929:
 1324              	.LBI1929:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1325              		.loc 12 321 7 is_stmt 1 view .LVU288
 1326              	.LBB1930:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1327              		.loc 12 322 9 view .LVU289
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1328              		.loc 12 322 16 is_stmt 0 view .LVU290
 1329 001a 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1330              		.loc 12 322 14 view .LVU291
 1331 001c 0370     		strb	r3, [r0]
 1332              	.LBE1930:
 1333              	.LBE1929:
 1334              	.LBE1940:
 1335              	.LBE1944:
 1336              	.LBE1949:
 1337              	.LBB1950:
 1338              	.LBB1951:
 1339              	.LBB1952:
 1340              	.LBB1953:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 124


 1341 001e 0023     		movs	r3, #0
 1342              	.LBE1953:
 1343              	.LBE1952:
 1344              	.LBE1951:
 1345              	.LBE1950:
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       }
 1346              		.loc 9 232 15 view .LVU292
 1347 0020 019C     		ldr	r4, [sp, #4]
 1348              	.LVL86:
 1349              	.LBB1984:
 1350              	.LBI1950:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1351              		.loc 11 214 7 is_stmt 1 view .LVU293
 1352              	.LBB1980:
 1353              	.LBB1959:
 1354              	.LBI1959:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 1355              		.loc 11 182 7 view .LVU294
 1356              	.LBE1959:
 1357              	.LBB1963:
 1358              	.LBB1964:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1359              		.loc 11 187 28 is_stmt 0 view .LVU295
 1360 0022 2868     		ldr	r0, [r5]
 1361              	.LBE1964:
 1362              	.LBE1963:
 1363              	.LBB1966:
 1364              	.LBB1960:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1365              		.loc 11 183 26 view .LVU296
 1366 0024 6C60     		str	r4, [r5, #4]
 1367              	.LVL87:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1368              		.loc 11 183 26 view .LVU297
 1369              	.LBE1960:
 1370              	.LBE1966:
 1371              	.LBB1967:
 1372              	.LBI1963:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1373              		.loc 11 186 7 is_stmt 1 view .LVU298
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1374              		.loc 11 186 7 is_stmt 0 view .LVU299
 1375              	.LBE1967:
 1376              	.LBB1968:
 1377              	.LBI1952:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1378              		.loc 12 321 7 is_stmt 1 view .LVU300
 1379              	.LBB1954:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1380              		.loc 12 322 9 view .LVU301
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1381              		.loc 12 322 14 is_stmt 0 view .LVU302
 1382 0026 0355     		strb	r3, [r0, r4]
 1383              	.LVL88:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1384              		.loc 12 322 14 view .LVU303
 1385              	.LBE1954:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 125


 1386              	.LBE1968:
 1387              	.LBE1980:
 1388              	.LBE1984:
 1389              		.loc 9 233 7 view .LVU304
 1390 0028 02B0     		add	sp, sp, #8
 1391              		.cfi_remember_state
 1392              		.cfi_def_cfa_offset 16
 1393              		@ sp needed
 1394 002a 70BD     		pop	{r4, r5, r6, pc}
 1395              	.LVL89:
 1396              	.L66:
 1397              		.cfi_restore_state
 1398              	.LBB1985:
 1399              	.LBB1945:
 1400              	.LBB1941:
 1401              	.LBB1931:
 1402              	.LBI1931:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1403              		.loc 11 346 7 is_stmt 1 view .LVU305
 1404              	.LBB1932:
 1405              	.LBI1932:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 1406              		.loc 12 387 7 view .LVU306
 1407              	.LBB1933:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 1408              		.loc 12 389 2 view .LVU307
 1409 002c 64B9     		cbnz	r4, .L65
 1410              	.LVL90:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 1411              		.loc 12 389 2 is_stmt 0 view .LVU308
 1412              	.LBE1933:
 1413              	.LBE1932:
 1414              	.LBE1931:
 1415              	.LBE1941:
 1416              	.LBE1945:
 1417              	.LBE1985:
 1418              	.LBB1986:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1419              		.loc 11 214 7 is_stmt 1 view .LVU309
 1420              	.LBB1981:
 1421              	.LBB1969:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 1422              		.loc 11 182 7 view .LVU310
 1423              	.LBE1969:
 1424              	.LBB1970:
 1425              	.LBB1955:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1426              		.loc 12 322 14 is_stmt 0 view .LVU311
 1427 002e 0023     		movs	r3, #0
 1428              	.LBE1955:
 1429              	.LBE1970:
 1430              	.LBB1971:
 1431              	.LBB1961:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1432              		.loc 11 183 26 view .LVU312
 1433 0030 6C60     		str	r4, [r5, #4]
 1434              	.LVL91:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 126


 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1435              		.loc 11 183 26 view .LVU313
 1436              	.LBE1961:
 1437              	.LBE1971:
 1438              	.LBB1972:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1439              		.loc 11 186 7 is_stmt 1 view .LVU314
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1440              		.loc 11 186 7 is_stmt 0 view .LVU315
 1441              	.LBE1972:
 1442              	.LBB1973:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1443              		.loc 12 321 7 is_stmt 1 view .LVU316
 1444              	.LBB1956:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1445              		.loc 12 322 9 view .LVU317
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1446              		.loc 12 322 14 is_stmt 0 view .LVU318
 1447 0032 0355     		strb	r3, [r0, r4]
 1448              	.LVL92:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1449              		.loc 12 322 14 view .LVU319
 1450              	.LBE1956:
 1451              	.LBE1973:
 1452              	.LBE1981:
 1453              	.LBE1986:
 1454              		.loc 9 233 7 view .LVU320
 1455 0034 02B0     		add	sp, sp, #8
 1456              		.cfi_remember_state
 1457              		.cfi_def_cfa_offset 16
 1458              		@ sp needed
 1459 0036 70BD     		pop	{r4, r5, r6, pc}
 1460              	.LVL93:
 1461              	.L80:
 1462              		.cfi_restore_state
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 1463              		.loc 9 219 13 view .LVU321
 1464 0038 0022     		movs	r2, #0
 1465              	.LVL94:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 1466              		.loc 9 219 13 view .LVU322
 1467 003a 01A9     		add	r1, sp, #4
 1468              	.LVL95:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 1469              		.loc 9 219 13 view .LVU323
 1470 003c 2846     		mov	r0, r5
 1471              	.LVL96:
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 1472              		.loc 9 219 13 view .LVU324
 1473 003e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 1474              	.LVL97:
 1475              	.LBB1987:
 1476              	.LBB1988:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1477              		.loc 11 211 31 view .LVU325
 1478 0042 019B     		ldr	r3, [sp, #4]
 1479              	.LVL98:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 127


 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1480              		.loc 11 211 31 view .LVU326
 1481              	.LBE1988:
 1482              	.LBE1987:
 1483              	.LBB1990:
 1484              	.LBI1990:
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 1485              		.loc 11 178 7 is_stmt 1 view .LVU327
 1486              	.LBB1991:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1487              		.loc 11 179 26 is_stmt 0 view .LVU328
 1488 0044 2860     		str	r0, [r5]
 1489              	.LVL99:
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1490              		.loc 11 179 26 view .LVU329
 1491              	.LBE1991:
 1492              	.LBE1990:
 1493              	.LBB1992:
 1494              	.LBI1987:
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1495              		.loc 11 210 7 is_stmt 1 view .LVU330
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1496              		.loc 11 210 7 is_stmt 0 view .LVU331
 1497              	.LBE1992:
 1498              	.LBB1993:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1499              		.loc 11 186 7 is_stmt 1 view .LVU332
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1500              		.loc 11 186 7 is_stmt 0 view .LVU333
 1501              	.LBE1993:
 1502              	.LBB1994:
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 1503              		.loc 11 392 7 is_stmt 1 view .LVU334
 1504              	.LBB1946:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1505              		.loc 11 346 7 view .LVU335
 1506              	.LBB1942:
 1507              	.LBB1938:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1508              		.loc 11 346 7 view .LVU336
 1509              	.LBB1936:
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 1510              		.loc 12 387 7 view .LVU337
 1511              	.LBB1934:
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 1512              		.loc 12 389 2 view .LVU338
 1513              	.LBE1934:
 1514              	.LBE1936:
 1515              	.LBE1938:
 1516              	.LBE1942:
 1517              	.LBE1946:
 1518              	.LBE1994:
 1519              	.LBB1995:
 1520              	.LBB1989:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1521              		.loc 11 211 31 is_stmt 0 view .LVU339
 1522 0046 AB60     		str	r3, [r5, #8]
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 128


 1523              	.L65:
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1524              		.loc 11 211 31 view .LVU340
 1525              	.LBE1989:
 1526              	.LBE1995:
 1527              	.LBB1996:
 1528              	.LBB1947:
 1529              	.LBB1943:
 1530              	.LBB1939:
 1531              	.LBB1937:
 1532              	.LBB1935:
 1533              		.loc 12 395 2 is_stmt 1 view .LVU341
 1534              		.loc 12 395 49 is_stmt 0 view .LVU342
 1535 0048 2246     		mov	r2, r4
 1536 004a 3146     		mov	r1, r6
 1537 004c FFF7FEFF 		bl	memcpy
 1538              	.LVL100:
 1539              		.loc 12 395 49 view .LVU343
 1540              	.LBE1935:
 1541              	.LBE1937:
 1542              	.LBE1939:
 1543              	.LBE1943:
 1544              	.LBE1947:
 1545              	.LBE1996:
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       }
 1546              		.loc 9 232 15 view .LVU344
 1547 0050 019C     		ldr	r4, [sp, #4]
 1548              	.LVL101:
 1549              	.LBB1997:
 1550              	.LBB1982:
 1551              	.LBB1974:
 1552              	.LBB1965:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1553              		.loc 11 187 28 view .LVU345
 1554 0052 2868     		ldr	r0, [r5]
 1555              	.LVL102:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1556              		.loc 11 187 28 view .LVU346
 1557              	.LBE1965:
 1558              	.LBE1974:
 1559              	.LBE1982:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1560              		.loc 11 214 7 is_stmt 1 view .LVU347
 1561              	.LBB1983:
 1562              	.LBB1975:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 1563              		.loc 11 182 7 view .LVU348
 1564              	.LBE1975:
 1565              	.LBB1976:
 1566              	.LBB1957:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1567              		.loc 12 322 14 is_stmt 0 view .LVU349
 1568 0054 0023     		movs	r3, #0
 1569              	.LBE1957:
 1570              	.LBE1976:
 1571              	.LBB1977:
 1572              	.LBB1962:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 129


 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1573              		.loc 11 183 26 view .LVU350
 1574 0056 6C60     		str	r4, [r5, #4]
 1575              	.LVL103:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1576              		.loc 11 183 26 view .LVU351
 1577              	.LBE1962:
 1578              	.LBE1977:
 1579              	.LBB1978:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1580              		.loc 11 186 7 is_stmt 1 view .LVU352
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1581              		.loc 11 186 7 is_stmt 0 view .LVU353
 1582              	.LBE1978:
 1583              	.LBB1979:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1584              		.loc 12 321 7 is_stmt 1 view .LVU354
 1585              	.LBB1958:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1586              		.loc 12 322 9 view .LVU355
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1587              		.loc 12 322 14 is_stmt 0 view .LVU356
 1588 0058 0355     		strb	r3, [r0, r4]
 1589              	.LVL104:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1590              		.loc 12 322 14 view .LVU357
 1591              	.LBE1958:
 1592              	.LBE1979:
 1593              	.LBE1983:
 1594              	.LBE1997:
 1595              		.loc 9 233 7 view .LVU358
 1596 005a 02B0     		add	sp, sp, #8
 1597              		.cfi_remember_state
 1598              		.cfi_def_cfa_offset 16
 1599              		@ sp needed
 1600 005c 70BD     		pop	{r4, r5, r6, pc}
 1601              	.LVL105:
 1602              	.L79:
 1603              		.cfi_restore_state
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 1604              		.loc 9 212 28 view .LVU359
 1605 005e 0148     		ldr	r0, .L81
 1606              	.LVL106:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 1607              		.loc 9 212 28 view .LVU360
 1608 0060 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 1609              	.LVL107:
 1610              	.L82:
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 1611              		.loc 9 212 28 view .LVU361
 1612              		.align	2
 1613              	.L81:
 1614 0064 00000000 		.word	.LC0
 1615              		.cfi_endproc
 1616              	.LFE5517:
 1618              		.section	.text._ZN14ClassicFilters10resetCoeffEv,"axG",%progbits,_ZN14ClassicFilters10resetCoeffEv
 1619              		.align	1
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 130


 1620              		.p2align 2,,3
 1621              		.weak	_ZN14ClassicFilters10resetCoeffEv
 1622              		.syntax unified
 1623              		.thumb
 1624              		.thumb_func
 1625              		.fpu fpv5-d16
 1627              	_ZN14ClassicFilters10resetCoeffEv:
 1628              	.LVL108:
 1629              	.LFB4755:
 1630              		.file 19 "../../dsp_fv/classicFilters.h"
   1:../../dsp_fv/classicFilters.h **** #pragma once
   2:../../dsp_fv/classicFilters.h **** #include <vector>
   3:../../dsp_fv/classicFilters.h **** #include <string>
   4:../../dsp_fv/classicFilters.h **** using std::string;
   5:../../dsp_fv/classicFilters.h **** #include "biquad.h"
   6:../../dsp_fv/classicFilters.h **** 
   7:../../dsp_fv/classicFilters.h **** using std::vector;
   8:../../dsp_fv/classicFilters.h **** 
   9:../../dsp_fv/classicFilters.h **** const float PI = 3.14159265;
  10:../../dsp_fv/classicFilters.h **** // =============================================================================
  11:../../dsp_fv/classicFilters.h **** // ClassicFilters : public Biquad Class
  12:../../dsp_fv/classicFilters.h **** // used to implement every kind of second order filter, sample by sample reading
  13:../../dsp_fv/classicFilters.h **** // =============================================================================
  14:../../dsp_fv/classicFilters.h **** 
  15:../../dsp_fv/classicFilters.h **** /// <summary>
  16:../../dsp_fv/classicFilters.h **** /// ClassicFilters class, used to implement the following filters :
  17:../../dsp_fv/classicFilters.h **** /// LPF1, LPF2, HPF1, HPF2, more filters to come ...
  18:../../dsp_fv/classicFilters.h **** /// </summary>
  19:../../dsp_fv/classicFilters.h **** class ClassicFilters : private Biquad
  20:../../dsp_fv/classicFilters.h **** {
  21:../../dsp_fv/classicFilters.h **** public:
  22:../../dsp_fv/classicFilters.h **** 
  23:../../dsp_fv/classicFilters.h ****     ClassicFilters()
  24:../../dsp_fv/classicFilters.h ****     {
  25:../../dsp_fv/classicFilters.h ****         biquadStruct.setType("direct");
  26:../../dsp_fv/classicFilters.h **** 
  27:../../dsp_fv/classicFilters.h ****     }
  28:../../dsp_fv/classicFilters.h ****     /// <summary>
  29:../../dsp_fv/classicFilters.h ****     /// resets the biquadStruct members coefficients 
  30:../../dsp_fv/classicFilters.h ****     /// </summary>
  31:../../dsp_fv/classicFilters.h ****     void resetCoeff() override
 1631              		.loc 19 31 10 is_stmt 1 view -0
 1632              		.cfi_startproc
 1633              		@ args = 0, pretend = 0, frame = 0
 1634              		@ frame_needed = 0, uses_anonymous_args = 0
  32:../../dsp_fv/classicFilters.h ****     {
  33:../../dsp_fv/classicFilters.h ****         biquadStruct.resetCoeff();
 1635              		.loc 19 33 9 view .LVU363
  31:../../dsp_fv/classicFilters.h ****     {
 1636              		.loc 19 31 10 is_stmt 0 view .LVU364
 1637 0000 70B5     		push	{r4, r5, r6, lr}
 1638              		.cfi_def_cfa_offset 16
 1639              		.cfi_offset 4, -16
 1640              		.cfi_offset 5, -12
 1641              		.cfi_offset 6, -8
 1642              		.cfi_offset 14, -4
  31:../../dsp_fv/classicFilters.h ****     {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 131


 1643              		.loc 19 31 10 view .LVU365
 1644 0002 0446     		mov	r4, r0
 1645              	.LVL109:
 1646              	.LBB2012:
 1647              	.LBI2012:
  41:../../dsp_fv/biquad.h ****     {
 1648              		.loc 7 41 18 is_stmt 1 view .LVU366
 1649              	.LBB2013:
  44:../../dsp_fv/biquad.h ****         {
 1650              		.loc 7 44 28 view .LVU367
 1651              	.LBB2014:
 1652              	.LBI2014:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 1653              		.loc 8 918 7 view .LVU368
 1654              	.LBB2015:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 1655              		.loc 8 919 66 is_stmt 0 view .LVU369
 1656 0004 D0E91F03 		ldrd	r0, r3, [r0, #124]
 1657              	.LVL110:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 1658              		.loc 8 919 50 view .LVU370
 1659 0008 1D1A     		subs	r5, r3, r0
 1660              	.LVL111:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 1661              		.loc 8 919 50 view .LVU371
 1662              	.LBE2015:
 1663              	.LBE2014:
  44:../../dsp_fv/biquad.h ****         {
 1664              		.loc 7 44 28 view .LVU372
 1665 000a AA08     		lsrs	r2, r5, #2
 1666 000c 2BD0     		beq	.L83
 1667              	.LBB2016:
 1668              	.LBB2017:
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 1669              		.loc 8 1046 25 view .LVU373
 1670 000e D4F88860 		ldr	r6, [r4, #136]
 1671 0012 7219     		adds	r2, r6, r5
 1672 0014 9042     		cmp	r0, r2
 1673 0016 01D2     		bcs	.L92
 1674 0018 9E42     		cmp	r6, r3
 1675 001a 25D3     		bcc	.L85
 1676              	.L92:
 1677              	.LBE2017:
 1678              	.LBE2016:
  46:../../dsp_fv/biquad.h ****             bCoeffVector[i] = 0.0f;
 1679              		.loc 7 46 29 view .LVU374
 1680 001c 2A46     		mov	r2, r5
 1681 001e 0021     		movs	r1, #0
 1682 0020 FFF7FEFF 		bl	memset
 1683              	.LVL112:
  47:../../dsp_fv/biquad.h ****         }
 1684              		.loc 7 47 29 view .LVU375
 1685 0024 2A46     		mov	r2, r5
 1686 0026 0021     		movs	r1, #0
 1687 0028 3046     		mov	r0, r6
 1688 002a FFF7FEFF 		bl	memset
 1689              	.LVL113:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 132


 1690              	.L87:
  47:../../dsp_fv/biquad.h ****         }
 1691              		.loc 7 47 29 view .LVU376
 1692              	.LBE2013:
 1693              	.LBB2020:
 1694              	.LBB2021:
 1695              	.LBB2022:
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 1696              		.loc 8 1046 25 view .LVU377
 1697 002e D4F89400 		ldr	r0, [r4, #148]
 1698              	.LBE2022:
 1699              	.LBE2021:
 1700              	.LBB2023:
 1701              	.LBB2024:
 1702 0032 D4F8A040 		ldr	r4, [r4, #160]
 1703              	.LVL114:
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 1704              		.loc 8 1046 25 view .LVU378
 1705 0036 4319     		adds	r3, r0, r5
 1706 0038 9C42     		cmp	r4, r3
 1707 003a 02D2     		bcs	.L93
 1708 003c 6219     		adds	r2, r4, r5
 1709 003e 9042     		cmp	r0, r2
 1710 0040 0AD3     		bcc	.L91
 1711              	.L93:
 1712              	.LBE2024:
 1713              	.LBE2023:
  52:../../dsp_fv/biquad.h ****             yStateVector[i] = 0.0f;
 1714              		.loc 7 52 29 view .LVU379
 1715 0042 2A46     		mov	r2, r5
 1716 0044 0021     		movs	r1, #0
 1717 0046 FFF7FEFF 		bl	memset
 1718              	.LVL115:
  53:../../dsp_fv/biquad.h ****         }
 1719              		.loc 7 53 29 view .LVU380
 1720 004a 2A46     		mov	r2, r5
 1721 004c 2046     		mov	r0, r4
 1722 004e 0021     		movs	r1, #0
 1723              	.LBE2020:
 1724              	.LBE2012:
  34:../../dsp_fv/classicFilters.h ****     }
 1725              		.loc 19 34 5 view .LVU381
 1726 0050 BDE87040 		pop	{r4, r5, r6, lr}
 1727              		.cfi_remember_state
 1728              		.cfi_restore 14
 1729              		.cfi_restore 6
 1730              		.cfi_restore 5
 1731              		.cfi_restore 4
 1732              		.cfi_def_cfa_offset 0
 1733              	.LBB2029:
 1734              	.LBB2027:
  53:../../dsp_fv/biquad.h ****         }
 1735              		.loc 7 53 29 view .LVU382
 1736 0054 FFF7FEBF 		b	memset
 1737              	.LVL116:
 1738              	.L91:
 1739              		.cfi_restore_state
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 133


  52:../../dsp_fv/biquad.h ****             yStateVector[i] = 0.0f;
 1740              		.loc 7 52 13 is_stmt 1 view .LVU383
 1741              	.LBB2025:
 1742              	.LBI2021:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1743              		.loc 8 1043 7 view .LVU384
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1744              		.loc 8 1043 7 is_stmt 0 view .LVU385
 1745              	.LBE2025:
  52:../../dsp_fv/biquad.h ****             yStateVector[i] = 0.0f;
 1746              		.loc 7 52 29 view .LVU386
 1747 0058 0022     		movs	r2, #0
 1748 005a 40F8042B 		str	r2, [r0], #4	@ float
  53:../../dsp_fv/biquad.h ****         }
 1749              		.loc 7 53 13 is_stmt 1 view .LVU387
 1750              	.LVL117:
 1751              	.LBB2026:
 1752              	.LBI2023:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1753              		.loc 8 1043 7 view .LVU388
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1754              		.loc 8 1043 7 is_stmt 0 view .LVU389
 1755              	.LBE2026:
  50:../../dsp_fv/biquad.h ****         {
 1756              		.loc 7 50 28 view .LVU390
 1757 005e 9842     		cmp	r0, r3
  53:../../dsp_fv/biquad.h ****         }
 1758              		.loc 7 53 29 view .LVU391
 1759 0060 44F8042B 		str	r2, [r4], #4	@ float
  50:../../dsp_fv/biquad.h ****         {
 1760              		.loc 7 50 9 is_stmt 1 view .LVU392
  50:../../dsp_fv/biquad.h ****         {
 1761              		.loc 7 50 28 view .LVU393
 1762 0064 F8D1     		bne	.L91
 1763              	.L83:
  50:../../dsp_fv/biquad.h ****         {
 1764              		.loc 7 50 28 is_stmt 0 view .LVU394
 1765              	.LBE2027:
 1766              	.LBE2029:
 1767              		.loc 19 34 5 view .LVU395
 1768 0066 70BD     		pop	{r4, r5, r6, pc}
 1769              	.LVL118:
 1770              	.L85:
 1771              		.loc 19 34 5 view .LVU396
 1772 0068 4219     		adds	r2, r0, r5
 1773              	.LVL119:
 1774              	.L88:
 1775              	.LBB2030:
 1776              	.LBB2028:
  46:../../dsp_fv/biquad.h ****             bCoeffVector[i] = 0.0f;
 1777              		.loc 7 46 13 is_stmt 1 view .LVU397
  46:../../dsp_fv/biquad.h ****             bCoeffVector[i] = 0.0f;
 1778              		.loc 7 46 29 is_stmt 0 view .LVU398
 1779 006a 0023     		movs	r3, #0
 1780 006c 40F8043B 		str	r3, [r0], #4	@ float
  47:../../dsp_fv/biquad.h ****         }
 1781              		.loc 7 47 13 is_stmt 1 view .LVU399
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 134


 1782              	.LVL120:
 1783              	.LBB2018:
 1784              	.LBI2016:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1785              		.loc 8 1043 7 view .LVU400
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1786              		.loc 8 1043 7 is_stmt 0 view .LVU401
 1787              	.LBE2018:
  44:../../dsp_fv/biquad.h ****         {
 1788              		.loc 7 44 28 view .LVU402
 1789 0070 9042     		cmp	r0, r2
  47:../../dsp_fv/biquad.h ****         }
 1790              		.loc 7 47 29 view .LVU403
 1791 0072 46F8043B 		str	r3, [r6], #4	@ float
  44:../../dsp_fv/biquad.h ****         {
 1792              		.loc 7 44 9 is_stmt 1 view .LVU404
  44:../../dsp_fv/biquad.h ****         {
 1793              		.loc 7 44 28 view .LVU405
 1794              	.LVL121:
 1795              	.LBB2019:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 1796              		.loc 8 918 7 view .LVU406
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 1797              		.loc 8 918 7 is_stmt 0 view .LVU407
 1798              	.LBE2019:
  44:../../dsp_fv/biquad.h ****         {
 1799              		.loc 7 44 28 view .LVU408
 1800 0076 F8D1     		bne	.L88
 1801 0078 D9E7     		b	.L87
 1802              	.LBE2028:
 1803              	.LBE2030:
 1804              		.cfi_endproc
 1805              	.LFE4755:
 1807 007a 00BF     		.section	.text._ZN14ClassicFiltersD2Ev,"axG",%progbits,_ZN14ClassicFiltersD5Ev,comdat
 1808              		.align	1
 1809              		.p2align 2,,3
 1810              		.weak	_ZN14ClassicFiltersD2Ev
 1811              		.syntax unified
 1812              		.thumb
 1813              		.thumb_func
 1814              		.fpu fpv5-d16
 1816              	_ZN14ClassicFiltersD2Ev:
 1817              	.LVL122:
 1818              	.LFB5503:
  19:../../dsp_fv/classicFilters.h **** {
 1819              		.loc 19 19 7 is_stmt 1 view -0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 0
 1822              		@ frame_needed = 0, uses_anonymous_args = 0
  19:../../dsp_fv/classicFilters.h **** {
 1823              		.loc 19 19 7 is_stmt 0 view .LVU410
 1824 0000 38B5     		push	{r3, r4, r5, lr}
 1825              		.cfi_def_cfa_offset 16
 1826              		.cfi_offset 3, -16
 1827              		.cfi_offset 4, -12
 1828              		.cfi_offset 5, -8
 1829              		.cfi_offset 14, -4
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 135


  19:../../dsp_fv/classicFilters.h **** {
 1830              		.loc 19 19 7 view .LVU411
 1831 0002 0446     		mov	r4, r0
 1832              	.LBB2249:
 1833              	.LBB2250:
 1834              	.LBB2251:
 1835              	.LBB2252:
 1836              	.LBB2253:
 1837              	.LBB2254:
 1838              	.LBB2255:
 1839              	.LBB2256:
 1840              	.LBB2257:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1841              		.loc 11 187 28 view .LVU412
 1842 0004 D0F8C000 		ldr	r0, [r0, #192]
 1843              	.LVL123:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1844              		.loc 11 187 28 view .LVU413
 1845              	.LBE2257:
 1846              	.LBE2256:
 1847              	.LBE2255:
 1848              	.LBE2254:
 1849              	.LBE2253:
 1850              	.LBE2252:
 1851              	.LBE2251:
 1852              	.LBE2250:
  19:../../dsp_fv/classicFilters.h **** {
 1853              		.loc 19 19 7 view .LVU414
 1854 0008 334A     		ldr	r2, .L145
 1855              	.LBB2380:
 1856              	.LBB2378:
 1857              	.LBB2280:
 1858              	.LBB2274:
 1859              	.LBB2271:
 1860              	.LBB2262:
 1861              	.LBB2258:
 1862              	.LBB2259:
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 1863              		.loc 11 203 57 view .LVU415
 1864 000a 04F1C803 		add	r3, r4, #200
 1865              	.LBE2259:
 1866              	.LBE2258:
 1867              	.LBE2262:
 1868              	.LBE2271:
 1869              	.LBE2274:
 1870              	.LBE2280:
  29:../../dsp_fv/biquad.h **** 
 1871              		.loc 7 29 15 view .LVU416
 1872 000e 334D     		ldr	r5, .L145+4
 1873              	.LBE2378:
 1874              	.LBE2380:
  19:../../dsp_fv/classicFilters.h **** {
 1875              		.loc 19 19 7 view .LVU417
 1876 0010 2260     		str	r2, [r4]
 1877              	.LVL124:
 1878              	.LBB2381:
 1879              	.LBI2250:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 136


  29:../../dsp_fv/biquad.h **** 
 1880              		.loc 7 29 5 is_stmt 1 view .LVU418
 1881              	.LBB2379:
 1882              	.LBB2281:
 1883              	.LBB2275:
 1884              	.LBB2272:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1885              		.loc 11 231 2 is_stmt 0 view .LVU419
 1886 0012 9842     		cmp	r0, r3
 1887              	.LBE2272:
 1888              	.LBE2275:
 1889              	.LBE2281:
  29:../../dsp_fv/biquad.h **** 
 1890              		.loc 7 29 15 view .LVU420
 1891 0014 A567     		str	r5, [r4, #120]
 1892              	.LVL125:
 1893              	.LBB2282:
 1894              	.LBI2252:
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(const basic_string&);
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __len2);
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 137


 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n)
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 138


 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to use.
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__n, __c); }
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move construct string.
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 139


 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__str.length());
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_set_length(0);
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || __str.get_allocator() == __a)
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 140


 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __end  End of range.
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator,
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator>
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a   Allocator to use.
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a string_view.
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ~basic_string()
 1895              		.loc 11 657 7 is_stmt 1 view .LVU421
 1896              	.LBB2276:
 1897              	.LBI2253:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1898              		.loc 11 229 7 view .LVU422
 1899              	.LBB2273:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 141


 1900              	.LBB2263:
 1901              	.LBI2255:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 1902              		.loc 11 221 7 view .LVU423
 1903              	.LBB2260:
 1904              	.LBI2256:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1905              		.loc 11 186 7 view .LVU424
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1906              		.loc 11 186 7 is_stmt 0 view .LVU425
 1907              	.LBE2260:
 1908              	.LBB2261:
 1909              	.LBI2258:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1910              		.loc 11 200 7 is_stmt 1 view .LVU426
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1911              		.loc 11 200 7 is_stmt 0 view .LVU427
 1912              	.LBE2261:
 1913              	.LBE2263:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 1914              		.loc 11 231 2 view .LVU428
 1915 0016 04D0     		beq	.L101
 1916              	.LVL126:
 1917              	.LBB2264:
 1918              	.LBI2264:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 1919              		.loc 11 236 7 is_stmt 1 view .LVU429
 1920              	.LBB2265:
 1921              	.LBB2266:
 1922              	.LBI2266:
 1923              		.loc 16 491 7 view .LVU430
 1924              	.LBB2267:
 1925              	.LBI2267:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1926              		.loc 15 120 7 view .LVU431
 1927              	.LBE2267:
 1928              	.LBE2266:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1929              		.loc 11 237 34 is_stmt 0 view .LVU432
 1930 0018 D4F8C810 		ldr	r1, [r4, #200]
 1931              	.LBB2270:
 1932              	.LBB2269:
 1933              	.LBB2268:
 1934              		.loc 15 133 19 view .LVU433
 1935 001c 0131     		adds	r1, r1, #1
 1936              	.LVL127:
 1937              		.loc 15 133 19 view .LVU434
 1938 001e FFF7FEFF 		bl	_ZdlPvj
 1939              	.LVL128:
 1940              	.L101:
 1941              		.loc 15 133 19 view .LVU435
 1942              	.LBE2268:
 1943              	.LBE2269:
 1944              	.LBE2270:
 1945              	.LBE2265:
 1946              	.LBE2264:
 1947              	.LBE2273:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 142


 1948              	.LBE2276:
 1949              	.LBB2277:
 1950              	.LBI2277:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1951              		.loc 11 150 14 is_stmt 1 view .LVU436
 1952              	.LBB2278:
 1953              	.LBI2278:
 1954              		.loc 14 162 7 view .LVU437
 1955              	.LBB2279:
 1956              	.LBI2279:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1957              		.loc 15 89 7 view .LVU438
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1958              		.loc 15 89 7 is_stmt 0 view .LVU439
 1959              	.LBE2279:
 1960              	.LBE2278:
 1961              	.LBE2277:
 1962              	.LBE2282:
 1963              	.LBB2283:
 1964              	.LBI2283:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1965              		.loc 8 678 7 is_stmt 1 view .LVU440
 1966              	.LBB2284:
 1967              	.LBI2284:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1968              		.loc 8 276 7 view .LVU441
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 1969              		.loc 8 276 7 is_stmt 0 view .LVU442
 1970              	.LBE2284:
 1971              	.LBB2285:
 1972              	.LBI2285:
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *	       an object of type `_Up`.
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up, typename... _Args>
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 143


 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.destroy(__p);
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::destroy_at(__p);
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size()
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.max_size();
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc& __one, const _Alloc& __two, true_type)
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = __two; }
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __do_alloc_on_copy(_Alloc&, const _Alloc&, false_type)
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 144


 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(_Alloc& __one, const _Alloc& __two)
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_copy_assignment __pocca;
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocca::value)
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = __two;
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_copy(__one, __two, __pocca());
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     constexpr _Alloc
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_copy(const _Alloc& __a)
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       return __traits::select_on_container_copy_construction(__a);
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc& __one, _Alloc& __two, true_type)
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { __one = std::move(__two); }
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_move(_Alloc&, _Alloc&, false_type)
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_move(_Alloc& __one, _Alloc& __two)
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_move_assignment __pocma;
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocma::value)
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__one = std::move(__two);
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_move(__one, __two, __pocma());
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201703L
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc& __one, _Alloc& __two, true_type)
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using std::swap;
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       swap(__one, __two);
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void __do_alloc_on_swap(_Alloc&, _Alloc&, false_type)
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { }
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 145


 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _GLIBCXX14_CONSTEXPR inline void
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     __alloc_on_swap(_Alloc& __one, _Alloc& __two)
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef allocator_traits<_Alloc> __traits;
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename __traits::propagate_on_container_swap __pocs;
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201703L
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       if constexpr (__pocs::value)
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using std::swap;
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  swap(__one, __two);
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __do_alloc_on_swap(__one, __two, __pocs());
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp,
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename _ValueT = __remove_cvref_t<typename _Alloc::value_type>,
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	   typename = void>
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : false_type
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Tp, typename _ValueT>
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_alloc_insertable_impl<_Alloc, _Tp, _ValueT,
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<decltype(allocator_traits<_Alloc>::construct(
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Alloc&>(), std::declval<_ValueT*>(),
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		   std::declval<_Tp>()))>>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is CopyInsertable into containers using _Alloc
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc,
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				 typename _Alloc::value_type const&>::type
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires CopyConstructible
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_copy_insertable<allocator<_Tp>>
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_copy_constructible<_Tp>
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // true if _Alloc::value_type is MoveInsertable into containers using _Alloc
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // (might be wrong if _Alloc::construct exists but is not constrained,
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // i.e. actually trying to use it would still be invalid. Use with caution.)
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : __is_alloc_insertable_impl<_Alloc, typename _Alloc::value_type>::type
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // std::allocator<_Tp> just requires MoveConstructible
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 146


 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_move_insertable<allocator<_Tp>>
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : is_move_constructible<_Tp>
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     { };
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   // Trait to detect Allocator-like types.
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename = void>
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator : false_type { };
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct __is_allocator<_Alloc,
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       __void_t<typename _Alloc::value_type,
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	       decltype(std::declval<_Alloc&>().allocate(size_t{}))>>
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     : true_type { };
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireAllocator
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<__is_allocator<_Alloc>::value, _Alloc>::type;
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using _RequireNotAllocator
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename enable_if<!__is_allocator<_Alloc>::value, _Alloc>::type;
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif // C++11
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * Destroy a range of objects using the supplied allocator.  For
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * non-default allocators we do not optimize away invocation of
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * destroy() even if _Tp has a trivial destructor.
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    */
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Allocator>
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     void
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	     _Allocator& __alloc)
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       for (; __first != __last; ++__first)
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus < 201103L
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	__alloc.destroy(std::__addressof(*__first));
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	allocator_traits<_Allocator>::destroy(__alloc,
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 					      std::__addressof(*__first));
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     }
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _ForwardIterator, typename _Tp>
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     inline void
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 1973              		.loc 16 735 5 is_stmt 1 view .LVU443
 1974              		.loc 16 735 5 is_stmt 0 view .LVU444
 1975              	.LBE2285:
 1976              	.LBB2286:
 1977              	.LBI2286:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1978              		.loc 8 333 7 is_stmt 1 view .LVU445
 1979              	.LBB2287:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 1980              		.loc 8 335 15 is_stmt 0 view .LVU446
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 147


 1981 0022 D4F8AC00 		ldr	r0, [r4, #172]
 1982              	.LVL129:
 1983              	.LBB2288:
 1984              	.LBI2288:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 1985              		.loc 8 350 7 is_stmt 1 view .LVU447
 1986              	.LBB2289:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 1987              		.loc 8 353 2 is_stmt 0 view .LVU448
 1988 0026 20B1     		cbz	r0, .L102
 1989              	.LVL130:
 1990              	.LBB2290:
 1991              	.LBI2290:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1992              		.loc 16 491 7 is_stmt 1 view .LVU449
 1993              	.LBB2291:
 1994              	.LBB2292:
 1995              	.LBI2292:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 1996              		.loc 15 120 7 view .LVU450
 1997              	.LBE2292:
 1998              	.LBE2291:
 1999              	.LBE2290:
 2000              	.LBE2289:
 2001              	.LBE2288:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2002              		.loc 8 336 35 is_stmt 0 view .LVU451
 2003 0028 D4F8B410 		ldr	r1, [r4, #180]
 2004              	.LBB2298:
 2005              	.LBB2297:
 2006              	.LBB2296:
 2007              	.LBB2295:
 2008              	.LBB2294:
 2009              	.LBB2293:
 2010              		.loc 15 133 19 view .LVU452
 2011 002c 091A     		subs	r1, r1, r0
 2012 002e FFF7FEFF 		bl	_ZdlPvj
 2013              	.LVL131:
 2014              	.L102:
 2015              		.loc 15 133 19 view .LVU453
 2016              	.LBE2293:
 2017              	.LBE2294:
 2018              	.LBE2295:
 2019              	.LBE2296:
 2020              	.LBE2297:
 2021              	.LBE2298:
 2022              	.LBB2299:
 2023              	.LBI2299:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2024              		.loc 8 128 14 is_stmt 1 view .LVU454
 2025              	.LBB2300:
 2026              	.LBI2300:
 2027              		.loc 14 162 7 view .LVU455
 2028              	.LBB2301:
 2029              	.LBI2301:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2030              		.loc 15 89 7 view .LVU456
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 148


  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2031              		.loc 15 89 7 is_stmt 0 view .LVU457
 2032              	.LBE2301:
 2033              	.LBE2300:
 2034              	.LBE2299:
 2035              	.LBE2287:
 2036              	.LBE2286:
 2037              	.LBE2283:
 2038              	.LBB2302:
 2039              	.LBI2302:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2040              		.loc 8 678 7 is_stmt 1 view .LVU458
 2041              	.LBB2303:
 2042              	.LBI2303:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2043              		.loc 8 276 7 view .LVU459
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2044              		.loc 8 276 7 is_stmt 0 view .LVU460
 2045              	.LBE2303:
 2046              	.LBB2304:
 2047              	.LBI2304:
 2048              		.loc 16 735 5 is_stmt 1 view .LVU461
 2049              		.loc 16 735 5 is_stmt 0 view .LVU462
 2050              	.LBE2304:
 2051              	.LBB2305:
 2052              	.LBI2305:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2053              		.loc 8 333 7 is_stmt 1 view .LVU463
 2054              	.LBB2306:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 2055              		.loc 8 335 15 is_stmt 0 view .LVU464
 2056 0032 D4F8A000 		ldr	r0, [r4, #160]
 2057              	.LVL132:
 2058              	.LBB2307:
 2059              	.LBI2307:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2060              		.loc 8 350 7 is_stmt 1 view .LVU465
 2061              	.LBB2308:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2062              		.loc 8 353 2 is_stmt 0 view .LVU466
 2063 0036 20B1     		cbz	r0, .L103
 2064              	.LVL133:
 2065              	.LBB2309:
 2066              	.LBI2309:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2067              		.loc 16 491 7 is_stmt 1 view .LVU467
 2068              	.LBB2310:
 2069              	.LBB2311:
 2070              	.LBI2311:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2071              		.loc 15 120 7 view .LVU468
 2072              	.LBE2311:
 2073              	.LBE2310:
 2074              	.LBE2309:
 2075              	.LBE2308:
 2076              	.LBE2307:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 149


 2077              		.loc 8 336 35 is_stmt 0 view .LVU469
 2078 0038 D4F8A810 		ldr	r1, [r4, #168]
 2079              	.LBB2317:
 2080              	.LBB2316:
 2081              	.LBB2315:
 2082              	.LBB2314:
 2083              	.LBB2313:
 2084              	.LBB2312:
 2085              		.loc 15 133 19 view .LVU470
 2086 003c 091A     		subs	r1, r1, r0
 2087 003e FFF7FEFF 		bl	_ZdlPvj
 2088              	.LVL134:
 2089              	.L103:
 2090              		.loc 15 133 19 view .LVU471
 2091              	.LBE2312:
 2092              	.LBE2313:
 2093              	.LBE2314:
 2094              	.LBE2315:
 2095              	.LBE2316:
 2096              	.LBE2317:
 2097              	.LBB2318:
 2098              	.LBI2318:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2099              		.loc 8 128 14 is_stmt 1 view .LVU472
 2100              	.LBB2319:
 2101              	.LBI2319:
 2102              		.loc 14 162 7 view .LVU473
 2103              	.LBB2320:
 2104              	.LBI2320:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2105              		.loc 15 89 7 view .LVU474
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2106              		.loc 15 89 7 is_stmt 0 view .LVU475
 2107              	.LBE2320:
 2108              	.LBE2319:
 2109              	.LBE2318:
 2110              	.LBE2306:
 2111              	.LBE2305:
 2112              	.LBE2302:
 2113              	.LBB2321:
 2114              	.LBI2321:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2115              		.loc 8 678 7 is_stmt 1 view .LVU476
 2116              	.LBB2322:
 2117              	.LBI2322:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2118              		.loc 8 276 7 view .LVU477
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2119              		.loc 8 276 7 is_stmt 0 view .LVU478
 2120              	.LBE2322:
 2121              	.LBB2323:
 2122              	.LBI2323:
 2123              		.loc 16 735 5 is_stmt 1 view .LVU479
 2124              		.loc 16 735 5 is_stmt 0 view .LVU480
 2125              	.LBE2323:
 2126              	.LBB2324:
 2127              	.LBI2324:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 150


 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2128              		.loc 8 333 7 is_stmt 1 view .LVU481
 2129              	.LBB2325:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 2130              		.loc 8 335 15 is_stmt 0 view .LVU482
 2131 0042 D4F89400 		ldr	r0, [r4, #148]
 2132              	.LVL135:
 2133              	.LBB2326:
 2134              	.LBI2326:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2135              		.loc 8 350 7 is_stmt 1 view .LVU483
 2136              	.LBB2327:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2137              		.loc 8 353 2 is_stmt 0 view .LVU484
 2138 0046 20B1     		cbz	r0, .L104
 2139              	.LVL136:
 2140              	.LBB2328:
 2141              	.LBI2328:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2142              		.loc 16 491 7 is_stmt 1 view .LVU485
 2143              	.LBB2329:
 2144              	.LBB2330:
 2145              	.LBI2330:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2146              		.loc 15 120 7 view .LVU486
 2147              	.LBE2330:
 2148              	.LBE2329:
 2149              	.LBE2328:
 2150              	.LBE2327:
 2151              	.LBE2326:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2152              		.loc 8 336 35 is_stmt 0 view .LVU487
 2153 0048 D4F89C10 		ldr	r1, [r4, #156]
 2154              	.LBB2336:
 2155              	.LBB2335:
 2156              	.LBB2334:
 2157              	.LBB2333:
 2158              	.LBB2332:
 2159              	.LBB2331:
 2160              		.loc 15 133 19 view .LVU488
 2161 004c 091A     		subs	r1, r1, r0
 2162 004e FFF7FEFF 		bl	_ZdlPvj
 2163              	.LVL137:
 2164              	.L104:
 2165              		.loc 15 133 19 view .LVU489
 2166              	.LBE2331:
 2167              	.LBE2332:
 2168              	.LBE2333:
 2169              	.LBE2334:
 2170              	.LBE2335:
 2171              	.LBE2336:
 2172              	.LBB2337:
 2173              	.LBI2337:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2174              		.loc 8 128 14 is_stmt 1 view .LVU490
 2175              	.LBB2338:
 2176              	.LBI2338:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 151


 2177              		.loc 14 162 7 view .LVU491
 2178              	.LBB2339:
 2179              	.LBI2339:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2180              		.loc 15 89 7 view .LVU492
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2181              		.loc 15 89 7 is_stmt 0 view .LVU493
 2182              	.LBE2339:
 2183              	.LBE2338:
 2184              	.LBE2337:
 2185              	.LBE2325:
 2186              	.LBE2324:
 2187              	.LBE2321:
 2188              	.LBB2340:
 2189              	.LBI2340:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2190              		.loc 8 678 7 is_stmt 1 view .LVU494
 2191              	.LBB2341:
 2192              	.LBI2341:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2193              		.loc 8 276 7 view .LVU495
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2194              		.loc 8 276 7 is_stmt 0 view .LVU496
 2195              	.LBE2341:
 2196              	.LBB2342:
 2197              	.LBI2342:
 2198              		.loc 16 735 5 is_stmt 1 view .LVU497
 2199              		.loc 16 735 5 is_stmt 0 view .LVU498
 2200              	.LBE2342:
 2201              	.LBB2343:
 2202              	.LBI2343:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2203              		.loc 8 333 7 is_stmt 1 view .LVU499
 2204              	.LBB2344:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 2205              		.loc 8 335 15 is_stmt 0 view .LVU500
 2206 0052 D4F88800 		ldr	r0, [r4, #136]
 2207              	.LVL138:
 2208              	.LBB2345:
 2209              	.LBI2345:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2210              		.loc 8 350 7 is_stmt 1 view .LVU501
 2211              	.LBB2346:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2212              		.loc 8 353 2 is_stmt 0 view .LVU502
 2213 0056 20B1     		cbz	r0, .L105
 2214              	.LVL139:
 2215              	.LBB2347:
 2216              	.LBI2347:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2217              		.loc 16 491 7 is_stmt 1 view .LVU503
 2218              	.LBB2348:
 2219              	.LBB2349:
 2220              	.LBI2349:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2221              		.loc 15 120 7 view .LVU504
 2222              	.LBE2349:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 152


 2223              	.LBE2348:
 2224              	.LBE2347:
 2225              	.LBE2346:
 2226              	.LBE2345:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2227              		.loc 8 336 35 is_stmt 0 view .LVU505
 2228 0058 D4F89010 		ldr	r1, [r4, #144]
 2229              	.LBB2355:
 2230              	.LBB2354:
 2231              	.LBB2353:
 2232              	.LBB2352:
 2233              	.LBB2351:
 2234              	.LBB2350:
 2235              		.loc 15 133 19 view .LVU506
 2236 005c 091A     		subs	r1, r1, r0
 2237 005e FFF7FEFF 		bl	_ZdlPvj
 2238              	.LVL140:
 2239              	.L105:
 2240              		.loc 15 133 19 view .LVU507
 2241              	.LBE2350:
 2242              	.LBE2351:
 2243              	.LBE2352:
 2244              	.LBE2353:
 2245              	.LBE2354:
 2246              	.LBE2355:
 2247              	.LBB2356:
 2248              	.LBI2356:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2249              		.loc 8 128 14 is_stmt 1 view .LVU508
 2250              	.LBB2357:
 2251              	.LBI2357:
 2252              		.loc 14 162 7 view .LVU509
 2253              	.LBB2358:
 2254              	.LBI2358:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2255              		.loc 15 89 7 view .LVU510
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2256              		.loc 15 89 7 is_stmt 0 view .LVU511
 2257              	.LBE2358:
 2258              	.LBE2357:
 2259              	.LBE2356:
 2260              	.LBE2344:
 2261              	.LBE2343:
 2262              	.LBE2340:
 2263              	.LBB2359:
 2264              	.LBI2359:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2265              		.loc 8 678 7 is_stmt 1 view .LVU512
 2266              	.LBB2360:
 2267              	.LBI2360:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2268              		.loc 8 276 7 view .LVU513
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2269              		.loc 8 276 7 is_stmt 0 view .LVU514
 2270              	.LBE2360:
 2271              	.LBB2361:
 2272              	.LBI2361:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 153


 2273              		.loc 16 735 5 is_stmt 1 view .LVU515
 2274              		.loc 16 735 5 is_stmt 0 view .LVU516
 2275              	.LBE2361:
 2276              	.LBB2362:
 2277              	.LBI2362:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2278              		.loc 8 333 7 is_stmt 1 view .LVU517
 2279              	.LBB2363:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 2280              		.loc 8 335 15 is_stmt 0 view .LVU518
 2281 0062 E06F     		ldr	r0, [r4, #124]
 2282              	.LVL141:
 2283              	.LBB2364:
 2284              	.LBI2364:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2285              		.loc 8 350 7 is_stmt 1 view .LVU519
 2286              	.LBB2365:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2287              		.loc 8 353 2 is_stmt 0 view .LVU520
 2288 0064 20B1     		cbz	r0, .L106
 2289              	.LVL142:
 2290              	.LBB2366:
 2291              	.LBI2366:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2292              		.loc 16 491 7 is_stmt 1 view .LVU521
 2293              	.LBB2367:
 2294              	.LBB2368:
 2295              	.LBI2368:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2296              		.loc 15 120 7 view .LVU522
 2297              	.LBE2368:
 2298              	.LBE2367:
 2299              	.LBE2366:
 2300              	.LBE2365:
 2301              	.LBE2364:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2302              		.loc 8 336 35 is_stmt 0 view .LVU523
 2303 0066 D4F88410 		ldr	r1, [r4, #132]
 2304              	.LBB2374:
 2305              	.LBB2373:
 2306              	.LBB2372:
 2307              	.LBB2371:
 2308              	.LBB2370:
 2309              	.LBB2369:
 2310              		.loc 15 133 19 view .LVU524
 2311 006a 091A     		subs	r1, r1, r0
 2312 006c FFF7FEFF 		bl	_ZdlPvj
 2313              	.LVL143:
 2314              	.L106:
 2315              		.loc 15 133 19 view .LVU525
 2316              	.LBE2369:
 2317              	.LBE2370:
 2318              	.LBE2371:
 2319              	.LBE2372:
 2320              	.LBE2373:
 2321              	.LBE2374:
 2322              	.LBB2375:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 154


 2323              	.LBI2375:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2324              		.loc 8 128 14 is_stmt 1 view .LVU526
 2325              	.LBB2376:
 2326              	.LBI2376:
 2327              		.loc 14 162 7 view .LVU527
 2328              	.LBB2377:
 2329              	.LBI2377:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2330              		.loc 15 89 7 view .LVU528
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2331              		.loc 15 89 7 is_stmt 0 view .LVU529
 2332              	.LBE2377:
 2333              	.LBE2376:
 2334              	.LBE2375:
 2335              	.LBE2363:
 2336              	.LBE2362:
 2337              	.LBE2359:
 2338              	.LBE2379:
 2339              	.LBE2381:
 2340              	.LBB2382:
 2341              	.LBI2382:
 2342              		.loc 11 657 7 is_stmt 1 view .LVU530
 2343              	.LBB2383:
 2344              	.LBI2383:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2345              		.loc 11 229 7 view .LVU531
 2346              	.LBB2384:
 2347              	.LBB2385:
 2348              	.LBI2385:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2349              		.loc 11 221 7 view .LVU532
 2350              	.LBB2386:
 2351              	.LBI2386:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2352              		.loc 11 186 7 view .LVU533
 2353              	.LBB2387:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2354              		.loc 11 187 28 is_stmt 0 view .LVU534
 2355 0070 206E     		ldr	r0, [r4, #96]
 2356              	.LVL144:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2357              		.loc 11 187 28 view .LVU535
 2358              	.LBE2387:
 2359              	.LBE2386:
 2360              	.LBB2388:
 2361              	.LBI2388:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2362              		.loc 11 200 7 is_stmt 1 view .LVU536
 2363              	.LBB2389:
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2364              		.loc 11 203 57 is_stmt 0 view .LVU537
 2365 0072 04F16803 		add	r3, r4, #104
 2366              	.LBE2389:
 2367              	.LBE2388:
 2368              	.LBE2385:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 155


 2369              		.loc 11 231 2 view .LVU538
 2370 0076 9842     		cmp	r0, r3
 2371 0078 03D0     		beq	.L107
 2372              	.LVL145:
 2373              	.LBB2390:
 2374              	.LBI2390:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2375              		.loc 11 236 7 is_stmt 1 view .LVU539
 2376              	.LBB2391:
 2377              	.LBB2392:
 2378              	.LBI2392:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2379              		.loc 16 491 7 view .LVU540
 2380              	.LBB2393:
 2381              	.LBI2393:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2382              		.loc 15 120 7 view .LVU541
 2383              	.LBE2393:
 2384              	.LBE2392:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2385              		.loc 11 237 34 is_stmt 0 view .LVU542
 2386 007a A16E     		ldr	r1, [r4, #104]
 2387              	.LBB2396:
 2388              	.LBB2395:
 2389              	.LBB2394:
 2390              		.loc 15 133 19 view .LVU543
 2391 007c 0131     		adds	r1, r1, #1
 2392              	.LVL146:
 2393              		.loc 15 133 19 view .LVU544
 2394 007e FFF7FEFF 		bl	_ZdlPvj
 2395              	.LVL147:
 2396              	.L107:
 2397              		.loc 15 133 19 view .LVU545
 2398              	.LBE2394:
 2399              	.LBE2395:
 2400              	.LBE2396:
 2401              	.LBE2391:
 2402              	.LBE2390:
 2403              	.LBE2384:
 2404              	.LBE2383:
 2405              	.LBB2397:
 2406              	.LBI2397:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2407              		.loc 11 150 14 is_stmt 1 view .LVU546
 2408              	.LBB2398:
 2409              	.LBI2398:
 2410              		.loc 14 162 7 view .LVU547
 2411              	.LBB2399:
 2412              	.LBI2399:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2413              		.loc 15 89 7 view .LVU548
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2414              		.loc 15 89 7 is_stmt 0 view .LVU549
 2415              	.LBE2399:
 2416              	.LBE2398:
 2417              	.LBE2397:
 2418              	.LBE2382:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 156


 2419              	.LBB2400:
 2420              	.LBI2400:
  29:../../dsp_fv/biquad.h **** 
 2421              		.loc 7 29 5 is_stmt 1 view .LVU550
 2422              	.LBB2401:
 2423              	.LBB2402:
 2424              	.LBB2403:
 2425              	.LBB2404:
 2426              	.LBB2405:
 2427              	.LBB2406:
 2428              	.LBB2407:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2429              		.loc 11 187 28 is_stmt 0 view .LVU551
 2430 0082 A06C     		ldr	r0, [r4, #72]
 2431              	.LBE2407:
 2432              	.LBE2406:
 2433              	.LBB2408:
 2434              	.LBB2409:
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2435              		.loc 11 203 57 view .LVU552
 2436 0084 04F15003 		add	r3, r4, #80
 2437              	.LBE2409:
 2438              	.LBE2408:
 2439              	.LBE2405:
 2440              	.LBE2404:
 2441              	.LBE2403:
 2442              	.LBE2402:
  29:../../dsp_fv/biquad.h **** 
 2443              		.loc 7 29 15 view .LVU553
 2444 0088 2560     		str	r5, [r4]
 2445              	.LVL148:
 2446              	.LBB2425:
 2447              	.LBI2402:
 2448              		.loc 11 657 7 is_stmt 1 view .LVU554
 2449              	.LBB2421:
 2450              	.LBI2403:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2451              		.loc 11 229 7 view .LVU555
 2452              	.LBB2420:
 2453              	.LBB2412:
 2454              	.LBI2405:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2455              		.loc 11 221 7 view .LVU556
 2456              	.LBB2410:
 2457              	.LBI2406:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2458              		.loc 11 186 7 view .LVU557
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2459              		.loc 11 186 7 is_stmt 0 view .LVU558
 2460              	.LBE2410:
 2461              	.LBB2411:
 2462              	.LBI2408:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2463              		.loc 11 200 7 is_stmt 1 view .LVU559
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2464              		.loc 11 200 7 is_stmt 0 view .LVU560
 2465              	.LBE2411:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 157


 2466              	.LBE2412:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2467              		.loc 11 231 2 view .LVU561
 2468 008a 9842     		cmp	r0, r3
 2469 008c 03D0     		beq	.L108
 2470              	.LVL149:
 2471              	.LBB2413:
 2472              	.LBI2413:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2473              		.loc 11 236 7 is_stmt 1 view .LVU562
 2474              	.LBB2414:
 2475              	.LBB2415:
 2476              	.LBI2415:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2477              		.loc 16 491 7 view .LVU563
 2478              	.LBB2416:
 2479              	.LBI2416:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2480              		.loc 15 120 7 view .LVU564
 2481              	.LBE2416:
 2482              	.LBE2415:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2483              		.loc 11 237 34 is_stmt 0 view .LVU565
 2484 008e 216D     		ldr	r1, [r4, #80]
 2485              	.LBB2419:
 2486              	.LBB2418:
 2487              	.LBB2417:
 2488              		.loc 15 133 19 view .LVU566
 2489 0090 0131     		adds	r1, r1, #1
 2490              	.LVL150:
 2491              		.loc 15 133 19 view .LVU567
 2492 0092 FFF7FEFF 		bl	_ZdlPvj
 2493              	.LVL151:
 2494              	.L108:
 2495              		.loc 15 133 19 view .LVU568
 2496              	.LBE2417:
 2497              	.LBE2418:
 2498              	.LBE2419:
 2499              	.LBE2414:
 2500              	.LBE2413:
 2501              	.LBE2420:
 2502              	.LBE2421:
 2503              	.LBB2422:
 2504              	.LBI2422:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2505              		.loc 11 150 14 is_stmt 1 view .LVU569
 2506              	.LBB2423:
 2507              	.LBI2423:
 2508              		.loc 14 162 7 view .LVU570
 2509              	.LBB2424:
 2510              	.LBI2424:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2511              		.loc 15 89 7 view .LVU571
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2512              		.loc 15 89 7 is_stmt 0 view .LVU572
 2513              	.LBE2424:
 2514              	.LBE2423:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 158


 2515              	.LBE2422:
 2516              	.LBE2425:
 2517              	.LBB2426:
 2518              	.LBI2426:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2519              		.loc 8 678 7 is_stmt 1 view .LVU573
 2520              	.LBB2427:
 2521              	.LBI2427:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2522              		.loc 8 276 7 view .LVU574
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2523              		.loc 8 276 7 is_stmt 0 view .LVU575
 2524              	.LBE2427:
 2525              	.LBB2428:
 2526              	.LBI2428:
 2527              		.loc 16 735 5 is_stmt 1 view .LVU576
 2528              		.loc 16 735 5 is_stmt 0 view .LVU577
 2529              	.LBE2428:
 2530              	.LBB2429:
 2531              	.LBI2429:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2532              		.loc 8 333 7 is_stmt 1 view .LVU578
 2533              	.LBB2430:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 2534              		.loc 8 335 15 is_stmt 0 view .LVU579
 2535 0096 606B     		ldr	r0, [r4, #52]
 2536              	.LVL152:
 2537              	.LBB2431:
 2538              	.LBI2431:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2539              		.loc 8 350 7 is_stmt 1 view .LVU580
 2540              	.LBB2432:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2541              		.loc 8 353 2 is_stmt 0 view .LVU581
 2542 0098 18B1     		cbz	r0, .L109
 2543              	.LVL153:
 2544              	.LBB2433:
 2545              	.LBI2433:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2546              		.loc 16 491 7 is_stmt 1 view .LVU582
 2547              	.LBB2434:
 2548              	.LBB2435:
 2549              	.LBI2435:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2550              		.loc 15 120 7 view .LVU583
 2551              	.LBE2435:
 2552              	.LBE2434:
 2553              	.LBE2433:
 2554              	.LBE2432:
 2555              	.LBE2431:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2556              		.loc 8 336 35 is_stmt 0 view .LVU584
 2557 009a E16B     		ldr	r1, [r4, #60]
 2558              	.LBB2441:
 2559              	.LBB2440:
 2560              	.LBB2439:
 2561              	.LBB2438:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 159


 2562              	.LBB2437:
 2563              	.LBB2436:
 2564              		.loc 15 133 19 view .LVU585
 2565 009c 091A     		subs	r1, r1, r0
 2566 009e FFF7FEFF 		bl	_ZdlPvj
 2567              	.LVL154:
 2568              	.L109:
 2569              		.loc 15 133 19 view .LVU586
 2570              	.LBE2436:
 2571              	.LBE2437:
 2572              	.LBE2438:
 2573              	.LBE2439:
 2574              	.LBE2440:
 2575              	.LBE2441:
 2576              	.LBB2442:
 2577              	.LBI2442:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2578              		.loc 8 128 14 is_stmt 1 view .LVU587
 2579              	.LBB2443:
 2580              	.LBI2443:
 2581              		.loc 14 162 7 view .LVU588
 2582              	.LBB2444:
 2583              	.LBI2444:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2584              		.loc 15 89 7 view .LVU589
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2585              		.loc 15 89 7 is_stmt 0 view .LVU590
 2586              	.LBE2444:
 2587              	.LBE2443:
 2588              	.LBE2442:
 2589              	.LBE2430:
 2590              	.LBE2429:
 2591              	.LBE2426:
 2592              	.LBB2445:
 2593              	.LBI2445:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2594              		.loc 8 678 7 is_stmt 1 view .LVU591
 2595              	.LBB2446:
 2596              	.LBI2446:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2597              		.loc 8 276 7 view .LVU592
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2598              		.loc 8 276 7 is_stmt 0 view .LVU593
 2599              	.LBE2446:
 2600              	.LBB2447:
 2601              	.LBI2447:
 2602              		.loc 16 735 5 is_stmt 1 view .LVU594
 2603              		.loc 16 735 5 is_stmt 0 view .LVU595
 2604              	.LBE2447:
 2605              	.LBB2448:
 2606              	.LBI2448:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2607              		.loc 8 333 7 is_stmt 1 view .LVU596
 2608              	.LBB2449:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 2609              		.loc 8 335 15 is_stmt 0 view .LVU597
 2610 00a2 A06A     		ldr	r0, [r4, #40]
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 160


 2611              	.LVL155:
 2612              	.LBB2450:
 2613              	.LBI2450:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2614              		.loc 8 350 7 is_stmt 1 view .LVU598
 2615              	.LBB2451:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2616              		.loc 8 353 2 is_stmt 0 view .LVU599
 2617 00a4 18B1     		cbz	r0, .L110
 2618              	.LVL156:
 2619              	.LBB2452:
 2620              	.LBI2452:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2621              		.loc 16 491 7 is_stmt 1 view .LVU600
 2622              	.LBB2453:
 2623              	.LBB2454:
 2624              	.LBI2454:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2625              		.loc 15 120 7 view .LVU601
 2626              	.LBE2454:
 2627              	.LBE2453:
 2628              	.LBE2452:
 2629              	.LBE2451:
 2630              	.LBE2450:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2631              		.loc 8 336 35 is_stmt 0 view .LVU602
 2632 00a6 216B     		ldr	r1, [r4, #48]
 2633              	.LBB2460:
 2634              	.LBB2459:
 2635              	.LBB2458:
 2636              	.LBB2457:
 2637              	.LBB2456:
 2638              	.LBB2455:
 2639              		.loc 15 133 19 view .LVU603
 2640 00a8 091A     		subs	r1, r1, r0
 2641 00aa FFF7FEFF 		bl	_ZdlPvj
 2642              	.LVL157:
 2643              	.L110:
 2644              		.loc 15 133 19 view .LVU604
 2645              	.LBE2455:
 2646              	.LBE2456:
 2647              	.LBE2457:
 2648              	.LBE2458:
 2649              	.LBE2459:
 2650              	.LBE2460:
 2651              	.LBB2461:
 2652              	.LBI2461:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2653              		.loc 8 128 14 is_stmt 1 view .LVU605
 2654              	.LBB2462:
 2655              	.LBI2462:
 2656              		.loc 14 162 7 view .LVU606
 2657              	.LBB2463:
 2658              	.LBI2463:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2659              		.loc 15 89 7 view .LVU607
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 161


 2660              		.loc 15 89 7 is_stmt 0 view .LVU608
 2661              	.LBE2463:
 2662              	.LBE2462:
 2663              	.LBE2461:
 2664              	.LBE2449:
 2665              	.LBE2448:
 2666              	.LBE2445:
 2667              	.LBB2464:
 2668              	.LBI2464:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2669              		.loc 8 678 7 is_stmt 1 view .LVU609
 2670              	.LBB2465:
 2671              	.LBI2465:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2672              		.loc 8 276 7 view .LVU610
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2673              		.loc 8 276 7 is_stmt 0 view .LVU611
 2674              	.LBE2465:
 2675              	.LBB2466:
 2676              	.LBI2466:
 2677              		.loc 16 735 5 is_stmt 1 view .LVU612
 2678              		.loc 16 735 5 is_stmt 0 view .LVU613
 2679              	.LBE2466:
 2680              	.LBB2467:
 2681              	.LBI2467:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2682              		.loc 8 333 7 is_stmt 1 view .LVU614
 2683              	.LBB2468:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 2684              		.loc 8 335 15 is_stmt 0 view .LVU615
 2685 00ae E069     		ldr	r0, [r4, #28]
 2686              	.LVL158:
 2687              	.LBB2469:
 2688              	.LBI2469:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2689              		.loc 8 350 7 is_stmt 1 view .LVU616
 2690              	.LBB2470:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2691              		.loc 8 353 2 is_stmt 0 view .LVU617
 2692 00b0 18B1     		cbz	r0, .L111
 2693              	.LVL159:
 2694              	.LBB2471:
 2695              	.LBI2471:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2696              		.loc 16 491 7 is_stmt 1 view .LVU618
 2697              	.LBB2472:
 2698              	.LBB2473:
 2699              	.LBI2473:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2700              		.loc 15 120 7 view .LVU619
 2701              	.LBE2473:
 2702              	.LBE2472:
 2703              	.LBE2471:
 2704              	.LBE2470:
 2705              	.LBE2469:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2706              		.loc 8 336 35 is_stmt 0 view .LVU620
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 162


 2707 00b2 616A     		ldr	r1, [r4, #36]
 2708              	.LBB2479:
 2709              	.LBB2478:
 2710              	.LBB2477:
 2711              	.LBB2476:
 2712              	.LBB2475:
 2713              	.LBB2474:
 2714              		.loc 15 133 19 view .LVU621
 2715 00b4 091A     		subs	r1, r1, r0
 2716 00b6 FFF7FEFF 		bl	_ZdlPvj
 2717              	.LVL160:
 2718              	.L111:
 2719              		.loc 15 133 19 view .LVU622
 2720              	.LBE2474:
 2721              	.LBE2475:
 2722              	.LBE2476:
 2723              	.LBE2477:
 2724              	.LBE2478:
 2725              	.LBE2479:
 2726              	.LBB2480:
 2727              	.LBI2480:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2728              		.loc 8 128 14 is_stmt 1 view .LVU623
 2729              	.LBB2481:
 2730              	.LBI2481:
 2731              		.loc 14 162 7 view .LVU624
 2732              	.LBB2482:
 2733              	.LBI2482:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2734              		.loc 15 89 7 view .LVU625
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2735              		.loc 15 89 7 is_stmt 0 view .LVU626
 2736              	.LBE2482:
 2737              	.LBE2481:
 2738              	.LBE2480:
 2739              	.LBE2468:
 2740              	.LBE2467:
 2741              	.LBE2464:
 2742              	.LBB2483:
 2743              	.LBI2483:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2744              		.loc 8 678 7 is_stmt 1 view .LVU627
 2745              	.LBB2484:
 2746              	.LBI2484:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2747              		.loc 8 276 7 view .LVU628
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2748              		.loc 8 276 7 is_stmt 0 view .LVU629
 2749              	.LBE2484:
 2750              	.LBB2485:
 2751              	.LBI2485:
 2752              		.loc 16 735 5 is_stmt 1 view .LVU630
 2753              		.loc 16 735 5 is_stmt 0 view .LVU631
 2754              	.LBE2485:
 2755              	.LBB2486:
 2756              	.LBI2486:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 163


 2757              		.loc 8 333 7 is_stmt 1 view .LVU632
 2758              	.LBB2487:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 2759              		.loc 8 335 15 is_stmt 0 view .LVU633
 2760 00ba 2069     		ldr	r0, [r4, #16]
 2761              	.LVL161:
 2762              	.LBB2488:
 2763              	.LBI2488:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2764              		.loc 8 350 7 is_stmt 1 view .LVU634
 2765              	.LBB2489:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2766              		.loc 8 353 2 is_stmt 0 view .LVU635
 2767 00bc 18B1     		cbz	r0, .L112
 2768              	.LVL162:
 2769              	.LBB2490:
 2770              	.LBI2490:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2771              		.loc 16 491 7 is_stmt 1 view .LVU636
 2772              	.LBB2491:
 2773              	.LBB2492:
 2774              	.LBI2492:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2775              		.loc 15 120 7 view .LVU637
 2776              	.LBE2492:
 2777              	.LBE2491:
 2778              	.LBE2490:
 2779              	.LBE2489:
 2780              	.LBE2488:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2781              		.loc 8 336 35 is_stmt 0 view .LVU638
 2782 00be A169     		ldr	r1, [r4, #24]
 2783              	.LBB2498:
 2784              	.LBB2497:
 2785              	.LBB2496:
 2786              	.LBB2495:
 2787              	.LBB2494:
 2788              	.LBB2493:
 2789              		.loc 15 133 19 view .LVU639
 2790 00c0 091A     		subs	r1, r1, r0
 2791 00c2 FFF7FEFF 		bl	_ZdlPvj
 2792              	.LVL163:
 2793              	.L112:
 2794              		.loc 15 133 19 view .LVU640
 2795              	.LBE2493:
 2796              	.LBE2494:
 2797              	.LBE2495:
 2798              	.LBE2496:
 2799              	.LBE2497:
 2800              	.LBE2498:
 2801              	.LBB2499:
 2802              	.LBI2499:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2803              		.loc 8 128 14 is_stmt 1 view .LVU641
 2804              	.LBB2500:
 2805              	.LBI2500:
 2806              		.loc 14 162 7 view .LVU642
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 164


 2807              	.LBB2501:
 2808              	.LBI2501:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2809              		.loc 15 89 7 view .LVU643
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2810              		.loc 15 89 7 is_stmt 0 view .LVU644
 2811              	.LBE2501:
 2812              	.LBE2500:
 2813              	.LBE2499:
 2814              	.LBE2487:
 2815              	.LBE2486:
 2816              	.LBE2483:
 2817              	.LBB2502:
 2818              	.LBI2502:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2819              		.loc 8 678 7 is_stmt 1 view .LVU645
 2820              	.LBB2503:
 2821              	.LBI2503:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2822              		.loc 8 276 7 view .LVU646
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 2823              		.loc 8 276 7 is_stmt 0 view .LVU647
 2824              	.LBE2503:
 2825              	.LBB2504:
 2826              	.LBI2504:
 2827              		.loc 16 735 5 is_stmt 1 view .LVU648
 2828              		.loc 16 735 5 is_stmt 0 view .LVU649
 2829              	.LBE2504:
 2830              	.LBB2505:
 2831              	.LBI2505:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2832              		.loc 8 333 7 is_stmt 1 view .LVU650
 2833              	.LBB2506:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 2834              		.loc 8 335 15 is_stmt 0 view .LVU651
 2835 00c6 6068     		ldr	r0, [r4, #4]
 2836              	.LVL164:
 2837              	.LBB2507:
 2838              	.LBI2507:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 2839              		.loc 8 350 7 is_stmt 1 view .LVU652
 2840              	.LBB2508:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2841              		.loc 8 353 2 is_stmt 0 view .LVU653
 2842 00c8 18B1     		cbz	r0, .L113
 2843              	.LVL165:
 2844              	.LBB2509:
 2845              	.LBI2509:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2846              		.loc 16 491 7 is_stmt 1 view .LVU654
 2847              	.LBB2510:
 2848              	.LBB2511:
 2849              	.LBI2511:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2850              		.loc 15 120 7 view .LVU655
 2851              	.LBE2511:
 2852              	.LBE2510:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 165


 2853              	.LBE2509:
 2854              	.LBE2508:
 2855              	.LBE2507:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 2856              		.loc 8 336 35 is_stmt 0 view .LVU656
 2857 00ca E168     		ldr	r1, [r4, #12]
 2858              	.LBB2517:
 2859              	.LBB2516:
 2860              	.LBB2515:
 2861              	.LBB2514:
 2862              	.LBB2513:
 2863              	.LBB2512:
 2864              		.loc 15 133 19 view .LVU657
 2865 00cc 091A     		subs	r1, r1, r0
 2866 00ce FFF7FEFF 		bl	_ZdlPvj
 2867              	.LVL166:
 2868              	.L113:
 2869              		.loc 15 133 19 view .LVU658
 2870              	.LBE2512:
 2871              	.LBE2513:
 2872              	.LBE2514:
 2873              	.LBE2515:
 2874              	.LBE2516:
 2875              	.LBE2517:
 2876              	.LBB2518:
 2877              	.LBI2518:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 2878              		.loc 8 128 14 is_stmt 1 view .LVU659
 2879              	.LBB2519:
 2880              	.LBI2519:
 2881              		.loc 14 162 7 view .LVU660
 2882              	.LBB2520:
 2883              	.LBI2520:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2884              		.loc 15 89 7 view .LVU661
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2885              		.loc 15 89 7 is_stmt 0 view .LVU662
 2886              	.LBE2520:
 2887              	.LBE2519:
 2888              	.LBE2518:
 2889              	.LBE2506:
 2890              	.LBE2505:
 2891              	.LBE2502:
 2892              	.LBE2401:
 2893              	.LBE2400:
 2894              	.LBE2249:
  19:../../dsp_fv/classicFilters.h **** {
 2895              		.loc 19 19 7 view .LVU663
 2896 00d2 2046     		mov	r0, r4
 2897 00d4 38BD     		pop	{r3, r4, r5, pc}
 2898              	.LVL167:
 2899              	.L146:
  19:../../dsp_fv/classicFilters.h **** {
 2900              		.loc 19 19 7 view .LVU664
 2901 00d6 00BF     		.align	2
 2902              	.L145:
 2903 00d8 08000000 		.word	_ZTV14ClassicFilters+8
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 166


 2904 00dc 08000000 		.word	_ZTV6Biquad+8
 2905              		.cfi_endproc
 2906              	.LFE5503:
 2908              		.weak	_ZN14ClassicFiltersD1Ev
 2909              		.thumb_set _ZN14ClassicFiltersD1Ev,_ZN14ClassicFiltersD2Ev
 2910              		.section	.rodata._ZN6Biquad18processAudioSampleEf.str1.4,"aMS",%progbits,1
 2911              		.align	2
 2912              	.LC2:
 2913 0000 64697265 		.ascii	"direct\000"
 2913      637400
 2914 0007 00       		.align	2
 2915              	.LC3:
 2916 0008 63616E6F 		.ascii	"canonical\000"
 2916      6E696361 
 2916      6C00
 2917 0012 0000     		.align	2
 2918              	.LC4:
 2919 0014 4E6F6E65 		.ascii	"None\000"
 2919      00
 2920              		.section	.text._ZN6Biquad18processAudioSampleEf,"axG",%progbits,_ZN6Biquad18processAudioSampleEf,c
 2921              		.align	1
 2922              		.p2align 2,,3
 2923              		.weak	_ZN6Biquad18processAudioSampleEf
 2924              		.syntax unified
 2925              		.thumb
 2926              		.thumb_func
 2927              		.fpu fpv5-d16
 2929              	_ZN6Biquad18processAudioSampleEf:
 2930              	.LVL168:
 2931              	.LFB4750:
  56:../../dsp_fv/biquad.h **** 
  57:../../dsp_fv/biquad.h ****     void setDryWetGain(float dry, float processed) 
  58:../../dsp_fv/biquad.h ****     {
  59:../../dsp_fv/biquad.h ****         dryCoeff = dry;
  60:../../dsp_fv/biquad.h ****         processedCoeff = processed;
  61:../../dsp_fv/biquad.h ****     }
  62:../../dsp_fv/biquad.h **** 
  63:../../dsp_fv/biquad.h ****     virtual float processAudioSample(float xn)
 2932              		.loc 7 63 19 is_stmt 1 view -0
 2933              		.cfi_startproc
 2934              		@ args = 0, pretend = 0, frame = 24
 2935              		@ frame_needed = 0, uses_anonymous_args = 0
  64:../../dsp_fv/biquad.h ****     {
  65:../../dsp_fv/biquad.h ****         if (form == string("direct"))
 2936              		.loc 7 65 9 view .LVU666
 2937              	.LBB2694:
 2938              	.LBB2695:
 2939              	.LBI2695:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 2940              		.loc 14 144 7 view .LVU667
 2941              	.LBB2696:
 2942              	.LBI2696:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2943              		.loc 15 79 7 view .LVU668
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2944              		.loc 15 79 7 is_stmt 0 view .LVU669
 2945              	.LBE2696:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 167


 2946              	.LBE2695:
 2947              	.LBE2694:
  63:../../dsp_fv/biquad.h ****     {
 2948              		.loc 7 63 19 view .LVU670
 2949 0000 70B5     		push	{r4, r5, r6, lr}
 2950              		.cfi_def_cfa_offset 16
 2951              		.cfi_offset 4, -16
 2952              		.cfi_offset 5, -12
 2953              		.cfi_offset 6, -8
 2954              		.cfi_offset 14, -4
 2955 0002 2DED028B 		vpush.64	{d8}
 2956              		.cfi_def_cfa_offset 24
 2957              		.cfi_offset 80, -24
 2958              		.cfi_offset 81, -20
 2959 0006 86B0     		sub	sp, sp, #24
 2960              		.cfi_def_cfa_offset 48
 2961              	.LVL169:
 2962              	.LBB2978:
 2963              	.LBB2697:
 2964              	.LBI2697:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 2965              		.loc 11 525 7 is_stmt 1 view .LVU671
 2966              	.LBB2698:
 2967              	.LBB2699:
 2968              	.LBB2700:
 2969              	.LBI2700:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2970              		.loc 11 190 7 view .LVU672
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2971              		.loc 11 190 7 is_stmt 0 view .LVU673
 2972              	.LBE2700:
 2973              	.LBB2701:
 2974              	.LBI2701:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 2975              		.loc 11 156 2 is_stmt 1 view .LVU674
 2976              	.LBB2702:
 2977              	.LBB2703:
 2978              	.LBB2704:
 2979              	.LBI2704:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2980              		.loc 14 147 7 view .LVU675
 2981              	.LBB2705:
 2982              	.LBI2705:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2983              		.loc 15 82 7 view .LVU676
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2984              		.loc 15 82 7 is_stmt 0 view .LVU677
 2985              	.LBE2705:
 2986              	.LBE2704:
 2987              	.LBE2703:
 2988              	.LBE2702:
 2989              	.LBE2701:
 2990              	.LBB2710:
 2991              	.LBB2711:
 2992              	.LBB2712:
 2993              	.LBB2713:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 168


 2994              		.loc 11 247 23 view .LVU678
 2995 0008 674A     		ldr	r2, .L199
 2996              	.LBE2713:
 2997              	.LBE2712:
 2998              	.LBE2711:
 2999              	.LBE2710:
 3000              	.LBE2699:
 3001              	.LBE2698:
 3002              	.LBE2697:
 3003              	.LBE2978:
  63:../../dsp_fv/biquad.h ****     {
 3004              		.loc 7 63 19 view .LVU679
 3005 000a 0446     		mov	r4, r0
 3006 000c B0EE408A 		vmov.f32	s16, s0
 3007              	.LBB2979:
 3008              	.LBB2729:
 3009              	.LBB2727:
 3010              	.LBB2725:
 3011              	.LBB2720:
 3012              	.LBB2708:
 3013              	.LBB2706:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3014              		.loc 11 157 35 view .LVU680
 3015 0010 02AD     		add	r5, sp, #8
 3016              	.LVL170:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3017              		.loc 11 157 35 view .LVU681
 3018              	.LBE2706:
 3019              	.LBE2708:
 3020              	.LBE2720:
 3021              	.LBB2721:
 3022              	.LBB2718:
 3023              	.LBB2716:
 3024              	.LBB2714:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 3025              		.loc 11 247 23 view .LVU682
 3026 0012 911F     		subs	r1, r2, #6
 3027 0014 6846     		mov	r0, sp
 3028              	.LVL171:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 3029              		.loc 11 247 23 view .LVU683
 3030              	.LBE2714:
 3031              	.LBE2716:
 3032              	.LBE2718:
 3033              	.LBE2721:
 3034              	.LBB2722:
 3035              	.LBB2709:
 3036              	.LBB2707:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3037              		.loc 11 157 35 view .LVU684
 3038 0016 0095     		str	r5, [sp]
 3039              	.LVL172:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3040              		.loc 11 157 35 view .LVU685
 3041              	.LBE2707:
 3042              	.LBE2709:
 3043              	.LBE2722:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 169


 3044              	.LBB2723:
 3045              	.LBI2723:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 3046              		.loc 12 351 7 is_stmt 1 view .LVU686
 3047              	.LBE2723:
 3048              	.LBE2725:
 3049              	.LBE2727:
 3050              	.LBE2729:
 3051              	.LBE2979:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 3052              		.loc 12 357 2 view .LVU687
 3053              	.LBB2980:
 3054              	.LBB2730:
 3055              	.LBB2728:
 3056              	.LBB2726:
 3057              	.LBB2724:
 3058              	.LBI2710:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 3059              		.loc 11 263 9 view .LVU688
 3060              	.LBB2719:
 3061              	.LBB2717:
 3062              	.LBI2712:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 3063              		.loc 11 243 9 view .LVU689
 3064              	.LBB2715:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 3065              		.loc 11 247 23 is_stmt 0 view .LVU690
 3066 0018 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 3067              	.LVL173:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 3068              		.loc 11 247 23 view .LVU691
 3069              	.LBE2715:
 3070              	.LBE2717:
 3071              	.LBE2719:
 3072              	.LBE2724:
 3073              	.LBE2726:
 3074              	.LBE2728:
 3075              	.LBE2730:
 3076              	.LBB2731:
 3077              	.LBI2731:
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const basic_string& __str)
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->assign(__str);
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 170


 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const _CharT* __s)
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Source character.
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(_CharT __c)
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(1, __c);
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(basic_string&& __str)
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(_M_local_data());
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(0);
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Replace allocator if POCMA is true.
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // We've always got room for a short string, just copy it.
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__str.size())
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(__str.size());
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    pointer __data = nullptr;
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    size_type __capacity;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 171


 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_M_is_local())
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // __str can reuse our existing storage.
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __data = _M_data();
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __capacity = _M_allocated_capacity;
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else // __str can't use it, so free it.
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__data)
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_data(__data);
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_capacity(__capacity);
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    else
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else // Need to do a deep copy
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  assign(__str);
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str.clear();
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****      template<typename _Tp>
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        _If_sv<_Tp, basic_string&>
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        operator=(const _Tp& __svt)
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        { return this->assign(__svt); }
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Convert to a string_view.
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return A string_view.
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator __sv_type() const noexcept
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(data(), size()); }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 172


 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Iterators:
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string.
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data()); }
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  order.
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element order.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 173


 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cbegin() const noexcept
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cend() const noexcept
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crbegin() const noexcept
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crend() const noexcept
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Capacity:
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 174


 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  setting them to 0.
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n)
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       shrink_to_fit() noexcept
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_exceptions
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (capacity() > size())
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    try
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { reserve(0); }
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    catch(...)
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { }
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 175


 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  before needing to allocate more memory.
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	                     : _M_allocated_capacity;
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          characters.
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  data.
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Erases the string, making it empty.
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NODISCARD bool
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->size() == 0; }
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Element access:
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 176


1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[](size_type __pos)
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// and in C++11 mode.
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n) const
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= this->size())
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 177


1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n)
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= size())
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() noexcept
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() const noexcept
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() noexcept
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last element of the %string.
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() const noexcept
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 178


1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Modifiers:
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__str); }
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__s); }
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a character.
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to append.
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(_CharT __c)
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->push_back(__c);
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator+=(const _Tp& __svt)
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->append(__svt); }
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 179


1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str)
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a substring.
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data()
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C substring.
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n)
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s)
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __n = traits_type::length(__s);
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 180


1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(size_type __n, _CharT __c)
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(const _Tp& __svt)
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           __sv_type __sv = __svt;
1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->append(__sv.data(), __sv.size());
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos The position in the string_view to append from.
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 181


1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_append(__sv.data()
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a single character.
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to append.
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       push_back(_CharT __c)
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__size + 1 > this->capacity())
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_set_length(__size + 1);
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str)
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// Propagating allocator cannot free existing storage so must
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// deallocate it before replacing current allocator.
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (__str.size() <= _S_local_capacity)
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(_M_local_data());
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(0);
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    const auto __len = __str.size();
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // If this allocation throws there are no effects:
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(__ptr);
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 182


1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_capacity(__len);
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(__len);
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_assign(__str);
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(basic_string&& __str)
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this = std::move(__str);
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a substring of a string.
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to use.
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str.
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the substring of @a __str
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is larger than the number of available characters in @a
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, the remainder of @a __str is used.
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a C substring.
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the first @a __n
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 183


1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s, size_type __n)
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of a C string.
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function returns.
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s)
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to multiple characters.
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Length of the resulting string.
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character @a __c.
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(size_type __n, _CharT __c)
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a range of characters.
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 184


1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(initializer_list<_CharT> __l)
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a string_view.
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt)
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to assign.
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *              insert at.
1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 185


1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - begin();
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->replace(__p, __p, __n, __c);
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(this->_M_data() + __pos);
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *              insert at.
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	iterator
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __pos = __p - begin();
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 186


1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // See PR libstdc++/83328
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert value of a string.
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1 Position in string to insert at.
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, size_type(0),
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_data(), __str.size()); }
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 187


1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a substring.
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str   The string to insert.
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos2 > @a str.size().
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C substring.
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to insert.
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  doesn't change if an error is thrown.
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C string.
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 188


1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     traits_type::length(__s));
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index in string to insert at.
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      size_type(0), __n, __c); }
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert one character.
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - begin();
1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 189


1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
1771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
1772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
1773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to insert.
1775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, size_type(0),
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove characters.
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == npos)
1810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_set_length(__pos);
1811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__n != 0)
1812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 190


1815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove one character.
1818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  iterator referencing same location after removal.
1820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the character at @a __position from this string. The value
1822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  of the string doesn't change if an error is thrown.
1823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(__const_iterator __position)
1826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __position < end());
1829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __position - begin();
1830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
1832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove a range of characters.
1836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
1844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __last <= end());
1848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         const size_type __pos = __first - begin();
1849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__last == end())
1850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_set_length(__pos);
1851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
1852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(this->_M_data() + __pos);
1854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove the last character.
1859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The string must be non-empty.
1861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pop_back() noexcept
1864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_erase(size() - 1, 1);
1867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 191


1872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to be replaced.
1874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
1875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
1878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  error is thrown.
1886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
1893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character to replace.
1894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
1896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from str to use.
1898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.size().
1901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string doesn't change if an error is thrown.
1908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
1912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
1921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 192


1929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2)
1937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C string.
1945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
1948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
1958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with multiple characters.
1968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
1969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters to insert.
1971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
1972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
1982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
1983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 193


1986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string.
1990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String value to insert.
1993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string doesn't change if an error is thrown.
2000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string& __str)
2004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C substring.
2008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
2011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to insert.
2012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __s, size_type __n)
2024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C string.
2032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
2035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 194


2043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
2055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
2056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT __c)
2067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with range.
2075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
2089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
2090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
2092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= end());
2097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					   std::__false_type());
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 195


2100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
2102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
2103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
2106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
2107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(iterator __i1, iterator __i2,
2109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
2111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= end());
2113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Specializations for the common case of pointer and iterator:
2120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
2130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
2141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      iterator __k1, iterator __k2)
2146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
2152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 196


2157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= end());
2160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
2163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
2166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
2178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
2179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    initializer_list<_CharT> __l)
2182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
2184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position to replace at.
2189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to replace.
2190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  The position to replace at.
2204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1    The number of characters to replace.
2205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2    The number of characters to insert.
2208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 197


2214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, __n1,
2217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
2218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
2220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
2224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1    An iterator referencing the start position
2225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           to replace at.
2226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2    An iterator referencing the end position
2227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           for the replace.
2228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
2230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
2233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
2241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
2242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
2243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
2248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
2249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __false_type);
2252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     _CharT __c);
2256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 const size_type __len2);
2260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
2262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
2265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy substring into C string.
2268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to copy value into.
2269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to copy.
2270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to copy.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 198


2271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Number of characters actually copied
2272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.
2277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Swap contents with another string.
2283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String to swap with.
2284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  time.
2287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
2289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // String operations:
2292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  happen.
2297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
2299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to contents.
2304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return non-const pointer to contents.
2317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
2322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() noexcept
2323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
2324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
2325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 199


2328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type
2330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_get_allocator(); }
2332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C substring.
2335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
2343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string.
2351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
2352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns npos.
2358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string_view.
2367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C string.
2383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 200


2385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
2386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s within this string.  If found, returns the index where
2389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
2390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
2400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string.
2413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
2414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str within this string.  If found, returns the index where
2419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
2420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string_view.
2429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 201


2442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C substring.
2445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
2449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
2453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C string.
2461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
2462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of  last occurrence.
2464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s within this string.  If found, returns the index
2467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it begins.  If not found, returns npos.
2468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
2478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of string.
2491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
2492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
2497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 202


2499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of a string_view.
2508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
2510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C substring.
2525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
2526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
2533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C string.
2541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
2542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 203


2556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
2559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index
2565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it was found.  If not found, returns npos.
2566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__c, __pos); }
2572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
2575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
2576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
2581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
2592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
2594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C substring.
2609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
2610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
2612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 204


2613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
2617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C string.
2625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
2626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
2643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
2644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__c, __pos); }
2656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in string.
2659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
2660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  was found.  If not found, returns npos.
2666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 205


2670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
2677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C substring.
2692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
2694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
2700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C string.
2708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a different character.
2726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 206


2727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
2729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  index where it was found.  If not found, returns npos.
2733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in string.
2740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
2741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __str within this string.  If found,
2746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
2759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
2764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
2776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to consider.
2777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
2783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 207


2784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C string.
2789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
2790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __s within this string.  If found,
2795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
2796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
2797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
2801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
2803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a different character.
2808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
2809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
2811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
2815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
2817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
2819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Get a substring.
2822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character (default 0).
2823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  The new string.
2825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Construct and return a new string using the @a __n
2828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string
2833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return basic_string(*this,
2835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string.
2839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 208


2841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  size() and str.size().  The function then compares the two
2847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
2850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const basic_string& __str) const
2853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
2854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
2855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __osize = __str.size();
2856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!__r)
2860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
2861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __r;
2862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
2863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
2865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(const _Tp& __svt) const
2873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __size = this->size();
2877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __osize = __sv.size();
2878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (!__r)
2882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __r = _S_compare(__size, __osize);
2883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __r;
2884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to compare.
2890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
2892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 209


2898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
2905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  The number of characters to compare.
2907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
2909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  The number of characters to compare.
2911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
2913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
2914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
2915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
2919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
2920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this)
2921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
2923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
2924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a string.
2927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
2928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring.
2929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n characters
2933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to compare as the smallest of the length of the substring
2938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  and @a __str.size().  The function then compares the two
2939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling
2940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the shorter one is ordered first.
2943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a substring.
2949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character of substring.
2950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
2951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
2952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 210


2955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
2957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substrings.  The function then compares the two strings by
2965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  calling
2966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
2969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
2973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a C string.
2976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
2977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
2979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of size() and the length of a string
2983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  ordered first.
2987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
2988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
2989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
2990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
2991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 5 String::compare specification questionable
2993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
2994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a C string.
2995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
2996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
2997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
2998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
3001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
3005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of the length of the substring and
3006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of a string constructed from @a __s.  The
3007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two string by calling
3008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
3011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 211


3012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
3013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
3014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring against a character %array.
3017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
3018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
3019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  character %array to compare against.
3020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters of s.
3021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
3024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  effective length rlen of the strings to compare as the
3030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two strings by calling
3032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
3035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  no special meaning.
3038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
3039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
3040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2) const;
3042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus > 201703L
3044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(_CharT __x) const noexcept
3050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(_CharT __x) const noexcept
3062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++20
3068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 212


3069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     };
3072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // Reference-counted COW string implentation
3075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
3077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
3078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
3081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
3082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
3084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
3086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @doctodo
3095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Documentation?  What's that?
3098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  A string looks like this:
3101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @code
3103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                                        [_Rep]
3104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                                        _M_length
3105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   _M_dataplus                          _M_refcount
3107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @endcode
3109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
3112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  pointer to the header.
3113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  This approach has the enormous advantage that a string object
3115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  object at the front.
3121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 213


3126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  string length.)
3127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  destroy the empty-string _Rep object.
3133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
3134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  for a C++ string implementation.
3136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   */
3137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // 21.3  Template class basic_string
3138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
3140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
3141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _CharT_alloc_type;
3143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_CharT_alloc_type> _CharT_alloc_traits;
3144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
3146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					    traits_type;
3148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Alloc					    allocator_type;
3150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
3151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
3152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
3153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef value_type&				    reference;
3157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const value_type&				    const_reference;
3158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_traits::pointer	    pointer;
3160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _CharT_alloc_traits::const_pointer   const_pointer;
3161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****                                                             const_iterator;
3164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
3168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
3169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
3170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
3172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _Rep: string representation
3173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   Invariants:
3174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      must be kept null-terminated.
3176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   2. _M_capacity >= _M_length
3177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   3. _M_refcount has three states:
3179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //       0: one reference, non-const.
3181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 214


3183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       //      empty string representation needs no constructor.
3185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Rep_base
3187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type		_M_length;
3189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type		_M_capacity;
3190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Atomic_word		_M_refcount;
3191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Rep : _Rep_base
3194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Types:
3196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
3197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  rebind<char>::other _Raw_bytes_alloc;
3198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// (Public) Data members:
3200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// The maximum number of individual char_type elements of an
3202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// look like this:
3208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Solving for m:
3210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// In addition, this implementation quarters this amount.
3212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static const size_type	_S_max_size;
3213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static const _CharT	_S_terminal;
3214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // (carefully) in an empty string with one reference.
3217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static size_type _S_empty_rep_storage[];
3218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _Rep&
3220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { 
3222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  // be reasonably safe in this case.
3225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         bool
3230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
3232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if defined(__GTHREADS)
3233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // leaked or not), so a relaxed load is enough.
3237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->_M_refcount < 0;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 215


3240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
3242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         bool
3244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if defined(__GTHREADS)
3247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // but one reference concurrently with this check, so we need this
3250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           // _M_dispose.
3252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->_M_refcount > 0;
3255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
3257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
3259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->_M_refcount = -1; }
3261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
3263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->_M_refcount = 0; }
3265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    {
3273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_M_length = __n;
3275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // grrr. (per 21.3.4)
3277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    }
3279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_refdata() throw()
3283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Create & Destroy
3293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	static _Rep*
3294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 216


3297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    {
3303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - all but last decrements need to release to synchronize with
3307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the last decrement that will delete the object.
3308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   all the previous decrements.
3310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               // - last but one decrement needs to release to synchronize with
3311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****               //   the object is not shared anymore.
3313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							 -1) <= 0)
3315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		{
3316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_destroy(__a);
3318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		}
3319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    }
3320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}  // XXX MT
3321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	void
3323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_refcopy() throw()
3327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
3328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_refdata();
3333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}  // XXX MT
3334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT*
3336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : _Alloc
3341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
3343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT* _M_p; // The actual data.
3346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Data Members (public):
3350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // size that the allocator can hold.
3352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
3353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 217


3354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
3356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Data Members (private):
3357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
3360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return  _M_dataplus._M_p; }
3362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
3364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Rep*
3368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // but they do not call _M_leak.
3373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data()); }
3376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
3380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_leak_hard();
3386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
3392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
3394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
3395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
3396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
3400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
3403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 218


3411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
3414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
3415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
3422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
3423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
3428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
3437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
3445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
3446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
3452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
3453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
3454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
3456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
3457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
3459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 219


3468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
3474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
3479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
3489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_leak_hard();
3496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _Rep&
3498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _Rep::_S_empty_rep(); }
3500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
3503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
3506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
3507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
3511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
3513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
3514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
3516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
3519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
3520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
3521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
3522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 220


3525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
3526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
3530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
3531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
3534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
3540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
3545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
3547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
3549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc())
3550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc())
3552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
3559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a);
3560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str);
3567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc());
3578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 221


3582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n);
3587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
3589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
3593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a);
3596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
3600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
3601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
3605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc());
3608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
3611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
3612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
3615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
3617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
3618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
3620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_S_construct(__s, __s ? __s + traits_type::length(__s) :
3621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****                                  __s + npos, __a), __a)
3622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
3626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
3627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to use.
3628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move construct string.
3635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 222


3639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
3640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str)
3641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(std::move(__str._M_dataplus))
3645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
3655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
3661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(__a, __str.get_allocator()), __a)
3662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { }
3663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
3665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(__str._M_data(), __a)
3666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__a == __str.get_allocator())
3668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
3669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(_S_empty_rep()._M_refdata());
3671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
3672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(_S_construct(size_type(), _CharT(), __a));
3673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
3675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
3676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_dataplus._M_p = _S_construct(__str.begin(), __str.end(), __a);
3677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
3679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
3682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
3683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __end  End of range.
3684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
3687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc());
3689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t   Source object convertible to string view.
3694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 223


3696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a   Allocator to use.
3697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
3701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a string_view.
3705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t  Source object convertible to string view.
3706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit
3710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
3713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
3716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const basic_string& __str)
3726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__str); }
3727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
3731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const _CharT* __s) 
3734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
3735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
3738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Source character.
3739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
3741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
3742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(_CharT __c) 
3745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
3746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(1, __c); 
3747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 224


3753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
3754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
3757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
3758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(basic_string&& __str)
3760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
3761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// NB: DR 1204.
3763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->swap(__str);
3764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
3770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
3772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
3773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
3775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
3776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
3778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
3780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
3785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
3786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator=(const _Tp& __svt)
3787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->assign(__svt); }
3788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Convert to a string_view.
3791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return A string_view.
3792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator __sv_type() const noexcept
3794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(data(), size()); }
3795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
3796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Iterators:
3798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string.  Unshares the string.
3801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
3806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data());
3807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 225


3810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
3812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
3816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
3819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Unshares the string.
3820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
3822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() // FIXME C++11: should be noexcept.
3823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
3825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + this->size());
3826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
3831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  order.  Unshares the string.
3840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
3842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
3844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
3849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
3853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element order.  Unshares the string.
3858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
3860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
3862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
3866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 226


3867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
3876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cbegin() const noexcept
3879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
3880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
3884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
3886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cend() const noexcept
3887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
3893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crbegin() const noexcept
3896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
3897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
3901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
3902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
3904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crend() const noexcept
3905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
3909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Capacity:
3910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
3911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
3912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_length; }
3915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
3917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
3918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_length; }
3921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
3923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 227


3924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _Rep::_S_max_size; }
3926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
3931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
3933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
3934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
3939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
3945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  setting them to 0.
3949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n)
3952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
3953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
3955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
3959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_exceptions
3960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (capacity() > size())
3961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
3962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    try
3963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { reserve(0); }
3964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    catch(...)
3965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { }
3966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
3967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
3969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
3970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
3973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  before needing to allocate more memory.
3974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
3976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_rep()->_M_capacity; }
3978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
3980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 228


3981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          characters.
3982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
3983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
3986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
3987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
3988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
3989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
3990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
3991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
3992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  data.
3995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
3996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
3997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
3998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
3999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Erases the string, making it empty.
4001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
4003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
4005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (_M_rep()->_M_is_shared())
4007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
4008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
4009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
4010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
4011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
4012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
4013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
4015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // PR 56166: this should not throw.
4016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear()
4018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_mutate(0, this->size(), 0); }
4019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
4020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
4023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
4024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NODISCARD bool
4026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
4027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->size() == 0; }
4028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Element access:
4030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
4033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
4034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
4036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
4037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 229


4038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
4039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
4042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
4044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
4045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
4050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
4051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
4053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
4054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)  Unshares the string.
4056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[](size_type __pos)
4059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
4061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// and in C++11 mode.
4062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
4063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
4064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
4065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
4066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
4067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
4072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
4073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
4076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
4077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
4078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n) const
4081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= this->size())
4083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
4085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
4086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
4087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
4088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
4093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
4094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 230


4095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
4097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
4098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  unsharing the string.
4100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n)
4103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= size())
4105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
4107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
4108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
4109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
4110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
4111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
4116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front()
4120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
4123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
4130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() const noexcept
4131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
4134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
4138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
4139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
4141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back()
4142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
4145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last element of the %string.
4150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 231


4152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() const noexcept
4153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
4156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
4158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Modifiers:
4160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
4162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
4167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__str); }
4168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
4171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
4176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__s); }
4177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a character.
4180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to append.
4181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(_CharT __c)
4185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->push_back(__c);
4187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
4193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
4204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 232


4209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator+=(const _Tp& __svt)
4210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->append(__svt); }
4211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
4215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str);
4220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a substring.
4223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
4224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
4230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
4232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
4233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos);
4236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C substring.
4239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n);
4245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
4248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
4249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s)
4253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
4260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
4261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
4262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
4265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 233


4266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(size_type __n, _CharT __c);
4268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
4272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
4277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
4282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
4296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt)
4302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *               from.
4311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos The position in the string_view to append from.
4312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return append(__sv.data()
4321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
4322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 234


4323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a single character.
4328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to append.
4329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       push_back(_CharT __c)
4332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = 1 + this->size();
4334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->reserve(__len);
4336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
4342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
4343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str);
4347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
4351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
4352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
4356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(basic_string&& __str)
4359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(allocator_traits<_Alloc>::is_always_equal::value)
4360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->swap(__str);
4362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a substring of a string.
4368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to use.
4369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str.
4370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
4371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the substring of @a __str
4375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is larger than the number of available characters in @a
4377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, the remainder of @a __str is used.
4378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 235


4380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
4381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__str._M_data()
4382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a C substring.
4387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
4388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
4389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the first @a __n
4392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s, size_type __n);
4397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of a C string.
4400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
4401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function returns.
4406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s)
4409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to multiple characters.
4416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Length of the resulting string.
4417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
4418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character @a __c.
4422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(size_type __n, _CharT __c)
4425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a range of characters.
4429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 236


4437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(initializer_list<_CharT> __l)
4448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a string_view.
4454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt The source object convertible to string_view.
4455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	assign(const _Tp& __svt)
4460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to assign.
4470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return assign(__sv.data()
4478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
4479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
4485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
4487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 237


4494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a range of characters.
4502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __beg  Start of range.
4504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __end  End of range.
4505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
4514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert value of a string.
4534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
4535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
4536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters causes the length to exceed max_size(),
4541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a substring.
4550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Position in string to insert at.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 238


4551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to insert.
4552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
4554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos2 > @a str.size().
4558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     size_type __pos2, size_type __n = npos)
4569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C substring.
4575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
4577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to insert.
4578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
4585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  doesn't change if an error is thrown.
4588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a C string.
4594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to insert.
4596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 239


4608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert multiple characters.
4616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index in string to insert at.
4617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert
4618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      size_type(0), __n, __c); }
4634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert one character.
4637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to insert.
4639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       insert(iterator __p, _CharT __c)
4650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_leaked();
4655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
4656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
4659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
4661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 240


4665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
4667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Insert a string_view.
4675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string to insert at.
4676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
4677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Position in string_view to insert
4678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from.
4679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to insert.
4680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
4683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
4684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
4687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
4688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
4690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
4691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
4693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove characters.
4696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { 
4712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
4715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove one character.
4719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  iterator referencing same location after removal.
4721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 241


4722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the character at @a __position from this string. The value
4723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  of the string doesn't change if an error is thrown.
4724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(iterator __position)
4727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __position < _M_iend());
4730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_rep()->_M_set_leaked();
4733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return iterator(_M_data() + __pos);
4734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove a range of characters.
4738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
4746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       erase(iterator __first, iterator __last);
4747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  
4748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
4749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Remove the last character.
4751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The string must be non-empty.
4753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
4754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
4755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
4756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
4758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	erase(size() - 1, 1);
4759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
4761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
4764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to be replaced.
4766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
4767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.
4770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  error is thrown.
4778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 242


4779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value from another string.
4785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character to replace.
4786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to insert.
4788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from str to use.
4790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.size().
4793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string doesn't change if an error is thrown.
4800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
4804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
4813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
4825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2);
4829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with value of a C string.
4832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to insert.
4835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 243


4836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  change if an error is thrown.
4845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace characters with multiple characters.
4855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to replace.
4856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters to insert.
4858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
4859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is thrown.
4869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string.
4877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String value to insert.
4880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the string doesn't change if an error is thrown.
4887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 244


4893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C substring.
4894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
4897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to insert.
4898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
4905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with C string.
4917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string value to insert.
4920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
4932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to insert.
4940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to insert.
4941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 245


4950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
4958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with range.
4959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
4964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
4966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
4970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
4971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
4972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
4973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
4974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(iterator __i1, iterator __i2,
4975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
4977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   && __i2 <= _M_iend());
4979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
4983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Specializations for the common case of pointer and iterator:
4985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
4989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
4991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
4994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
4995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
4996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
4997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2,
4998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1, __k2 - __k1);
5005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 246


5007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
5009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
5015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       replace(iterator __i1, iterator __i2,
5019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
5020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				 && __i2 <= _M_iend());
5023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			     __k1.base(), __k2 - __k1);
5026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
5029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
5031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
5034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The value of the string doesn't change if an error is
5041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
5042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
5044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    initializer_list<_CharT> __l)
5045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
5046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
5047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  The position to replace at.
5052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n    The number of characters to replace.
5053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
5054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
5058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
5059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
5062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 247


5064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  The position to replace at.
5067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1    The number of characters to replace.
5068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
5070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2    The number of characters to insert.
5071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
5075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
5076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
5077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__pos1, __n1,
5080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __sv.data()
5081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
5082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
5083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Replace range of characters with string_view.
5087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i1    An iterator referencing the start position
5088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           to replace at.
5089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __i2    An iterator referencing the end position
5090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           for the replace.
5091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
5093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
5096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
5097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
5104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
5105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
5106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _Integer __val, __true_type)
5108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
5111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string&
5112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _InputIterator __k2, __false_type);
5114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     _CharT __c);
5118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
5120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 248


5121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		      size_type __n2);
5122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIter is an integral type
5125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 const _Alloc& __a, __false_type)
5129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Integer>
5137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 const _Alloc& __a, __true_type)
5140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				    __end, __a); }
5142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _CharT*
5144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _S_construct(__req, __c, __a); }
5146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
5154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InIterator>
5157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		      input_iterator_tag);
5160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
5163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _FwdIterator>
5164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static _CharT*
5165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     forward_iterator_tag);
5167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static _CharT*
5169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
5172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy substring into C string.
5175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to copy value into.
5176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to copy.
5177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character to copy.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 249


5178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Number of characters actually copied
5179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range is thrown.
5184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Swap contents with another string.
5190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String to swap with.
5191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  time.
5194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
5196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       swap(basic_string& __s)
5197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value);
5198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // String operations:
5200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  happen.
5205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
5207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
5209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return const pointer to contents.
5212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const _CharT*
5219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
5221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return non-const pointer to contents.
5225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _CharT*
5230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       data() noexcept
5231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_leak();
5233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data();
5234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 250


5235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
5236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type
5241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
5243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C substring.
5246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
5254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string.
5262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
5263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns npos.
5269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a C string.
5277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s within this string.  If found, returns the index where
5283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
5284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 251


5292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
5294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a string_view.
5308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of first occurrence.
5311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string.
5324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to locate.
5325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str within this string.  If found, returns the index where
5330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  it begins.  If not found, returns npos.
5331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C substring.
5339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it begins.  If not found, returns
5347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 252


5349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a C string.
5355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to locate.
5356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of  last occurrence.
5358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s within this string.  If found, returns the index
5361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it begins.  If not found, returns npos.
5362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
5372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a string_view.
5386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of start of last occurrence.
5389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of string.
5402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
5403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 253


5406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
5408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C substring.
5418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
5419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
5426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of C string.
5434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  String containing characters to locate.
5435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character.
5452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index
5458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  where it was found.  If not found, returns npos.
5459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 254


5463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find(__c, __pos); }
5465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character of a string_view.
5469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
5471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
5486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to locate.
5487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __str within this string.  If found,
5492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
5497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C substring.
5502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
5503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to search for.
5505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found, returns the index where it was found.  If not found,
5510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of C string.
5518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to locate.
5519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 255


5520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character.
5536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to locate.
5537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->rfind(__c, __pos); }
5549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character of string.
5553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to locate.
5555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in string.
5570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
5571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  was found.  If not found, returns npos.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 256


5577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C substring.
5585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from.
5587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  this string.  If found, returns the index where it was
5593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in C string.
5601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
5611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a different character.
5619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
5620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  index where it was found.  If not found, returns npos.
5626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find position of a character not in a string_view.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 257


5634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
5636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of first occurrence.
5638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in string.
5651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String containing characters to avoid.
5652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __str within this string.  If found,
5657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from.
5669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters from s to consider.
5670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns npos.
5676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in C string.
5682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string containing characters to avoid.
5683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  not contained in @a __s within this string.  If found,
5688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  returns the index where it was found.  If not found, returns
5689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  npos.
5690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 258


5691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
5694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
5696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a different character.
5701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to avoid.
5702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  found.  If not found, returns npos.
5708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
5710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT;
5712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                characters to avoid.
5718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Index of last occurrence.
5720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, size_type>
5723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Get a substring.
5733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character (default 0).
5734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  The new string.
5736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Construct and return a new string using the @a __n
5739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string
5744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return basic_string(*this,
5746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 259


5748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string.
5750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  size() and str.size().  The function then compares the two
5758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
5761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const basic_string& __str) const
5764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
5765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
5766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __osize = __str.size();
5767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!__r)
5771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __r = _S_compare(__size, __osize);
5772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __r;
5773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
5774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
5776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(const _Tp& __svt) const
5784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   __sv_type __sv = __svt;
5787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __size = this->size();
5788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __osize = __sv.size();
5789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (!__r)
5793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __r = _S_compare(__size, __osize);
5794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __r;
5795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to compare.
5801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                against.
5803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 260


5805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a string_view.
5816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  The number of characters to compare.
5818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *                 against.
5820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  The number of characters to compare.
5822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
5824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
5825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, int>
5826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
5830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
5831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __sv_type(*this)
5832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
5834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
5835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a string.
5838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters in substring.
5840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n characters
5844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to compare as the smallest of the length of the substring
5849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  and @a __str.size().  The function then compares the two
5850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings by calling
5851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the shorter one is ordered first.
5854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a substring.
5860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos1  Index of first character of substring.
5861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 261


5862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  String to compare against.
5863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  substrings.  The function then compares the two strings by
5876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  calling
5877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  otherwise the shorter one is ordered first.
5880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
5884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare to a C string.
5887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
5888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of size() and the length of a string
5894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
5896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  ordered first.
5898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 5 String::compare specification questionable
5904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring to a C string.
5906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  C string to compare against.
5909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  compare as the smallest of the length of the substring and
5917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the length of a string constructed from @a __s.  The
5918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two string by calling
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 262


5919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
5922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
5927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Compare substring against a character %array.
5928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of first character of substring.
5929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n1  Number of characters in substring.
5930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  character %array to compare against.
5931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n2  Number of characters of s.
5932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Form the substring of this string from the @a __n1
5935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  effective length rlen of the strings to compare as the
5941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function then compares the two strings by calling
5943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  one is ordered first.
5946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
5947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  no special meaning.
5949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       */
5950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       int
5951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
5952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      size_type __n2) const;
5953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus > 201703L
5955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(_CharT __x) const noexcept
5961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       starts_with(const _CharT* __x) const noexcept
5965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
5972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(_CharT __x) const noexcept
5973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 263


5976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ends_with(const _CharT* __x) const noexcept
5977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++20
5979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
5981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
5983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 					    void* exc);
5984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend const char*
5985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
5986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_D1(void *that);
5988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       friend void
5989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
5990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # endif
5991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   };
5992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
5993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
5994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides >= 201606
5995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
5996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _InputIterator, typename _CharT
5997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
5998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
6000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
6002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
6003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
6005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
6006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits,
6007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
6010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits,
6013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
6016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 const _Allocator& = _Allocator())
6019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator+
6024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate two strings.
6026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
6032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 264


6033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__rhs);
6037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate C string and string.
6042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const _CharT* __lhs,
6049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate character and string.
6053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate string and C string.
6063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__rhs);
6074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Concatenate string and character.
6079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Last string.
6081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
6086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
6088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __string_type::size_type		__size_type;
6089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __string_type __str(__lhs);
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 265


6090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       __str.append(__size_type(1), __rhs);
6091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return __str;
6092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
6095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
6112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
6113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       using _Alloc_traits = allocator_traits<_Alloc>;
6114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool __use_rhs = false;
6115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       if _GLIBCXX17_CONSTEXPR (typename _Alloc_traits::is_always_equal{})
6116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__use_rhs = true;
6117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       else if (__lhs.get_allocator() == __rhs.get_allocator())
6118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__use_rhs = true;
6119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       if (__use_rhs)
6120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
6122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  const auto __size = __lhs.size() + __rhs.size();
6123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  if (__size > __lhs.capacity() && __size <= __rhs.capacity())
6124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    return std::move(__rhs.insert(0, __lhs));
6125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
6126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       return std::move(__lhs.append(__rhs));
6127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     }
6128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(const _CharT* __lhs,
6132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(_CharT __lhs,
6138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
6140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      const _CharT* __rhs)
6145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 266


6147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      _CharT __rhs)
6151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
6152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
6153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   // operator ==
6155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of two strings.
6157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  First string.
6158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  Second string.
6159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     _GLIBCXX_NOEXCEPT
6166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT>
6169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline
6170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
 3078              		.loc 11 6171 5 is_stmt 1 view .LVU692
 3079              	.LBB2732:
 3080              	.LBB2733:
 3081              	.LBI2733:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 3082              		.loc 11 901 7 view .LVU693
 3083              	.LBB2734:
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3084              		.loc 11 902 16 is_stmt 0 view .LVU694
 3085 001c E26C     		ldr	r2, [r4, #76]
 3086              	.LVL174:
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3087              		.loc 11 902 16 view .LVU695
 3088              	.LBE2734:
 3089              	.LBE2733:
 3090              	.LBB2735:
 3091              	.LBI2735:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 3092              		.loc 11 901 7 is_stmt 1 view .LVU696
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 3093              		.loc 11 901 7 is_stmt 0 view .LVU697
 3094              	.LBE2735:
 3095              	.LBB2736:
 3096              	.LBB2737:
 3097              	.LBB2738:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3098              		.loc 11 187 28 view .LVU698
 3099 001e DDE90063 		ldrd	r6, r3, [sp]
 3100              	.LBE2738:
 3101              	.LBE2737:
 3102              	.LBE2736:
6172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 267


6173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return (__lhs.size() == __rhs.size()
6174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
 3103              		.loc 11 6174 8 view .LVU699
 3104 0022 9A42     		cmp	r2, r3
 3105 0024 2BD0     		beq	.L195
 3106              	.L150:
 3107              	.LVL175:
 3108              		.loc 11 6174 8 view .LVU700
 3109              	.LBE2732:
 3110              	.LBE2731:
 3111              	.LBB2746:
 3112              	.LBI2746:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3113              		.loc 11 657 7 is_stmt 1 view .LVU701
 3114              	.LBB2747:
 3115              	.LBB2748:
 3116              	.LBI2748:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3117              		.loc 11 229 7 view .LVU702
 3118              	.LBB2749:
 3119              	.LBB2750:
 3120              	.LBI2750:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3121              		.loc 11 221 7 view .LVU703
 3122              	.LBB2751:
 3123              	.LBI2751:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3124              		.loc 11 200 7 view .LVU704
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3125              		.loc 11 200 7 is_stmt 0 view .LVU705
 3126              	.LBE2751:
 3127              	.LBE2750:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3128              		.loc 11 231 2 view .LVU706
 3129 0026 AE42     		cmp	r6, r5
 3130 0028 04D0     		beq	.L151
 3131              	.LVL176:
 3132              	.LBB2753:
 3133              	.LBI2753:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3134              		.loc 11 236 7 is_stmt 1 view .LVU707
 3135              	.LBB2754:
 3136              	.LBB2755:
 3137              	.LBI2755:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3138              		.loc 16 491 7 view .LVU708
 3139              	.LBB2756:
 3140              	.LBI2756:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3141              		.loc 15 120 7 view .LVU709
 3142              	.LBE2756:
 3143              	.LBE2755:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3144              		.loc 11 237 34 is_stmt 0 view .LVU710
 3145 002a 0299     		ldr	r1, [sp, #8]
 3146              	.LBB2762:
 3147              	.LBB2759:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 268


 3148              	.LBB2757:
 3149              		.loc 15 133 19 view .LVU711
 3150 002c 3046     		mov	r0, r6
 3151 002e 0131     		adds	r1, r1, #1
 3152              	.LVL177:
 3153              		.loc 15 133 19 view .LVU712
 3154 0030 FFF7FEFF 		bl	_ZdlPvj
 3155              	.LVL178:
 3156              		.loc 15 133 19 view .LVU713
 3157              	.LBE2757:
 3158              	.LBE2759:
 3159              	.LBE2762:
 3160              	.LBE2754:
 3161              	.LBE2753:
 3162              	.LBE2749:
 3163              	.LBE2748:
 3164              	.LBB2769:
 3165              	.LBI2769:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3166              		.loc 11 150 14 is_stmt 1 view .LVU714
 3167              	.LBB2770:
 3168              	.LBI2770:
 3169              		.loc 14 162 7 view .LVU715
 3170              	.LBB2771:
 3171              	.LBI2771:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3172              		.loc 15 89 7 view .LVU716
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3173              		.loc 15 89 7 is_stmt 0 view .LVU717
 3174              	.LBE2771:
 3175              	.LBE2770:
 3176              	.LBE2769:
 3177              	.LBE2747:
 3178              	.LBE2746:
 3179              	.LBB2777:
 3180              	.LBI2777:
 3181              		.loc 14 162 7 is_stmt 1 view .LVU718
 3182              	.LBB2778:
 3183              	.LBI2778:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3184              		.loc 15 89 7 view .LVU719
 3185              	.L151:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3186              		.loc 15 89 7 is_stmt 0 view .LVU720
 3187              	.LBE2778:
 3188              	.LBE2777:
 3189              	.LBE2980:
  66:../../dsp_fv/biquad.h ****         {
  67:../../dsp_fv/biquad.h ****             float yn = processedCoeff * (aCoeffVector[0] * xn +
  68:../../dsp_fv/biquad.h ****                 aCoeffVector[1] * xStateVector[0] +
  69:../../dsp_fv/biquad.h ****                 aCoeffVector[2] * xStateVector[1] -
  70:../../dsp_fv/biquad.h ****                 bCoeffVector[1] * yStateVector[0] -
  71:../../dsp_fv/biquad.h ****                 bCoeffVector[2] * yStateVector[1]) + 
  72:../../dsp_fv/biquad.h ****                 dryCoeff * xn;
  73:../../dsp_fv/biquad.h **** 
  74:../../dsp_fv/biquad.h **** 
  75:../../dsp_fv/biquad.h ****             xStateVector[1] = xStateVector[0];
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 269


  76:../../dsp_fv/biquad.h ****             xStateVector[0] = xn;
  77:../../dsp_fv/biquad.h **** 
  78:../../dsp_fv/biquad.h ****             yStateVector[1] = yStateVector[0];
  79:../../dsp_fv/biquad.h ****             yStateVector[0] = yn;
  80:../../dsp_fv/biquad.h **** 
  81:../../dsp_fv/biquad.h ****             return yn;
  82:../../dsp_fv/biquad.h ****         }
  83:../../dsp_fv/biquad.h ****         else if (form == string("canonical"))
 3190              		.loc 7 83 14 is_stmt 1 view .LVU721
 3191              	.LBB2981:
 3192              	.LBB2780:
 3193              	.LBB2781:
 3194              	.LBI2781:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 3195              		.loc 14 144 7 view .LVU722
 3196              	.LBB2782:
 3197              	.LBI2782:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3198              		.loc 15 79 7 view .LVU723
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3199              		.loc 15 79 7 is_stmt 0 view .LVU724
 3200              	.LBE2782:
 3201              	.LBE2781:
 3202              	.LBB2783:
 3203              	.LBI2783:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 3204              		.loc 11 525 7 is_stmt 1 view .LVU725
 3205              	.LBB2784:
 3206              	.LBB2785:
 3207              	.LBB2786:
 3208              	.LBI2786:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3209              		.loc 11 190 7 view .LVU726
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3210              		.loc 11 190 7 is_stmt 0 view .LVU727
 3211              	.LBE2786:
 3212              	.LBB2787:
 3213              	.LBI2787:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 3214              		.loc 11 156 2 is_stmt 1 view .LVU728
 3215              	.LBB2788:
 3216              	.LBB2789:
 3217              	.LBB2790:
 3218              	.LBI2790:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3219              		.loc 14 147 7 view .LVU729
 3220              	.LBB2791:
 3221              	.LBI2791:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3222              		.loc 15 82 7 view .LVU730
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3223              		.loc 15 82 7 is_stmt 0 view .LVU731
 3224              	.LBE2791:
 3225              	.LBE2790:
 3226              	.LBE2789:
 3227              	.LBE2788:
 3228              	.LBE2787:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 270


 3229              	.LBB2794:
 3230              	.LBB2795:
 3231              	.LBB2796:
 3232              	.LBB2797:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 3233              		.loc 11 247 23 view .LVU732
 3234 0034 5D4A     		ldr	r2, .L199+4
 3235 0036 6846     		mov	r0, sp
 3236              	.LBE2797:
 3237              	.LBE2796:
 3238              	.LBE2795:
 3239              	.LBE2794:
 3240              	.LBB2801:
 3241              	.LBB2793:
 3242              	.LBB2792:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3243              		.loc 11 157 35 view .LVU733
 3244 0038 0095     		str	r5, [sp]
 3245              	.LVL179:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3246              		.loc 11 157 35 view .LVU734
 3247              	.LBE2792:
 3248              	.LBE2793:
 3249              	.LBE2801:
 3250              	.LBB2802:
 3251              	.LBI2802:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 3252              		.loc 12 351 7 is_stmt 1 view .LVU735
 3253              	.LBE2802:
 3254              	.LBE2785:
 3255              	.LBE2784:
 3256              	.LBE2783:
 3257              	.LBE2780:
 3258              	.LBE2981:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 3259              		.loc 12 357 2 view .LVU736
 3260              	.LBB2982:
 3261              	.LBB2959:
 3262              	.LBB2806:
 3263              	.LBB2805:
 3264              	.LBB2804:
 3265              	.LBB2803:
 3266              	.LBI2794:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 3267              		.loc 11 263 9 view .LVU737
 3268              	.LBB2800:
 3269              	.LBB2799:
 3270              	.LBI2796:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 3271              		.loc 11 243 9 view .LVU738
 3272              	.LBB2798:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 3273              		.loc 11 247 23 is_stmt 0 view .LVU739
 3274 003a A2F10901 		sub	r1, r2, #9
 3275 003e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 3276              	.LVL180:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 271


 3277              		.loc 11 247 23 view .LVU740
 3278              	.LBE2798:
 3279              	.LBE2799:
 3280              	.LBE2800:
 3281              	.LBE2803:
 3282              	.LBE2804:
 3283              	.LBE2805:
 3284              	.LBE2806:
 3285              	.LBB2807:
 3286              	.LBI2807:
6171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
 3287              		.loc 11 6171 5 is_stmt 1 view .LVU741
 3288              	.LBB2808:
 3289              	.LBB2809:
 3290              	.LBI2809:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 3291              		.loc 11 901 7 view .LVU742
 3292              	.LBB2810:
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3293              		.loc 11 902 16 is_stmt 0 view .LVU743
 3294 0042 E26C     		ldr	r2, [r4, #76]
 3295              	.LVL181:
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3296              		.loc 11 902 16 view .LVU744
 3297              	.LBE2810:
 3298              	.LBE2809:
 3299              	.LBB2811:
 3300              	.LBI2811:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 3301              		.loc 11 901 7 is_stmt 1 view .LVU745
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 3302              		.loc 11 901 7 is_stmt 0 view .LVU746
 3303              	.LBE2811:
 3304              	.LBB2812:
 3305              	.LBB2813:
 3306              	.LBB2814:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3307              		.loc 11 187 28 view .LVU747
 3308 0044 DDE90063 		ldrd	r6, r3, [sp]
 3309              	.LBE2814:
 3310              	.LBE2813:
 3311              	.LBE2812:
 3312              		.loc 11 6174 8 view .LVU748
 3313 0048 9A42     		cmp	r2, r3
 3314 004a 68D0     		beq	.L196
 3315              	.L155:
 3316              	.LVL182:
 3317              		.loc 11 6174 8 view .LVU749
 3318              	.LBE2808:
 3319              	.LBE2807:
 3320              	.LBB2822:
 3321              	.LBI2822:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3322              		.loc 11 657 7 is_stmt 1 view .LVU750
 3323              	.LBB2823:
 3324              	.LBB2824:
 3325              	.LBI2824:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 272


 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3326              		.loc 11 229 7 view .LVU751
 3327              	.LBB2825:
 3328              	.LBB2826:
 3329              	.LBI2826:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3330              		.loc 11 221 7 view .LVU752
 3331              	.LBB2827:
 3332              	.LBI2827:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3333              		.loc 11 200 7 view .LVU753
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3334              		.loc 11 200 7 is_stmt 0 view .LVU754
 3335              	.LBE2827:
 3336              	.LBE2826:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3337              		.loc 11 231 2 view .LVU755
 3338 004c AE42     		cmp	r6, r5
 3339 004e 04D0     		beq	.L157
 3340              	.LVL183:
 3341              	.LBB2829:
 3342              	.LBI2829:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3343              		.loc 11 236 7 is_stmt 1 view .LVU756
 3344              	.LBB2830:
 3345              	.LBB2831:
 3346              	.LBI2831:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3347              		.loc 16 491 7 view .LVU757
 3348              	.LBB2832:
 3349              	.LBI2832:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3350              		.loc 15 120 7 view .LVU758
 3351              	.LBE2832:
 3352              	.LBE2831:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3353              		.loc 11 237 34 is_stmt 0 view .LVU759
 3354 0050 0299     		ldr	r1, [sp, #8]
 3355              	.LBB2838:
 3356              	.LBB2835:
 3357              	.LBB2833:
 3358              		.loc 15 133 19 view .LVU760
 3359 0052 3046     		mov	r0, r6
 3360 0054 0131     		adds	r1, r1, #1
 3361              	.LVL184:
 3362              		.loc 15 133 19 view .LVU761
 3363 0056 FFF7FEFF 		bl	_ZdlPvj
 3364              	.LVL185:
 3365              		.loc 15 133 19 view .LVU762
 3366              	.LBE2833:
 3367              	.LBE2835:
 3368              	.LBE2838:
 3369              	.LBE2830:
 3370              	.LBE2829:
 3371              	.LBE2825:
 3372              	.LBE2824:
 3373              	.LBB2845:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 273


 3374              	.LBI2845:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3375              		.loc 11 150 14 is_stmt 1 view .LVU763
 3376              	.LBB2846:
 3377              	.LBI2846:
 3378              		.loc 14 162 7 view .LVU764
 3379              	.LBB2847:
 3380              	.LBI2847:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3381              		.loc 15 89 7 view .LVU765
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3382              		.loc 15 89 7 is_stmt 0 view .LVU766
 3383              	.LBE2847:
 3384              	.LBE2846:
 3385              	.LBE2845:
 3386              	.LBE2823:
 3387              	.LBE2822:
 3388              	.LBB2853:
 3389              	.LBI2853:
 3390              		.loc 14 162 7 is_stmt 1 view .LVU767
 3391              	.LBB2854:
 3392              	.LBI2854:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3393              		.loc 15 89 7 view .LVU768
 3394              	.L157:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3395              		.loc 15 89 7 is_stmt 0 view .LVU769
 3396              	.LBE2854:
 3397              	.LBE2853:
 3398              	.LBE2959:
 3399              	.LBE2982:
  84:../../dsp_fv/biquad.h ****         {
  85:../../dsp_fv/biquad.h ****             auto wn = (float) ( xn - aCoeffVector[0] * wStateVector[0] - 
  86:../../dsp_fv/biquad.h ****                                 bCoeffVector[1] * wStateVector[1]);
  87:../../dsp_fv/biquad.h ****             auto ynUnprocessed = (float) ( aCoeffVector[0] * wn     + 
  88:../../dsp_fv/biquad.h ****                                 aCoeffVector[1] * wStateVector[0]   + 
  89:../../dsp_fv/biquad.h ****                                 aCoeffVector[2] * wStateVector[1]);
  90:../../dsp_fv/biquad.h **** 
  91:../../dsp_fv/biquad.h ****             
  92:../../dsp_fv/biquad.h ****             wStateVector[1] = wStateVector[0];
  93:../../dsp_fv/biquad.h ****             wStateVector[0] = wn;
  94:../../dsp_fv/biquad.h ****             return (float) (processedCoeff * ynUnprocessed +dryCoeff * xn); //yn
  95:../../dsp_fv/biquad.h **** 
  96:../../dsp_fv/biquad.h ****         }
  97:../../dsp_fv/biquad.h ****         else if (form == string("None"))
 3400              		.loc 7 97 14 is_stmt 1 view .LVU770
 3401              	.LBB2983:
 3402              	.LBB2960:
 3403              	.LBB2856:
 3404              	.LBB2857:
 3405              	.LBI2857:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 3406              		.loc 14 144 7 view .LVU771
 3407              	.LBB2858:
 3408              	.LBI2858:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3409              		.loc 15 79 7 view .LVU772
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 274


  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3410              		.loc 15 79 7 is_stmt 0 view .LVU773
 3411              	.LBE2858:
 3412              	.LBE2857:
 3413              	.LBB2859:
 3414              	.LBI2859:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 3415              		.loc 11 525 7 is_stmt 1 view .LVU774
 3416              	.LBB2860:
 3417              	.LBB2861:
 3418              	.LBB2862:
 3419              	.LBI2862:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3420              		.loc 11 190 7 view .LVU775
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3421              		.loc 11 190 7 is_stmt 0 view .LVU776
 3422              	.LBE2862:
 3423              	.LBB2863:
 3424              	.LBI2863:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 3425              		.loc 11 156 2 is_stmt 1 view .LVU777
 3426              	.LBB2864:
 3427              	.LBB2865:
 3428              	.LBB2866:
 3429              	.LBI2866:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3430              		.loc 14 147 7 view .LVU778
 3431              	.LBB2867:
 3432              	.LBI2867:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3433              		.loc 15 82 7 view .LVU779
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3434              		.loc 15 82 7 is_stmt 0 view .LVU780
 3435              	.LBE2867:
 3436              	.LBE2866:
 3437              	.LBE2865:
 3438              	.LBE2864:
 3439              	.LBE2863:
 3440              	.LBB2870:
 3441              	.LBB2871:
 3442              	.LBB2872:
 3443              	.LBB2873:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 3444              		.loc 11 247 23 view .LVU781
 3445 005a 554A     		ldr	r2, .L199+8
 3446 005c 6846     		mov	r0, sp
 3447              	.LBE2873:
 3448              	.LBE2872:
 3449              	.LBE2871:
 3450              	.LBE2870:
 3451              	.LBB2877:
 3452              	.LBB2869:
 3453              	.LBB2868:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3454              		.loc 11 157 35 view .LVU782
 3455 005e 0095     		str	r5, [sp]
 3456              	.LVL186:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 275


 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3457              		.loc 11 157 35 view .LVU783
 3458              	.LBE2868:
 3459              	.LBE2869:
 3460              	.LBE2877:
 3461              	.LBB2878:
 3462              	.LBI2878:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 3463              		.loc 12 351 7 is_stmt 1 view .LVU784
 3464              	.LBE2878:
 3465              	.LBE2861:
 3466              	.LBE2860:
 3467              	.LBE2859:
 3468              	.LBE2856:
 3469              	.LBE2960:
 3470              	.LBE2983:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 3471              		.loc 12 357 2 view .LVU785
 3472              	.LBB2984:
 3473              	.LBB2961:
 3474              	.LBB2946:
 3475              	.LBB2882:
 3476              	.LBB2881:
 3477              	.LBB2880:
 3478              	.LBB2879:
 3479              	.LBI2870:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 3480              		.loc 11 263 9 view .LVU786
 3481              	.LBB2876:
 3482              	.LBB2875:
 3483              	.LBI2872:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 3484              		.loc 11 243 9 view .LVU787
 3485              	.LBB2874:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 3486              		.loc 11 247 23 is_stmt 0 view .LVU788
 3487 0060 111F     		subs	r1, r2, #4
 3488 0062 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 3489              	.LVL187:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 3490              		.loc 11 247 23 view .LVU789
 3491              	.LBE2874:
 3492              	.LBE2875:
 3493              	.LBE2876:
 3494              	.LBE2879:
 3495              	.LBE2880:
 3496              	.LBE2881:
 3497              	.LBE2882:
 3498              	.LBB2883:
 3499              	.LBI2883:
6171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
 3500              		.loc 11 6171 5 is_stmt 1 view .LVU790
 3501              	.LBB2884:
 3502              	.LBB2885:
 3503              	.LBI2885:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 3504              		.loc 11 901 7 view .LVU791
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 276


 3505              	.LBB2886:
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3506              		.loc 11 902 16 is_stmt 0 view .LVU792
 3507 0066 E26C     		ldr	r2, [r4, #76]
 3508              	.LVL188:
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3509              		.loc 11 902 16 view .LVU793
 3510              	.LBE2886:
 3511              	.LBE2885:
 3512              	.LBB2887:
 3513              	.LBI2887:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 3514              		.loc 11 901 7 is_stmt 1 view .LVU794
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 3515              		.loc 11 901 7 is_stmt 0 view .LVU795
 3516              	.LBE2887:
 3517              	.LBB2888:
 3518              	.LBB2889:
 3519              	.LBB2890:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3520              		.loc 11 187 28 view .LVU796
 3521 0068 DDE90063 		ldrd	r6, r3, [sp]
 3522              	.LBE2890:
 3523              	.LBE2889:
 3524              	.LBE2888:
 3525              		.loc 11 6174 8 view .LVU797
 3526 006c 9A42     		cmp	r2, r3
 3527 006e 4AD0     		beq	.L197
 3528              	.L160:
 3529              	.LVL189:
 3530              		.loc 11 6174 8 view .LVU798
 3531              	.LBE2884:
 3532              	.LBE2883:
 3533              	.LBB2898:
 3534              	.LBI2898:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3535              		.loc 11 657 7 is_stmt 1 view .LVU799
 3536              	.LBB2899:
 3537              	.LBB2900:
 3538              	.LBI2900:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3539              		.loc 11 229 7 view .LVU800
 3540              	.LBB2901:
 3541              	.LBB2902:
 3542              	.LBI2902:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3543              		.loc 11 221 7 view .LVU801
 3544              	.LBB2903:
 3545              	.LBI2903:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3546              		.loc 11 200 7 view .LVU802
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3547              		.loc 11 200 7 is_stmt 0 view .LVU803
 3548              	.LBE2903:
 3549              	.LBE2902:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3550              		.loc 11 231 2 view .LVU804
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 277


 3551 0070 AE42     		cmp	r6, r5
 3552 0072 04D0     		beq	.L161
 3553              	.LVL190:
 3554              	.LBB2905:
 3555              	.LBI2905:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3556              		.loc 11 236 7 is_stmt 1 view .LVU805
 3557              	.LBB2906:
 3558              	.LBB2907:
 3559              	.LBI2907:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3560              		.loc 16 491 7 view .LVU806
 3561              	.LBB2908:
 3562              	.LBI2908:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3563              		.loc 15 120 7 view .LVU807
 3564              	.LBE2908:
 3565              	.LBE2907:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3566              		.loc 11 237 34 is_stmt 0 view .LVU808
 3567 0074 0299     		ldr	r1, [sp, #8]
 3568              	.LBB2914:
 3569              	.LBB2911:
 3570              	.LBB2909:
 3571              		.loc 15 133 19 view .LVU809
 3572 0076 3046     		mov	r0, r6
 3573 0078 0131     		adds	r1, r1, #1
 3574              	.LVL191:
 3575              		.loc 15 133 19 view .LVU810
 3576 007a FFF7FEFF 		bl	_ZdlPvj
 3577              	.LVL192:
 3578              		.loc 15 133 19 view .LVU811
 3579              	.LBE2909:
 3580              	.LBE2911:
 3581              	.LBE2914:
 3582              	.LBE2906:
 3583              	.LBE2905:
 3584              	.LBE2901:
 3585              	.LBE2900:
 3586              	.LBB2922:
 3587              	.LBI2922:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3588              		.loc 11 150 14 is_stmt 1 view .LVU812
 3589              	.LBB2923:
 3590              	.LBI2923:
 3591              		.loc 14 162 7 view .LVU813
 3592              	.LBB2924:
 3593              	.LBI2924:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3594              		.loc 15 89 7 view .LVU814
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3595              		.loc 15 89 7 is_stmt 0 view .LVU815
 3596              	.LBE2924:
 3597              	.LBE2923:
 3598              	.LBE2922:
 3599              	.LBE2899:
 3600              	.LBE2898:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 278


 3601              	.LBB2935:
 3602              	.LBI2935:
 3603              		.loc 14 162 7 is_stmt 1 view .LVU816
 3604              	.LBB2936:
 3605              	.LBI2936:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3606              		.loc 15 89 7 view .LVU817
 3607              	.L161:
 3608              	.L195:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3609              		.loc 15 89 7 is_stmt 0 view .LVU818
 3610              	.LBE2936:
 3611              	.LBE2935:
 3612              	.LBE2946:
 3613              	.LBE2961:
 3614              	.LBB2962:
 3615              	.LBB2745:
 3616              	.LBB2740:
 3617              	.LBI2740:
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
 3618              		.loc 11 2311 7 is_stmt 1 view .LVU819
 3619              	.LBB2741:
 3620              	.LBI2741:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3621              		.loc 11 186 7 view .LVU820
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3622              		.loc 11 186 7 is_stmt 0 view .LVU821
 3623              	.LBE2741:
 3624              	.LBE2740:
 3625              	.LBB2742:
 3626              	.LBI2736:
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
 3627              		.loc 11 2311 7 is_stmt 1 view .LVU822
 3628              	.LBB2739:
 3629              	.LBI2737:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3630              		.loc 11 186 7 view .LVU823
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3631              		.loc 11 186 7 is_stmt 0 view .LVU824
 3632              	.LBE2739:
 3633              	.LBE2742:
 3634              	.LBB2743:
 3635              	.LBI2743:
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 3636              		.loc 12 337 7 is_stmt 1 view .LVU825
 3637              	.LBB2744:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 3638              		.loc 12 339 2 view .LVU826
 3639 007e 2AB1     		cbz	r2, .L149
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 3640              		.loc 12 347 2 view .LVU827
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 3641              		.loc 12 347 25 is_stmt 0 view .LVU828
 3642 0080 3146     		mov	r1, r6
 3643 0082 A06C     		ldr	r0, [r4, #72]
 3644 0084 FFF7FEFF 		bl	memcmp
 3645              	.LVL193:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 279


 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 3646              		.loc 12 347 25 view .LVU829
 3647              	.LBE2744:
 3648              	.LBE2743:
 3649              		.loc 11 6174 8 view .LVU830
 3650 0088 0028     		cmp	r0, #0
 3651 008a CCD1     		bne	.L150
 3652              	.L149:
 3653              	.LVL194:
 3654              		.loc 11 6174 8 view .LVU831
 3655              	.LBE2745:
 3656              	.LBE2962:
 3657              	.LBB2963:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3658              		.loc 11 657 7 is_stmt 1 view .LVU832
 3659              	.LBB2776:
 3660              	.LBB2774:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3661              		.loc 11 229 7 view .LVU833
 3662              	.LBB2768:
 3663              	.LBB2766:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3664              		.loc 11 221 7 view .LVU834
 3665              	.LBB2752:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3666              		.loc 11 200 7 view .LVU835
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3667              		.loc 11 200 7 is_stmt 0 view .LVU836
 3668              	.LBE2752:
 3669              	.LBE2766:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3670              		.loc 11 231 2 view .LVU837
 3671 008c AE42     		cmp	r6, r5
 3672 008e 04D0     		beq	.L170
 3673              	.LVL195:
 3674              	.LBB2767:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3675              		.loc 11 236 7 is_stmt 1 view .LVU838
 3676              	.LBB2765:
 3677              	.LBB2763:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3678              		.loc 16 491 7 view .LVU839
 3679              	.LBB2760:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3680              		.loc 15 120 7 view .LVU840
 3681              	.LBE2760:
 3682              	.LBE2763:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3683              		.loc 11 237 34 is_stmt 0 view .LVU841
 3684 0090 0299     		ldr	r1, [sp, #8]
 3685              	.LBB2764:
 3686              	.LBB2761:
 3687              	.LBB2758:
 3688              		.loc 15 133 19 view .LVU842
 3689 0092 3046     		mov	r0, r6
 3690 0094 0131     		adds	r1, r1, #1
 3691              	.LVL196:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 280


 3692              		.loc 15 133 19 view .LVU843
 3693 0096 FFF7FEFF 		bl	_ZdlPvj
 3694              	.LVL197:
 3695              		.loc 15 133 19 view .LVU844
 3696              	.LBE2758:
 3697              	.LBE2761:
 3698              	.LBE2764:
 3699              	.LBE2765:
 3700              	.LBE2767:
 3701              	.LBE2768:
 3702              	.LBE2774:
 3703              	.LBB2775:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3704              		.loc 11 150 14 is_stmt 1 view .LVU845
 3705              	.LBB2773:
 3706              		.loc 14 162 7 view .LVU846
 3707              	.LBB2772:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3708              		.loc 15 89 7 view .LVU847
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3709              		.loc 15 89 7 is_stmt 0 view .LVU848
 3710              	.LBE2772:
 3711              	.LBE2773:
 3712              	.LBE2775:
 3713              	.LBE2776:
 3714              	.LBE2963:
 3715              	.LBB2964:
 3716              		.loc 14 162 7 is_stmt 1 view .LVU849
 3717              	.LBB2779:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3718              		.loc 15 89 7 view .LVU850
 3719              	.L170:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3720              		.loc 15 89 7 is_stmt 0 view .LVU851
 3721              	.LBE2779:
 3722              	.LBE2964:
 3723              	.LBB2965:
  67:../../dsp_fv/biquad.h ****                 aCoeffVector[1] * xStateVector[0] +
 3724              		.loc 7 67 13 is_stmt 1 view .LVU852
 3725              	.LBB2966:
 3726              	.LBI2966:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 3727              		.loc 8 1043 7 view .LVU853
 3728              	.LBB2967:
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 3729              		.loc 8 1046 25 is_stmt 0 view .LVU854
 3730 009a 6168     		ldr	r1, [r4, #4]
 3731              	.LVL198:
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 3732              		.loc 8 1046 25 view .LVU855
 3733              	.LBE2967:
 3734              	.LBE2966:
 3735              	.LBB2968:
 3736              	.LBI2968:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 3737              		.loc 8 1043 7 is_stmt 1 view .LVU856
 3738              	.LBB2969:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 281


1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 3739              		.loc 8 1046 25 is_stmt 0 view .LVU857
 3740 009c E269     		ldr	r2, [r4, #28]
 3741              	.LVL199:
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 3742              		.loc 8 1046 25 view .LVU858
 3743              	.LBE2969:
 3744              	.LBE2968:
  68:../../dsp_fv/biquad.h ****                 aCoeffVector[2] * xStateVector[1] -
 3745              		.loc 7 68 33 view .LVU859
 3746 009e D1ED017A 		vldr.32	s15, [r1, #4]
 3747 00a2 D2ED006A 		vldr.32	s13, [r2]
  67:../../dsp_fv/biquad.h ****                 aCoeffVector[1] * xStateVector[0] +
 3748              		.loc 7 67 63 view .LVU860
 3749 00a6 91ED007A 		vldr.32	s14, [r1]
  68:../../dsp_fv/biquad.h ****                 aCoeffVector[2] * xStateVector[1] -
 3750              		.loc 7 68 33 view .LVU861
 3751 00aa 66EEA77A 		vmul.f32	s15, s13, s15
  68:../../dsp_fv/biquad.h ****                 aCoeffVector[2] * xStateVector[1] -
 3752              		.loc 7 68 51 view .LVU862
 3753 00ae 91ED023A 		vldr.32	s6, [r1, #8]
 3754 00b2 D2ED013A 		vldr.32	s7, [r2, #4]
 3755              	.LBB2970:
 3756              	.LBB2971:
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 3757              		.loc 8 1046 25 view .LVU863
 3758 00b6 A36A     		ldr	r3, [r4, #40]
 3759              	.LBE2971:
 3760              	.LBE2970:
  67:../../dsp_fv/biquad.h ****                 aCoeffVector[1] * xStateVector[0] +
 3761              		.loc 7 67 63 view .LVU864
 3762 00b8 E7EE087A 		vfma.f32	s15, s14, s16
 3763              	.LBB2972:
 3764              	.LBB2973:
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 3765              		.loc 8 1046 25 view .LVU865
 3766 00bc 2069     		ldr	r0, [r4, #16]
 3767              	.LBE2973:
 3768              	.LBE2972:
  69:../../dsp_fv/biquad.h ****                 bCoeffVector[1] * yStateVector[0] -
 3769              		.loc 7 69 51 view .LVU866
 3770 00be D3ED004A 		vldr.32	s9, [r3]
 3771 00c2 90ED014A 		vldr.32	s8, [r0, #4]
  70:../../dsp_fv/biquad.h ****                 bCoeffVector[2] * yStateVector[1]) + 
 3772              		.loc 7 70 51 view .LVU867
 3773 00c6 90ED025A 		vldr.32	s10, [r0, #8]
 3774 00ca D3ED015A 		vldr.32	s11, [r3, #4]
  72:../../dsp_fv/biquad.h **** 
 3775              		.loc 7 72 26 view .LVU868
 3776 00ce 94ED107A 		vldr.32	s14, [r4, #64]
  68:../../dsp_fv/biquad.h ****                 aCoeffVector[2] * xStateVector[1] -
 3777              		.loc 7 68 51 view .LVU869
 3778 00d2 E3EE237A 		vfma.f32	s15, s6, s7
 3779              	.LVL200:
 3780              	.LBB2974:
 3781              	.LBI2972:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 282


 3782              		.loc 8 1043 7 is_stmt 1 view .LVU870
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 3783              		.loc 8 1043 7 is_stmt 0 view .LVU871
 3784              	.LBE2974:
 3785              	.LBB2975:
 3786              	.LBI2970:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 3787              		.loc 8 1043 7 is_stmt 1 view .LVU872
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 3788              		.loc 8 1043 7 is_stmt 0 view .LVU873
 3789              	.LBE2975:
  72:../../dsp_fv/biquad.h **** 
 3790              		.loc 7 72 28 view .LVU874
 3791 00d6 94ED116A 		vldr.32	s12, [r4, #68]
  72:../../dsp_fv/biquad.h **** 
 3792              		.loc 7 72 26 view .LVU875
 3793 00da 28EE077A 		vmul.f32	s14, s16, s14
  75:../../dsp_fv/biquad.h ****             xStateVector[0] = xn;
 3794              		.loc 7 75 29 view .LVU876
 3795 00de C2ED016A 		vstr.32	s13, [r2, #4]
  76:../../dsp_fv/biquad.h **** 
 3796              		.loc 7 76 29 view .LVU877
 3797 00e2 82ED008A 		vstr.32	s16, [r2]
  78:../../dsp_fv/biquad.h ****             yStateVector[0] = yn;
 3798              		.loc 7 78 29 view .LVU878
 3799 00e6 1A68     		ldr	r2, [r3]	@ float
 3800 00e8 5A60     		str	r2, [r3, #4]	@ float
  69:../../dsp_fv/biquad.h ****                 bCoeffVector[1] * yStateVector[0] -
 3801              		.loc 7 69 51 view .LVU879
 3802 00ea E4EE647A 		vfms.f32	s15, s8, s9
  70:../../dsp_fv/biquad.h ****                 bCoeffVector[2] * yStateVector[1]) + 
 3803              		.loc 7 70 51 view .LVU880
 3804 00ee E5EE657A 		vfms.f32	s15, s10, s11
  72:../../dsp_fv/biquad.h **** 
 3805              		.loc 7 72 28 view .LVU881
 3806 00f2 A6EE277A 		vfma.f32	s14, s12, s15
 3807 00f6 B0EE470A 		vmov.f32	s0, s14
 3808              	.LVL201:
  75:../../dsp_fv/biquad.h ****             xStateVector[0] = xn;
 3809              		.loc 7 75 13 is_stmt 1 view .LVU882
  76:../../dsp_fv/biquad.h **** 
 3810              		.loc 7 76 13 view .LVU883
  78:../../dsp_fv/biquad.h ****             yStateVector[0] = yn;
 3811              		.loc 7 78 13 view .LVU884
  79:../../dsp_fv/biquad.h **** 
 3812              		.loc 7 79 13 view .LVU885
  79:../../dsp_fv/biquad.h **** 
 3813              		.loc 7 79 29 is_stmt 0 view .LVU886
 3814 00fa 83ED007A 		vstr.32	s14, [r3]
  81:../../dsp_fv/biquad.h ****         }
 3815              		.loc 7 81 13 is_stmt 1 view .LVU887
 3816              	.LVL202:
 3817              	.L147:
  81:../../dsp_fv/biquad.h ****         }
 3818              		.loc 7 81 13 is_stmt 0 view .LVU888
 3819              	.LBE2965:
 3820              	.LBE2984:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 283


  98:../../dsp_fv/biquad.h ****         {
  99:../../dsp_fv/biquad.h ****             float yn = xn;
 100:../../dsp_fv/biquad.h ****             return yn;
 101:../../dsp_fv/biquad.h ****         }
 102:../../dsp_fv/biquad.h ****     }
 3821              		.loc 7 102 5 view .LVU889
 3822 00fe 06B0     		add	sp, sp, #24
 3823              		.cfi_remember_state
 3824              		.cfi_def_cfa_offset 24
 3825              		@ sp needed
 3826 0100 BDEC028B 		vldm	sp!, {d8}
 3827              		.cfi_restore 80
 3828              		.cfi_restore 81
 3829              		.cfi_def_cfa_offset 16
 3830              	.LVL203:
 3831              		.loc 7 102 5 view .LVU890
 3832 0104 70BD     		pop	{r4, r5, r6, pc}
 3833              	.LVL204:
 3834              	.L197:
 3835              		.cfi_restore_state
 3836              	.LBB2985:
 3837              	.LBB2976:
 3838              	.LBB2947:
 3839              	.LBB2939:
 3840              	.LBB2897:
 3841              	.LBB2892:
 3842              	.LBI2892:
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
 3843              		.loc 11 2311 7 is_stmt 1 view .LVU891
 3844              	.LBB2893:
 3845              	.LBI2893:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3846              		.loc 11 186 7 view .LVU892
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3847              		.loc 11 186 7 is_stmt 0 view .LVU893
 3848              	.LBE2893:
 3849              	.LBE2892:
 3850              	.LBB2894:
 3851              	.LBI2888:
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
 3852              		.loc 11 2311 7 is_stmt 1 view .LVU894
 3853              	.LBB2891:
 3854              	.LBI2889:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3855              		.loc 11 186 7 view .LVU895
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3856              		.loc 11 186 7 is_stmt 0 view .LVU896
 3857              	.LBE2891:
 3858              	.LBE2894:
 3859              	.LBB2895:
 3860              	.LBI2895:
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 3861              		.loc 12 337 7 is_stmt 1 view .LVU897
 3862              	.LBB2896:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 3863              		.loc 12 339 2 view .LVU898
 3864 0106 2AB1     		cbz	r2, .L159
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 284


 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 3865              		.loc 12 347 2 view .LVU899
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 3866              		.loc 12 347 25 is_stmt 0 view .LVU900
 3867 0108 3146     		mov	r1, r6
 3868 010a A06C     		ldr	r0, [r4, #72]
 3869 010c FFF7FEFF 		bl	memcmp
 3870              	.LVL205:
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 3871              		.loc 12 347 25 view .LVU901
 3872              	.LBE2896:
 3873              	.LBE2895:
 3874              		.loc 11 6174 8 view .LVU902
 3875 0110 0028     		cmp	r0, #0
 3876 0112 ADD1     		bne	.L160
 3877              	.L159:
 3878              	.LVL206:
 3879              		.loc 11 6174 8 view .LVU903
 3880              	.LBE2897:
 3881              	.LBE2939:
 3882              	.LBB2940:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3883              		.loc 11 657 7 is_stmt 1 view .LVU904
 3884              	.LBB2933:
 3885              	.LBB2929:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3886              		.loc 11 229 7 view .LVU905
 3887              	.LBB2920:
 3888              	.LBB2918:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3889              		.loc 11 221 7 view .LVU906
 3890              	.LBB2904:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3891              		.loc 11 200 7 view .LVU907
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3892              		.loc 11 200 7 is_stmt 0 view .LVU908
 3893              	.LBE2904:
 3894              	.LBE2918:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3895              		.loc 11 231 2 view .LVU909
 3896 0114 AE42     		cmp	r6, r5
 3897 0116 3FD1     		bne	.L198
 3898              	.LVL207:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3899              		.loc 11 231 2 view .LVU910
 3900              	.LBE2920:
 3901              	.LBE2929:
 3902              	.LBB2930:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3903              		.loc 11 150 14 is_stmt 1 view .LVU911
 3904              	.LBB2927:
 3905              		.loc 14 162 7 view .LVU912
 3906              	.LBB2925:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3907              		.loc 15 89 7 view .LVU913
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3908              		.loc 15 89 7 is_stmt 0 view .LVU914
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 285


 3909              	.LBE2925:
 3910              	.LBE2927:
 3911              	.LBE2930:
 3912              	.LBE2933:
 3913              	.LBE2940:
 3914              	.LBB2941:
 3915              		.loc 14 162 7 is_stmt 1 view .LVU915
 3916              	.LBB2937:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3917              		.loc 15 89 7 view .LVU916
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3918              		.loc 15 89 7 is_stmt 0 view .LVU917
 3919              	.LBE2937:
 3920              	.LBE2941:
 3921              	.LBB2942:
 100:../../dsp_fv/biquad.h ****         }
 3922              		.loc 7 100 20 view .LVU918
 3923 0118 B0EE480A 		vmov.f32	s0, s16
 3924 011c EFE7     		b	.L147
 3925              	.LVL208:
 3926              	.L196:
 100:../../dsp_fv/biquad.h ****         }
 3927              		.loc 7 100 20 view .LVU919
 3928              	.LBE2942:
 3929              	.LBE2947:
 3930              	.LBB2948:
 3931              	.LBB2821:
 3932              	.LBB2816:
 3933              	.LBI2816:
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
 3934              		.loc 11 2311 7 is_stmt 1 view .LVU920
 3935              	.LBB2817:
 3936              	.LBI2817:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3937              		.loc 11 186 7 view .LVU921
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3938              		.loc 11 186 7 is_stmt 0 view .LVU922
 3939              	.LBE2817:
 3940              	.LBE2816:
 3941              	.LBB2818:
 3942              	.LBI2812:
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
 3943              		.loc 11 2311 7 is_stmt 1 view .LVU923
 3944              	.LBB2815:
 3945              	.LBI2813:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3946              		.loc 11 186 7 view .LVU924
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3947              		.loc 11 186 7 is_stmt 0 view .LVU925
 3948              	.LBE2815:
 3949              	.LBE2818:
 3950              	.LBB2819:
 3951              	.LBI2819:
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 3952              		.loc 12 337 7 is_stmt 1 view .LVU926
 3953              	.LBB2820:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 286


 3954              		.loc 12 339 2 view .LVU927
 3955 011e 2AB1     		cbz	r2, .L154
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 3956              		.loc 12 347 2 view .LVU928
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 3957              		.loc 12 347 25 is_stmt 0 view .LVU929
 3958 0120 3146     		mov	r1, r6
 3959 0122 A06C     		ldr	r0, [r4, #72]
 3960 0124 FFF7FEFF 		bl	memcmp
 3961              	.LVL209:
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 3962              		.loc 12 347 25 view .LVU930
 3963              	.LBE2820:
 3964              	.LBE2819:
 3965              		.loc 11 6174 8 view .LVU931
 3966 0128 0028     		cmp	r0, #0
 3967 012a 8FD1     		bne	.L155
 3968              	.L154:
 3969              	.LVL210:
 3970              		.loc 11 6174 8 view .LVU932
 3971              	.LBE2821:
 3972              	.LBE2948:
 3973              	.LBB2949:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3974              		.loc 11 657 7 is_stmt 1 view .LVU933
 3975              	.LBB2852:
 3976              	.LBB2850:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3977              		.loc 11 229 7 view .LVU934
 3978              	.LBB2844:
 3979              	.LBB2842:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3980              		.loc 11 221 7 view .LVU935
 3981              	.LBB2828:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3982              		.loc 11 200 7 view .LVU936
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3983              		.loc 11 200 7 is_stmt 0 view .LVU937
 3984              	.LBE2828:
 3985              	.LBE2842:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3986              		.loc 11 231 2 view .LVU938
 3987 012c AE42     		cmp	r6, r5
 3988 012e 04D0     		beq	.L156
 3989              	.LVL211:
 3990              	.LBB2843:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3991              		.loc 11 236 7 is_stmt 1 view .LVU939
 3992              	.LBB2841:
 3993              	.LBB2839:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3994              		.loc 16 491 7 view .LVU940
 3995              	.LBB2836:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3996              		.loc 15 120 7 view .LVU941
 3997              	.LBE2836:
 3998              	.LBE2839:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 287


 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3999              		.loc 11 237 34 is_stmt 0 view .LVU942
 4000 0130 0299     		ldr	r1, [sp, #8]
 4001              	.LBB2840:
 4002              	.LBB2837:
 4003              	.LBB2834:
 4004              		.loc 15 133 19 view .LVU943
 4005 0132 3046     		mov	r0, r6
 4006 0134 0131     		adds	r1, r1, #1
 4007              	.LVL212:
 4008              		.loc 15 133 19 view .LVU944
 4009 0136 FFF7FEFF 		bl	_ZdlPvj
 4010              	.LVL213:
 4011              		.loc 15 133 19 view .LVU945
 4012              	.LBE2834:
 4013              	.LBE2837:
 4014              	.LBE2840:
 4015              	.LBE2841:
 4016              	.LBE2843:
 4017              	.LBE2844:
 4018              	.LBE2850:
 4019              	.LBB2851:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 4020              		.loc 11 150 14 is_stmt 1 view .LVU946
 4021              	.LBB2849:
 4022              		.loc 14 162 7 view .LVU947
 4023              	.LBB2848:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4024              		.loc 15 89 7 view .LVU948
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4025              		.loc 15 89 7 is_stmt 0 view .LVU949
 4026              	.LBE2848:
 4027              	.LBE2849:
 4028              	.LBE2851:
 4029              	.LBE2852:
 4030              	.LBE2949:
 4031              	.LBB2950:
 4032              		.loc 14 162 7 is_stmt 1 view .LVU950
 4033              	.LBB2855:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4034              		.loc 15 89 7 view .LVU951
 4035              	.L156:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4036              		.loc 15 89 7 is_stmt 0 view .LVU952
 4037              	.LBE2855:
 4038              	.LBE2950:
 4039              	.LBB2951:
  85:../../dsp_fv/biquad.h ****                                 bCoeffVector[1] * wStateVector[1]);
 4040              		.loc 7 85 13 is_stmt 1 view .LVU953
 4041              	.LBB2952:
 4042              	.LBI2952:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4043              		.loc 8 1043 7 view .LVU954
 4044              	.LBB2953:
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 4045              		.loc 8 1046 25 is_stmt 0 view .LVU955
 4046 013a 6268     		ldr	r2, [r4, #4]
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 288


 4047              	.LVL214:
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 4048              		.loc 8 1046 25 view .LVU956
 4049              	.LBE2953:
 4050              	.LBE2952:
  85:../../dsp_fv/biquad.h ****                                 bCoeffVector[1] * wStateVector[1]);
 4051              		.loc 7 85 36 view .LVU957
 4052 013c F0EE486A 		vmov.f32	s13, s16
 4053              	.LBB2954:
 4054              	.LBB2955:
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 4055              		.loc 8 1046 25 view .LVU958
 4056 0140 636B     		ldr	r3, [r4, #52]
 4057              	.LBE2955:
 4058              	.LBE2954:
  85:../../dsp_fv/biquad.h ****                                 bCoeffVector[1] * wStateVector[1]);
 4059              		.loc 7 85 54 view .LVU959
 4060 0142 D2ED005A 		vldr.32	s11, [r2]
 4061              	.LVL215:
 4062              	.LBB2956:
 4063              	.LBI2954:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4064              		.loc 8 1043 7 is_stmt 1 view .LVU960
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4065              		.loc 8 1043 7 is_stmt 0 view .LVU961
 4066              	.LBE2956:
  85:../../dsp_fv/biquad.h ****                                 bCoeffVector[1] * wStateVector[1]);
 4067              		.loc 7 85 54 view .LVU962
 4068 0146 D3ED007A 		vldr.32	s15, [r3]
  86:../../dsp_fv/biquad.h ****             auto ynUnprocessed = (float) ( aCoeffVector[0] * wn     + 
 4069              		.loc 7 86 49 view .LVU963
 4070 014a 2169     		ldr	r1, [r4, #16]
  85:../../dsp_fv/biquad.h ****                                 bCoeffVector[1] * wStateVector[1]);
 4071              		.loc 7 85 36 view .LVU964
 4072 014c E5EEE76A 		vfms.f32	s13, s11, s15
 4073              	.LVL216:
 4074              	.LBB2957:
 4075              	.LBI2957:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4076              		.loc 8 1043 7 is_stmt 1 view .LVU965
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4077              		.loc 8 1043 7 is_stmt 0 view .LVU966
 4078              	.LBE2957:
  86:../../dsp_fv/biquad.h ****             auto ynUnprocessed = (float) ( aCoeffVector[0] * wn     + 
 4079              		.loc 7 86 49 view .LVU967
 4080 0150 93ED016A 		vldr.32	s12, [r3, #4]
  86:../../dsp_fv/biquad.h ****             auto ynUnprocessed = (float) ( aCoeffVector[0] * wn     + 
 4081              		.loc 7 86 66 view .LVU968
 4082 0154 D1ED014A 		vldr.32	s9, [r1, #4]
  88:../../dsp_fv/biquad.h ****                                 aCoeffVector[2] * wStateVector[1]);
 4083              		.loc 7 88 49 view .LVU969
 4084 0158 92ED017A 		vldr.32	s14, [r2, #4]
  89:../../dsp_fv/biquad.h **** 
 4085              		.loc 7 89 66 view .LVU970
 4086 015c 92ED025A 		vldr.32	s10, [r2, #8]
  92:../../dsp_fv/biquad.h ****             wStateVector[0] = wn;
 4087              		.loc 7 92 29 view .LVU971
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 289


 4088 0160 C3ED017A 		vstr.32	s15, [r3, #4]
  88:../../dsp_fv/biquad.h ****                                 aCoeffVector[2] * wStateVector[1]);
 4089              		.loc 7 88 49 view .LVU972
 4090 0164 67EE877A 		vmul.f32	s15, s15, s14
  86:../../dsp_fv/biquad.h ****             auto ynUnprocessed = (float) ( aCoeffVector[0] * wn     + 
 4091              		.loc 7 86 66 view .LVU973
 4092 0168 E4EEC66A 		vfms.f32	s13, s9, s12
 4093              	.LVL217:
  87:../../dsp_fv/biquad.h ****                                 aCoeffVector[1] * wStateVector[0]   + 
 4094              		.loc 7 87 13 is_stmt 1 view .LVU974
  87:../../dsp_fv/biquad.h ****                                 aCoeffVector[1] * wStateVector[0]   + 
 4095              		.loc 7 87 69 is_stmt 0 view .LVU975
 4096 016c E5EEA67A 		vfma.f32	s15, s11, s13
  93:../../dsp_fv/biquad.h ****             return (float) (processedCoeff * ynUnprocessed +dryCoeff * xn); //yn
 4097              		.loc 7 93 29 view .LVU976
 4098 0170 C3ED006A 		vstr.32	s13, [r3]
  94:../../dsp_fv/biquad.h **** 
 4099              		.loc 7 94 74 view .LVU977
 4100 0174 D4ED116A 		vldr.32	s13, [r4, #68]
 4101              	.LVL218:
  87:../../dsp_fv/biquad.h ****                                 aCoeffVector[1] * wStateVector[0]   + 
 4102              		.loc 7 87 69 view .LVU978
 4103 0178 B0EE677A 		vmov.f32	s14, s15
  94:../../dsp_fv/biquad.h **** 
 4104              		.loc 7 94 70 view .LVU979
 4105 017c D4ED107A 		vldr.32	s15, [r4, #64]
 4106 0180 28EE270A 		vmul.f32	s0, s16, s15
  89:../../dsp_fv/biquad.h **** 
 4107              		.loc 7 89 66 view .LVU980
 4108 0184 F0EE477A 		vmov.f32	s15, s14
 4109 0188 E6EE057A 		vfma.f32	s15, s12, s10
 4110              	.LVL219:
  92:../../dsp_fv/biquad.h ****             wStateVector[0] = wn;
 4111              		.loc 7 92 13 is_stmt 1 view .LVU981
  93:../../dsp_fv/biquad.h ****             return (float) (processedCoeff * ynUnprocessed +dryCoeff * xn); //yn
 4112              		.loc 7 93 13 view .LVU982
  94:../../dsp_fv/biquad.h **** 
 4113              		.loc 7 94 13 view .LVU983
  94:../../dsp_fv/biquad.h **** 
 4114              		.loc 7 94 74 is_stmt 0 view .LVU984
 4115 018c A6EEA70A 		vfma.f32	s0, s13, s15
 4116              	.LBE2951:
 4117              	.LBE2976:
 4118              	.LBE2985:
 4119              		.loc 7 102 5 view .LVU985
 4120 0190 06B0     		add	sp, sp, #24
 4121              		.cfi_remember_state
 4122              		.cfi_def_cfa_offset 24
 4123              		@ sp needed
 4124 0192 BDEC028B 		vldm	sp!, {d8}
 4125              		.cfi_restore 80
 4126              		.cfi_restore 81
 4127              		.cfi_def_cfa_offset 16
 4128              	.LVL220:
 4129              		.loc 7 102 5 view .LVU986
 4130 0196 70BD     		pop	{r4, r5, r6, pc}
 4131              	.LVL221:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 290


 4132              	.L198:
 4133              		.cfi_restore_state
 4134              	.LBB2986:
 4135              	.LBB2977:
 4136              	.LBB2958:
 4137              	.LBB2943:
 4138              	.LBB2934:
 4139              	.LBB2931:
 4140              	.LBB2921:
 4141              	.LBB2919:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4142              		.loc 11 236 7 is_stmt 1 view .LVU987
 4143              	.LBB2917:
 4144              	.LBB2915:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 4145              		.loc 16 491 7 view .LVU988
 4146              	.LBB2912:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 4147              		.loc 15 120 7 view .LVU989
 4148              	.LBE2912:
 4149              	.LBE2915:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 4150              		.loc 11 237 34 is_stmt 0 view .LVU990
 4151 0198 0299     		ldr	r1, [sp, #8]
 4152              	.LBB2916:
 4153              	.LBB2913:
 4154              	.LBB2910:
 4155              		.loc 15 133 19 view .LVU991
 4156 019a 3046     		mov	r0, r6
 4157 019c 0131     		adds	r1, r1, #1
 4158              	.LVL222:
 4159              		.loc 15 133 19 view .LVU992
 4160 019e FFF7FEFF 		bl	_ZdlPvj
 4161              	.LVL223:
 4162              		.loc 15 133 19 view .LVU993
 4163              	.LBE2910:
 4164              	.LBE2913:
 4165              	.LBE2916:
 4166              	.LBE2917:
 4167              	.LBE2919:
 4168              	.LBE2921:
 4169              	.LBE2931:
 4170              	.LBB2932:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 4171              		.loc 11 150 14 is_stmt 1 view .LVU994
 4172              	.LBB2928:
 4173              		.loc 14 162 7 view .LVU995
 4174              	.LBB2926:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4175              		.loc 15 89 7 view .LVU996
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4176              		.loc 15 89 7 is_stmt 0 view .LVU997
 4177              	.LBE2926:
 4178              	.LBE2928:
 4179              	.LBE2932:
 4180              	.LBE2934:
 4181              	.LBE2943:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 291


 4182              	.LBB2944:
 4183              		.loc 14 162 7 is_stmt 1 view .LVU998
 4184              	.LBB2938:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4185              		.loc 15 89 7 view .LVU999
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4186              		.loc 15 89 7 is_stmt 0 view .LVU1000
 4187              	.LBE2938:
 4188              	.LBE2944:
 4189              	.LBB2945:
 100:../../dsp_fv/biquad.h ****         }
 4190              		.loc 7 100 20 view .LVU1001
 4191 01a2 B0EE480A 		vmov.f32	s0, s16
 4192 01a6 AAE7     		b	.L147
 4193              	.L200:
 4194              		.align	2
 4195              	.L199:
 4196 01a8 06000000 		.word	.LC2+6
 4197 01ac 09000000 		.word	.LC3+9
 4198 01b0 04000000 		.word	.LC4+4
 4199              	.LBE2945:
 4200              	.LBE2958:
 4201              	.LBE2977:
 4202              	.LBE2986:
 4203              		.cfi_endproc
 4204              	.LFE4750:
 4206              		.section	.text._ZN14ClassicFilters18processAudioSampleEf,"axG",%progbits,_ZN14ClassicFilters18proc
 4207              		.align	1
 4208              		.p2align 2,,3
 4209              		.weak	_ZN14ClassicFilters18processAudioSampleEf
 4210              		.syntax unified
 4211              		.thumb
 4212              		.thumb_func
 4213              		.fpu fpv5-d16
 4215              	_ZN14ClassicFilters18processAudioSampleEf:
 4216              	.LVL224:
 4217              	.LFB4759:
  35:../../dsp_fv/classicFilters.h ****     /// <summary>
  36:../../dsp_fv/classicFilters.h ****     /// sets the coefficients of the second order Biquad biquadSruct member, 
  37:../../dsp_fv/classicFilters.h ****     /// using the desired corner Frequency and Quality factor.
  38:../../dsp_fv/classicFilters.h ****     /// a and b coefficients of the biquadStruct member depend upon the sample Rate as well.
  39:../../dsp_fv/classicFilters.h ****     /// </summary>
  40:../../dsp_fv/classicFilters.h ****     /// <param name="cornerFreq"></param>
  41:../../dsp_fv/classicFilters.h ****     /// <param name="qualityFactor"></param>
  42:../../dsp_fv/classicFilters.h ****     /// <param name="sampleFreq"></param>
  43:../../dsp_fv/classicFilters.h ****     void setCoefficients(float cornerFreq, float qualityFactor, float sampleFreq, float gain = 1.0f
  44:../../dsp_fv/classicFilters.h ****     {
  45:../../dsp_fv/classicFilters.h **** 
  46:../../dsp_fv/classicFilters.h ****         vector<float> aCoeff;
  47:../../dsp_fv/classicFilters.h ****         vector<float> bCoeff;
  48:../../dsp_fv/classicFilters.h **** 
  49:../../dsp_fv/classicFilters.h ****         if (filterType == string("LPF1"))
  50:../../dsp_fv/classicFilters.h ****         {
  51:../../dsp_fv/classicFilters.h ****             auto theta_c = 2* PI * cornerFreq / sampleFreq;
  52:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) / (1 + std::sin(theta_c));
  53:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((1 - gamma) / 2);
  54:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((1 - gamma) / 2);
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 292


  55:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(0.0f);
  56:../../dsp_fv/classicFilters.h **** 
  57:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
  58:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(-gamma);
  59:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
  60:../../dsp_fv/classicFilters.h **** 
  61:../../dsp_fv/classicFilters.h ****         }
  62:../../dsp_fv/classicFilters.h ****         else if (filterType == string("HPF1"))
  63:../../dsp_fv/classicFilters.h ****         {
  64:../../dsp_fv/classicFilters.h ****             auto theta_c = 2 * PI * cornerFreq / sampleFreq;
  65:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) / (1 + std::sin(theta_c));
  66:../../dsp_fv/classicFilters.h **** 
  67:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((1 + gamma) / 2);
  68:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(-(1 + gamma) / 2);
  69:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(0.0f);
  70:../../dsp_fv/classicFilters.h **** 
  71:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
  72:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(-gamma);
  73:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
  74:../../dsp_fv/classicFilters.h ****         }
  75:../../dsp_fv/classicFilters.h ****         else if (filterType == string("LPF2"))
  76:../../dsp_fv/classicFilters.h ****         {
  77:../../dsp_fv/classicFilters.h ****             auto theta_c = 2 * PI * cornerFreq / sampleFreq;
  78:../../dsp_fv/classicFilters.h ****             auto d = 1 / qualityFactor;
  79:../../dsp_fv/classicFilters.h ****             auto beta = 0.5 * (1 - d / 2 * std::sin(theta_c)) / (1 + d / 2 * std::sin(theta_c));
  80:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
  81:../../dsp_fv/classicFilters.h **** 
  82:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((0.5 + beta - gamma) / 2);
  83:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((0.5 + beta - gamma));
  84:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((0.5 + beta - gamma) / 2);
  85:../../dsp_fv/classicFilters.h **** 
  86:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(1);
  87:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(-2 * gamma);
  88:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(2 * beta);
  89:../../dsp_fv/classicFilters.h **** 
  90:../../dsp_fv/classicFilters.h ****         }
  91:../../dsp_fv/classicFilters.h ****         else if (filterType == "HPF2")
  92:../../dsp_fv/classicFilters.h ****         {
  93:../../dsp_fv/classicFilters.h ****             auto theta_c = 2* PI * cornerFreq / sampleFreq;
  94:../../dsp_fv/classicFilters.h ****             auto d = 1 / qualityFactor;
  95:../../dsp_fv/classicFilters.h ****             auto beta = 0.5 * (1 - d / 2 * std::sin(theta_c)) / (1 + d / 2 * std::sin(theta_c));
  96:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
  97:../../dsp_fv/classicFilters.h **** 
  98:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((0.5 + beta + gamma) / 2.0);
  99:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(-(0.5 + beta + gamma));
 100:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((0.5 + beta + gamma) / 2.0);
 101:../../dsp_fv/classicFilters.h **** 
 102:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(1);
 103:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(-2 * gamma);
 104:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(2 * beta);
 105:../../dsp_fv/classicFilters.h ****         }
 106:../../dsp_fv/classicFilters.h ****         else if (filterType == "None")
 107:../../dsp_fv/classicFilters.h ****         {
 108:../../dsp_fv/classicFilters.h ****             biquadStruct.setType("None");
 109:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(1);
 110:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(0);
 111:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(0);
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 293


 112:../../dsp_fv/classicFilters.h **** 
 113:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(1);
 114:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
 115:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
 116:../../dsp_fv/classicFilters.h **** 
 117:../../dsp_fv/classicFilters.h ****         }
 118:../../dsp_fv/classicFilters.h ****         biquadStruct.updateParameters(aCoeff, bCoeff);
 119:../../dsp_fv/classicFilters.h ****         setFilterGain(gain);
 120:../../dsp_fv/classicFilters.h ****     }
 121:../../dsp_fv/classicFilters.h **** 
 122:../../dsp_fv/classicFilters.h ****     /// <summary>
 123:../../dsp_fv/classicFilters.h ****     /// sets te Dry and Wet parameters of the underlying biquadStruct member,
 124:../../dsp_fv/classicFilters.h ****     /// Wet (processed) = (float) Gain, Dry  = 1 - (float) Gain
 125:../../dsp_fv/classicFilters.h ****     /// </summary>
 126:../../dsp_fv/classicFilters.h ****     /// <param name="gain"></param>
 127:../../dsp_fv/classicFilters.h ****     void setFilterGain(float gain)
 128:../../dsp_fv/classicFilters.h ****     {
 129:../../dsp_fv/classicFilters.h ****         biquadStruct.setDryWetGain(1.0f - gain, gain);
 130:../../dsp_fv/classicFilters.h ****     }
 131:../../dsp_fv/classicFilters.h ****     /// <summary>
 132:../../dsp_fv/classicFilters.h ****     /// sets the filter type. Supported are :
 133:../../dsp_fv/classicFilters.h ****     /// LPF1, LPF2, HPF1, HPF 2. more to come...
 134:../../dsp_fv/classicFilters.h ****     /// </summary>
 135:../../dsp_fv/classicFilters.h ****     /// <param name="type"></param>
 136:../../dsp_fv/classicFilters.h ****     void setFilterType(string type)
 137:../../dsp_fv/classicFilters.h ****     {
 138:../../dsp_fv/classicFilters.h ****         filterType = type;
 139:../../dsp_fv/classicFilters.h ****     }
 140:../../dsp_fv/classicFilters.h **** 
 141:../../dsp_fv/classicFilters.h ****     /// <summary>
 142:../../dsp_fv/classicFilters.h ****     /// function used to process the incoming sample x(n),
 143:../../dsp_fv/classicFilters.h ****     ///  override the biquadStruct::processAudioSample() method
 144:../../dsp_fv/classicFilters.h ****     /// </summary>
 145:../../dsp_fv/classicFilters.h ****     /// <param name="xn"></param>
 146:../../dsp_fv/classicFilters.h ****     /// <returns></returns>
 147:../../dsp_fv/classicFilters.h ****     float processAudioSample(float xn) override
 4218              		.loc 19 147 11 is_stmt 1 view -0
 4219              		.cfi_startproc
 4220              		@ args = 0, pretend = 0, frame = 0
 4221              		@ frame_needed = 0, uses_anonymous_args = 0
 148:../../dsp_fv/classicFilters.h ****     {
 149:../../dsp_fv/classicFilters.h ****         auto yn = (float)biquadStruct.processAudioSample(xn);
 4222              		.loc 19 149 9 view .LVU1003
 4223              		.loc 19 149 57 is_stmt 0 view .LVU1004
 4224 0000 7830     		adds	r0, r0, #120
 4225              	.LVL225:
 147:../../dsp_fv/classicFilters.h ****     {
 4226              		.loc 19 147 11 view .LVU1005
 4227 0002 08B5     		push	{r3, lr}
 4228              		.cfi_def_cfa_offset 8
 4229              		.cfi_offset 3, -8
 4230              		.cfi_offset 14, -4
 4231              		.loc 19 149 57 view .LVU1006
 4232 0004 FFF7FEFF 		bl	_ZN6Biquad18processAudioSampleEf
 4233              	.LVL226:
 150:../../dsp_fv/classicFilters.h ****         return yn;
 4234              		.loc 19 150 9 is_stmt 1 view .LVU1007
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 294


 151:../../dsp_fv/classicFilters.h ****     }
 4235              		.loc 19 151 5 is_stmt 0 view .LVU1008
 4236 0008 08BD     		pop	{r3, pc}
 4237              		.cfi_endproc
 4238              	.LFE4759:
 4240 000a 00BF     		.section	.text._ZN6BiquadC2Ev,"axG",%progbits,_ZN6BiquadC5Ev,comdat
 4241              		.align	1
 4242              		.p2align 2,,3
 4243              		.weak	_ZN6BiquadC2Ev
 4244              		.syntax unified
 4245              		.thumb
 4246              		.thumb_func
 4247              		.fpu fpv5-d16
 4249              	_ZN6BiquadC2Ev:
 4250              	.LVL227:
 4251              	.LFB4736:
  16:../../dsp_fv/biquad.h ****         aCoeffVector = { 0,0,0 };
 4252              		.loc 7 16 5 is_stmt 1 view -0
 4253              		.cfi_startproc
 4254              		@ args = 0, pretend = 0, frame = 40
 4255              		@ frame_needed = 0, uses_anonymous_args = 0
  16:../../dsp_fv/biquad.h ****         aCoeffVector = { 0,0,0 };
 4256              		.loc 7 16 5 is_stmt 0 view .LVU1010
 4257 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4258              		.cfi_def_cfa_offset 20
 4259              		.cfi_offset 4, -20
 4260              		.cfi_offset 5, -16
 4261              		.cfi_offset 6, -12
 4262              		.cfi_offset 7, -8
 4263              		.cfi_offset 14, -4
 4264              	.LBB3186:
  16:../../dsp_fv/biquad.h ****         aCoeffVector = { 0,0,0 };
 4265              		.loc 7 16 14 view .LVU1011
 4266 0002 354B     		ldr	r3, .L205
 4267              	.LBE3186:
  16:../../dsp_fv/biquad.h ****         aCoeffVector = { 0,0,0 };
 4268              		.loc 7 16 5 view .LVU1012
 4269 0004 0446     		mov	r4, r0
 4270              	.LBB3538:
 4271              	.LBB3187:
 4272              	.LBB3188:
 4273              	.LBB3189:
 4274              	.LBB3190:
 4275              	.LBB3191:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 4276              		.loc 8 98 47 view .LVU1013
 4277 0006 0025     		movs	r5, #0
 4278              	.LBE3191:
 4279              	.LBE3190:
 4280              	.LBE3189:
 4281              	.LBE3188:
 4282              	.LBE3187:
 4283              	.LBE3538:
  16:../../dsp_fv/biquad.h ****         aCoeffVector = { 0,0,0 };
 4284              		.loc 7 16 5 view .LVU1014
 4285 0008 8DB0     		sub	sp, sp, #52
 4286              		.cfi_def_cfa_offset 72
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 295


 4287              	.LBB3539:
  16:../../dsp_fv/biquad.h ****         aCoeffVector = { 0,0,0 };
 4288              		.loc 7 16 14 view .LVU1015
 4289 000a 0026     		movs	r6, #0
 4290              	.LBB3196:
 4291              	.LBB3197:
 4292              	.LBB3198:
 4293              	.LBB3199:
 4294              	.LBB3200:
 4295              	.LBB3201:
 4296              	.LBB3202:
 4297              	.LBB3203:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4298              		.loc 15 115 41 view .LVU1016
 4299 000c 0820     		movs	r0, #8
 4300              	.LVL228:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4301              		.loc 15 115 41 view .LVU1017
 4302              	.LBE3203:
 4303              	.LBE3202:
 4304              	.LBE3201:
 4305              	.LBE3200:
 4306              	.LBE3199:
 4307              	.LBE3198:
 4308              	.LBE3197:
 4309              	.LBE3196:
 4310              	.LBB3277:
 4311              	.LBB3278:
 4312              	.LBB3279:
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 4313              		.loc 11 193 51 view .LVU1018
 4314 000e 04F14807 		add	r7, r4, #72
 4315              	.LBE3279:
 4316              	.LBE3278:
 4317              	.LBE3277:
  16:../../dsp_fv/biquad.h ****         aCoeffVector = { 0,0,0 };
 4318              		.loc 7 16 14 view .LVU1019
 4319 0012 0396     		str	r6, [sp, #12]	@ float
 4320 0014 0496     		str	r6, [sp, #16]	@ float
 4321              	.LBB3303:
 4322              	.LBB3195:
 4323              	.LBB3194:
 4324              	.LBB3193:
 4325              	.LBB3192:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 4326              		.loc 8 98 47 view .LVU1020
 4327 0016 C4E90035 		strd	r3, r5, [r4]
 4328 001a C4E90255 		strd	r5, r5, [r4, #8]
 4329              	.LVL229:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 4330              		.loc 8 98 47 view .LVU1021
 4331              	.LBE3192:
 4332              	.LBE3193:
 4333              	.LBE3194:
 4334              	.LBE3195:
 4335              	.LBE3303:
 4336              	.LBB3304:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 296


 4337              	.LBI3304:
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 4338              		.loc 8 487 7 is_stmt 1 view .LVU1022
 4339              	.LBB3305:
 4340              	.LBI3305:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 4341              		.loc 8 288 7 view .LVU1023
 4342              	.LBB3306:
 4343              	.LBI3306:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 4344              		.loc 8 131 2 view .LVU1024
 4345              	.LBB3307:
 4346              	.LBI3307:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 4347              		.loc 14 144 7 view .LVU1025
 4348              	.LBB3308:
 4349              	.LBI3308:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4350              		.loc 15 79 7 view .LVU1026
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4351              		.loc 15 79 7 is_stmt 0 view .LVU1027
 4352              	.LBE3308:
 4353              	.LBE3307:
 4354              	.LBB3309:
 4355              	.LBI3309:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 4356              		.loc 8 97 2 is_stmt 1 view .LVU1028
 4357              	.LBB3310:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 4358              		.loc 8 98 47 is_stmt 0 view .LVU1029
 4359 001e C4E90455 		strd	r5, r5, [r4, #16]
 4360              	.LBE3310:
 4361              	.LBE3309:
 4362              	.LBE3306:
 4363              	.LBE3305:
 4364              	.LBE3304:
 4365              	.LBB3311:
 4366              	.LBB3267:
 4367              	.LBB3268:
 4368              	.LBB3269:
 4369              	.LBB3270:
 4370 0022 C4E90655 		strd	r5, r5, [r4, #24]
 4371 0026 C4E90855 		strd	r5, r5, [r4, #32]
 4372              	.LVL230:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 4373              		.loc 8 98 47 view .LVU1030
 4374              	.LBE3270:
 4375              	.LBE3269:
 4376              	.LBE3268:
 4377              	.LBE3267:
 4378              	.LBB3271:
 4379              	.LBI3271:
 4380              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\initializer_list
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // std::initializer_list support -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Copyright (C) 2008-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 297


   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // This file is part of GCC.
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is free software; you can redistribute it and/or modify
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // it under the terms of the GNU General Public License as published by
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // the Free Software Foundation; either version 3, or (at your option)
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // any later version.
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GCC is distributed in the hope that it will be useful,
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // GNU General Public License for more details.
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** //
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // Under Section 7 of GPL version 3, you are granted additional
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // permissions described in the GCC Runtime Library Exception, version
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // 3.1, as published by the Free Software Foundation.
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // You should have received a copy of the GNU General Public License and
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // a copy of the GCC Runtime Library Exception along with this program;
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** // <http://www.gnu.org/licenses/>.
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** /** @file initializer_list
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****  *  This is a Standard C++ Library header.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #ifndef _INITIALIZER_LIST
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #define _INITIALIZER_LIST
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #if __cplusplus < 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** # include <bits/c++0x_warning.h>
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #else // C++0x
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #pragma GCC visibility push(default)
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** #include <bits/c++config.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** namespace std
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** {
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****   /// initializer_list
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****   template<class _E>
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     class initializer_list
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     {
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef _E 		value_type;
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	reference;
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E& 	const_reference;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef size_t 		size_type;
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	iterator;
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       typedef const _E* 	const_iterator;
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     private:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       iterator			_M_array;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size_type			_M_len;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // The compiler can call a private constructor.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 298


  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list(const_iterator __a, size_type __l)
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(__a), _M_len(__l) { }
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****     public:
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr initializer_list() noexcept
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       : _M_array(0), _M_len(0) { }
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // Number of elements.
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr size_type
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       size() const noexcept { return _M_len; }
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // First element.
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       begin() const noexcept { return _M_array; }
 4381              		.loc 20 75 7 is_stmt 1 view .LVU1031
 4382              		.loc 20 75 7 is_stmt 0 view .LVU1032
 4383              	.LBE3271:
 4384              	.LBB3272:
 4385              	.LBI3272:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       // One past the last element.
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       constexpr const_iterator
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list ****       end() const noexcept { return begin() + size(); }
 4386              		.loc 20 79 7 is_stmt 1 view .LVU1033
 4387              		.loc 20 79 7 is_stmt 0 view .LVU1034
 4388              	.LBE3272:
 4389              	.LBB3273:
 4390              	.LBI3197:
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
 4391              		.loc 8 1577 2 is_stmt 1 view .LVU1035
 4392              	.LBB3263:
 4393              	.LBB3212:
 4394              	.LBI3212:
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4395              		.loc 8 1767 7 view .LVU1036
 4396              	.LBB3213:
 4397              	.LBI3213:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4398              		.loc 14 147 7 view .LVU1037
 4399              	.LBB3214:
 4400              	.LBI3214:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4401              		.loc 15 82 7 view .LVU1038
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4402              		.loc 15 82 7 is_stmt 0 view .LVU1039
 4403              	.LBE3214:
 4404              	.LBE3213:
 4405              	.LBB3215:
 4406              	.LBI3215:
 4407              		.loc 14 162 7 is_stmt 1 view .LVU1040
 4408              	.LBB3216:
 4409              	.LBI3216:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4410              		.loc 15 89 7 view .LVU1041
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4411              		.loc 15 89 7 is_stmt 0 view .LVU1042
 4412              	.LBE3216:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 299


 4413              	.LBE3215:
 4414              	.LBE3212:
 4415              	.LBB3217:
 4416              	.LBI3199:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4417              		.loc 8 343 7 is_stmt 1 view .LVU1043
 4418              	.LBB3210:
 4419              	.LBB3208:
 4420              	.LBI3201:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 4421              		.loc 16 459 7 view .LVU1044
 4422              	.LBB3206:
 4423              	.LBI3202:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 4424              		.loc 15 103 7 view .LVU1045
 4425              	.LBB3204:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4426              		.loc 15 115 41 is_stmt 0 view .LVU1046
 4427 002a FFF7FEFF 		bl	_Znwj
 4428              	.LVL231:
 4429              	.LBE3204:
 4430              	.LBE3206:
 4431              	.LBE3208:
 4432              	.LBE3210:
 4433              	.LBE3217:
 4434              	.LBB3218:
 4435              	.LBB3219:
 4436              	.LBB3220:
 4437              	.LBB3221:
 4438              	.LBB3222:
 4439              	.LBB3223:
 4440              	.LBB3224:
 4441              	.LBB3225:
 4442              	.LBB3226:
 4443              	.LBB3227:
 4444              	.LBB3228:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 4445              		.loc 18 426 23 view .LVU1047
 4446 002e 03AA     		add	r2, sp, #12
 4447              	.LVL232:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 4448              		.loc 18 426 23 view .LVU1048
 4449              	.LBE3228:
 4450              	.LBE3227:
 4451              	.LBE3226:
 4452              	.LBE3225:
 4453              	.LBE3224:
 4454              	.LBE3223:
 4455              	.LBE3222:
 4456              	.LBE3221:
 4457              	.LBE3220:
 4458              	.LBE3219:
 4459              	.LBE3218:
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 4460              		.loc 8 1583 61 view .LVU1049
 4461 0030 00F10801 		add	r1, r0, #8
 4462              	.LBB3259:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 300


 4463              	.LBB3211:
 4464              	.LBB3209:
 4465              	.LBB3207:
 4466              	.LBB3205:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4467              		.loc 15 115 41 view .LVU1050
 4468 0034 0346     		mov	r3, r0
 4469              	.LVL233:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4470              		.loc 15 115 41 view .LVU1051
 4471              	.LBE3205:
 4472              	.LBE3207:
 4473              	.LBE3209:
 4474              	.LBE3211:
 4475              	.LBE3259:
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 4476              		.loc 8 1582 6 view .LVU1052
 4477 0036 E061     		str	r0, [r4, #28]
 4478              	.LBE3263:
 4479              	.LBE3273:
 4480              	.LBE3311:
 4481              	.LBB3312:
 4482              	.LBB3313:
 4483              	.LBB3314:
 4484              	.LBB3315:
 4485              	.LBB3316:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 4486              		.loc 8 98 47 view .LVU1053
 4487 0038 2563     		str	r5, [r4, #48]
 4488              	.LBE3316:
 4489              	.LBE3315:
 4490              	.LBE3314:
 4491              	.LBE3313:
 4492              	.LBE3312:
  16:../../dsp_fv/biquad.h ****         aCoeffVector = { 0,0,0 };
 4493              		.loc 7 16 14 view .LVU1054
 4494 003a 0596     		str	r6, [sp, #20]	@ float
 4495 003c 0696     		str	r6, [sp, #24]	@ float
 4496              	.LBB3391:
 4497              	.LBB3274:
 4498              	.LBB3264:
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 4499              		.loc 8 1584 28 view .LVU1055
 4500 003e C4E90811 		strd	r1, r1, [r4, #32]
 4501              	.LBB3260:
 4502              	.LBB3256:
 4503              	.LBB3253:
 4504              	.LBB3250:
 4505              	.LBB3247:
 4506              	.LBB3244:
 4507              	.LBB3241:
 4508              	.LBB3238:
 4509              	.LBB3235:
 4510              	.LBB3232:
 4511              	.LBB3229:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 4512              		.loc 18 426 23 view .LVU1056
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 301


 4513 0042 03CA     		ldmia	r2!, {r0, r1}
 4514              	.LVL234:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 4515              		.loc 18 426 23 view .LVU1057
 4516              	.LBE3229:
 4517              	.LBE3232:
 4518              	.LBE3235:
 4519              	.LBE3238:
 4520              	.LBE3241:
 4521              	.LBE3244:
 4522              	.LBE3247:
 4523              	.LBE3250:
 4524              	.LBE3253:
 4525              	.LBE3256:
 4526              	.LBE3260:
 4527              	.LBE3264:
 4528              	.LBE3274:
 4529              	.LBE3391:
 4530              	.LBB3392:
 4531              	.LBB3324:
 4532              	.LBB3322:
 4533              	.LBB3318:
 4534              	.LBB3317:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 4535              		.loc 8 98 47 view .LVU1058
 4536 0044 C4E90A55 		strd	r5, r5, [r4, #40]
 4537              	.LBE3317:
 4538              	.LBE3318:
 4539              	.LBE3322:
 4540              	.LBE3324:
 4541              	.LBE3392:
 4542              	.LBB3393:
 4543              	.LBB3275:
 4544              	.LBB3265:
 4545              	.LBB3261:
 4546              	.LBB3257:
 4547              	.LBB3254:
 4548              	.LBB3251:
 4549              	.LBB3248:
 4550              	.LBB3245:
 4551              	.LBB3242:
 4552              	.LBB3239:
 4553              	.LBB3236:
 4554              	.LBB3233:
 4555              	.LBB3230:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 4556              		.loc 18 426 23 view .LVU1059
 4557 0048 1860     		str	r0, [r3]	@ unaligned
 4558              	.LBE3230:
 4559              	.LBE3233:
 4560              	.LBE3236:
 4561              	.LBE3239:
 4562              	.LBE3242:
 4563              	.LBE3245:
 4564              	.LBE3248:
 4565              	.LBE3251:
 4566              	.LBE3254:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 302


 4567              	.LBE3257:
 4568              	.LBE3261:
 4569              	.LBE3265:
 4570              	.LBE3275:
 4571              	.LBE3393:
 4572              	.LBB3394:
 4573              	.LBB3325:
 4574              	.LBB3326:
 4575              	.LBB3327:
 4576              	.LBB3328:
 4577              	.LBB3329:
 4578              	.LBB3330:
 4579              	.LBB3331:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4580              		.loc 15 115 41 view .LVU1060
 4581 004a 0820     		movs	r0, #8
 4582              	.LBE3331:
 4583              	.LBE3330:
 4584              	.LBE3329:
 4585              	.LBE3328:
 4586              	.LBE3327:
 4587              	.LBE3326:
 4588              	.LBE3325:
 4589              	.LBE3394:
 4590              	.LBB3395:
 4591              	.LBB3276:
 4592              	.LBB3266:
 4593              	.LBB3262:
 4594              	.LBB3258:
 4595              	.LBB3255:
 4596              	.LBB3252:
 4597              	.LBB3249:
 4598              	.LBB3246:
 4599              	.LBB3243:
 4600              	.LBB3240:
 4601              	.LBB3237:
 4602              	.LBB3234:
 4603              	.LBB3231:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 4604              		.loc 18 426 23 view .LVU1061
 4605 004c 5960     		str	r1, [r3, #4]	@ unaligned
 4606              	.LVL235:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 4607              		.loc 18 426 23 view .LVU1062
 4608              	.LBE3231:
 4609              	.LBE3234:
 4610              	.LBE3237:
 4611              	.LBE3240:
 4612              	.LBE3243:
 4613              	.LBE3246:
 4614              	.LBE3249:
 4615              	.LBE3252:
 4616              	.LBE3255:
 4617              	.LBE3258:
 4618              	.LBE3262:
 4619              	.LBE3266:
 4620              	.LBE3276:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 303


 4621              	.LBE3395:
 4622              	.LBB3396:
 4623              	.LBI3396:
 4624              		.loc 14 162 7 is_stmt 1 view .LVU1063
 4625              	.LBB3397:
 4626              	.LBI3397:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4627              		.loc 15 89 7 view .LVU1064
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4628              		.loc 15 89 7 is_stmt 0 view .LVU1065
 4629              	.LBE3397:
 4630              	.LBE3396:
 4631              	.LBB3398:
 4632              	.LBI3398:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 4633              		.loc 14 144 7 is_stmt 1 view .LVU1066
 4634              	.LBB3399:
 4635              	.LBI3399:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4636              		.loc 15 79 7 view .LVU1067
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4637              		.loc 15 79 7 is_stmt 0 view .LVU1068
 4638              	.LBE3399:
 4639              	.LBE3398:
 4640              	.LBB3400:
 4641              	.LBI3312:
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 4642              		.loc 8 625 7 is_stmt 1 view .LVU1069
 4643              	.LBB3384:
 4644              	.LBI3313:
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 4645              		.loc 8 293 7 view .LVU1070
 4646              	.LBB3323:
 4647              	.LBI3314:
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 4648              		.loc 8 136 2 view .LVU1071
 4649              	.LBB3319:
 4650              	.LBI3319:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4651              		.loc 14 147 7 view .LVU1072
 4652              	.LBB3320:
 4653              	.LBI3320:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4654              		.loc 15 82 7 view .LVU1073
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4655              		.loc 15 82 7 is_stmt 0 view .LVU1074
 4656              	.LBE3320:
 4657              	.LBE3319:
 4658              	.LBB3321:
 4659              	.LBI3315:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 4660              		.loc 8 97 2 is_stmt 1 view .LVU1075
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 4661              		.loc 8 97 2 is_stmt 0 view .LVU1076
 4662              	.LBE3321:
 4663              	.LBE3323:
 4664              	.LBE3384:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 304


 4665              	.LBB3385:
 4666              	.LBI3385:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 4667              		.loc 20 75 7 is_stmt 1 view .LVU1077
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 4668              		.loc 20 75 7 is_stmt 0 view .LVU1078
 4669              	.LBE3385:
 4670              	.LBB3386:
 4671              	.LBI3386:
 4672              		.loc 20 79 7 is_stmt 1 view .LVU1079
 4673              		.loc 20 79 7 is_stmt 0 view .LVU1080
 4674              	.LBE3386:
 4675              	.LBB3387:
 4676              	.LBI3325:
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
 4677              		.loc 8 1577 2 is_stmt 1 view .LVU1081
 4678              	.LBB3380:
 4679              	.LBB3340:
 4680              	.LBI3340:
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4681              		.loc 8 1767 7 view .LVU1082
 4682              	.LBB3341:
 4683              	.LBI3341:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4684              		.loc 14 147 7 view .LVU1083
 4685              	.LBB3342:
 4686              	.LBI3342:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4687              		.loc 15 82 7 view .LVU1084
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4688              		.loc 15 82 7 is_stmt 0 view .LVU1085
 4689              	.LBE3342:
 4690              	.LBE3341:
 4691              	.LBB3343:
 4692              	.LBI3343:
 4693              		.loc 14 162 7 is_stmt 1 view .LVU1086
 4694              	.LBB3344:
 4695              	.LBI3344:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4696              		.loc 15 89 7 view .LVU1087
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4697              		.loc 15 89 7 is_stmt 0 view .LVU1088
 4698              	.LBE3344:
 4699              	.LBE3343:
 4700              	.LBE3340:
 4701              	.LBB3345:
 4702              	.LBI3327:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4703              		.loc 8 343 7 is_stmt 1 view .LVU1089
 4704              	.LBB3338:
 4705              	.LBB3336:
 4706              	.LBI3329:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 4707              		.loc 16 459 7 view .LVU1090
 4708              	.LBB3334:
 4709              	.LBI3330:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 305


 4710              		.loc 15 103 7 view .LVU1091
 4711              	.LBB3332:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4712              		.loc 15 115 41 is_stmt 0 view .LVU1092
 4713 004e FFF7FEFF 		bl	_Znwj
 4714              	.LVL236:
 4715              	.LBE3332:
 4716              	.LBE3334:
 4717              	.LBE3336:
 4718              	.LBE3338:
 4719              	.LBE3345:
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 4720              		.loc 8 1583 61 view .LVU1093
 4721 0052 00F10802 		add	r2, r0, #8
 4722              	.LBB3346:
 4723              	.LBB3339:
 4724              	.LBB3337:
 4725              	.LBB3335:
 4726              	.LBB3333:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4727              		.loc 15 115 41 view .LVU1094
 4728 0056 0346     		mov	r3, r0
 4729              	.LVL237:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4730              		.loc 15 115 41 view .LVU1095
 4731              	.LBE3333:
 4732              	.LBE3335:
 4733              	.LBE3337:
 4734              	.LBE3339:
 4735              	.LBE3346:
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 4736              		.loc 8 1582 6 view .LVU1096
 4737 0058 A062     		str	r0, [r4, #40]
 4738              	.LBE3380:
 4739              	.LBE3387:
 4740              	.LBE3400:
 4741              	.LBB3401:
 4742              	.LBB3402:
 4743              	.LBB3403:
 4744              	.LBB3404:
 4745              	.LBB3405:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 4746              		.loc 8 98 47 view .LVU1097
 4747 005a E563     		str	r5, [r4, #60]
 4748              	.LBE3405:
 4749              	.LBE3404:
 4750              	.LBE3403:
 4751              	.LBE3402:
 4752              	.LBE3401:
  16:../../dsp_fv/biquad.h ****         aCoeffVector = { 0,0,0 };
 4753              		.loc 7 16 14 view .LVU1098
 4754 005c 0796     		str	r6, [sp, #28]	@ float
 4755 005e 0896     		str	r6, [sp, #32]	@ float
 4756              	.LBB3497:
 4757              	.LBB3388:
 4758              	.LBB3381:
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 306


 4759              		.loc 8 1584 28 view .LVU1099
 4760 0060 C4E90B22 		strd	r2, r2, [r4, #44]
 4761              	.LBB3347:
 4762              	.LBB3348:
 4763              	.LBB3349:
 4764              	.LBB3350:
 4765              	.LBB3351:
 4766              	.LBB3352:
 4767              	.LBB3353:
 4768              	.LBB3354:
 4769              	.LBB3355:
 4770              	.LBB3356:
 4771              	.LBB3357:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 4772              		.loc 18 426 23 view .LVU1100
 4773 0064 05AA     		add	r2, sp, #20
 4774              	.LVL238:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 4775              		.loc 18 426 23 view .LVU1101
 4776 0066 03CA     		ldmia	r2!, {r0, r1}
 4777              	.LVL239:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 4778              		.loc 18 426 23 view .LVU1102
 4779              	.LBE3357:
 4780              	.LBE3356:
 4781              	.LBE3355:
 4782              	.LBE3354:
 4783              	.LBE3353:
 4784              	.LBE3352:
 4785              	.LBE3351:
 4786              	.LBE3350:
 4787              	.LBE3349:
 4788              	.LBE3348:
 4789              	.LBE3347:
 4790              	.LBE3381:
 4791              	.LBE3388:
 4792              	.LBE3497:
 4793              	.LBB3498:
 4794              	.LBB3413:
 4795              	.LBB3411:
 4796              	.LBB3407:
 4797              	.LBB3406:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 4798              		.loc 8 98 47 view .LVU1103
 4799 0068 C4E90D55 		strd	r5, r5, [r4, #52]
 4800              	.LBE3406:
 4801              	.LBE3407:
 4802              	.LBE3411:
 4803              	.LBE3413:
 4804              	.LBE3498:
 4805              	.LBB3499:
 4806              	.LBB3389:
 4807              	.LBB3382:
 4808              	.LBB3378:
 4809              	.LBB3376:
 4810              	.LBB3374:
 4811              	.LBB3372:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 307


 4812              	.LBB3370:
 4813              	.LBB3368:
 4814              	.LBB3366:
 4815              	.LBB3364:
 4816              	.LBB3362:
 4817              	.LBB3360:
 4818              	.LBB3358:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 4819              		.loc 18 426 23 view .LVU1104
 4820 006c 1860     		str	r0, [r3]	@ unaligned
 4821              	.LBE3358:
 4822              	.LBE3360:
 4823              	.LBE3362:
 4824              	.LBE3364:
 4825              	.LBE3366:
 4826              	.LBE3368:
 4827              	.LBE3370:
 4828              	.LBE3372:
 4829              	.LBE3374:
 4830              	.LBE3376:
 4831              	.LBE3378:
 4832              	.LBE3382:
 4833              	.LBE3389:
 4834              	.LBE3499:
 4835              	.LBB3500:
 4836              	.LBB3414:
 4837              	.LBB3415:
 4838              	.LBB3416:
 4839              	.LBB3417:
 4840              	.LBB3418:
 4841              	.LBB3419:
 4842              	.LBB3420:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4843              		.loc 15 115 41 view .LVU1105
 4844 006e 0820     		movs	r0, #8
 4845              	.LBE3420:
 4846              	.LBE3419:
 4847              	.LBE3418:
 4848              	.LBE3417:
 4849              	.LBE3416:
 4850              	.LBE3415:
 4851              	.LBE3414:
 4852              	.LBE3500:
 4853              	.LBB3501:
 4854              	.LBB3390:
 4855              	.LBB3383:
 4856              	.LBB3379:
 4857              	.LBB3377:
 4858              	.LBB3375:
 4859              	.LBB3373:
 4860              	.LBB3371:
 4861              	.LBB3369:
 4862              	.LBB3367:
 4863              	.LBB3365:
 4864              	.LBB3363:
 4865              	.LBB3361:
 4866              	.LBB3359:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 308


 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 4867              		.loc 18 426 23 view .LVU1106
 4868 0070 5960     		str	r1, [r3, #4]	@ unaligned
 4869              	.LVL240:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 4870              		.loc 18 426 23 view .LVU1107
 4871              	.LBE3359:
 4872              	.LBE3361:
 4873              	.LBE3363:
 4874              	.LBE3365:
 4875              	.LBE3367:
 4876              	.LBE3369:
 4877              	.LBE3371:
 4878              	.LBE3373:
 4879              	.LBE3375:
 4880              	.LBE3377:
 4881              	.LBE3379:
 4882              	.LBE3383:
 4883              	.LBE3390:
 4884              	.LBE3501:
 4885              	.LBB3502:
 4886              	.LBI3502:
 4887              		.loc 14 162 7 is_stmt 1 view .LVU1108
 4888              	.LBB3503:
 4889              	.LBI3503:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4890              		.loc 15 89 7 view .LVU1109
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4891              		.loc 15 89 7 is_stmt 0 view .LVU1110
 4892              	.LBE3503:
 4893              	.LBE3502:
 4894              	.LBB3504:
 4895              	.LBI3504:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 4896              		.loc 14 144 7 is_stmt 1 view .LVU1111
 4897              	.LBB3505:
 4898              	.LBI3505:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4899              		.loc 15 79 7 view .LVU1112
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4900              		.loc 15 79 7 is_stmt 0 view .LVU1113
 4901              	.LBE3505:
 4902              	.LBE3504:
 4903              	.LBB3506:
 4904              	.LBI3401:
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 4905              		.loc 8 625 7 is_stmt 1 view .LVU1114
 4906              	.LBB3487:
 4907              	.LBI3402:
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 4908              		.loc 8 293 7 view .LVU1115
 4909              	.LBB3412:
 4910              	.LBI3403:
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 4911              		.loc 8 136 2 view .LVU1116
 4912              	.LBB3408:
 4913              	.LBI3408:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 309


 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4914              		.loc 14 147 7 view .LVU1117
 4915              	.LBB3409:
 4916              	.LBI3409:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4917              		.loc 15 82 7 view .LVU1118
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4918              		.loc 15 82 7 is_stmt 0 view .LVU1119
 4919              	.LBE3409:
 4920              	.LBE3408:
 4921              	.LBB3410:
 4922              	.LBI3404:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 4923              		.loc 8 97 2 is_stmt 1 view .LVU1120
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 4924              		.loc 8 97 2 is_stmt 0 view .LVU1121
 4925              	.LBE3410:
 4926              	.LBE3412:
 4927              	.LBE3487:
 4928              	.LBB3488:
 4929              	.LBI3488:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 4930              		.loc 20 75 7 is_stmt 1 view .LVU1122
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\initializer_list **** 
 4931              		.loc 20 75 7 is_stmt 0 view .LVU1123
 4932              	.LBE3488:
 4933              	.LBB3489:
 4934              	.LBI3489:
 4935              		.loc 20 79 7 is_stmt 1 view .LVU1124
 4936              		.loc 20 79 7 is_stmt 0 view .LVU1125
 4937              	.LBE3489:
 4938              	.LBB3490:
 4939              	.LBI3414:
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
 4940              		.loc 8 1577 2 is_stmt 1 view .LVU1126
 4941              	.LBB3480:
 4942              	.LBB3429:
 4943              	.LBI3429:
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4944              		.loc 8 1767 7 view .LVU1127
 4945              	.LBB3430:
 4946              	.LBI3430:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4947              		.loc 14 147 7 view .LVU1128
 4948              	.LBB3431:
 4949              	.LBI3431:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4950              		.loc 15 82 7 view .LVU1129
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4951              		.loc 15 82 7 is_stmt 0 view .LVU1130
 4952              	.LBE3431:
 4953              	.LBE3430:
 4954              	.LBB3432:
 4955              	.LBI3432:
 4956              		.loc 14 162 7 is_stmt 1 view .LVU1131
 4957              	.LBB3433:
 4958              	.LBI3433:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 310


  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4959              		.loc 15 89 7 view .LVU1132
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4960              		.loc 15 89 7 is_stmt 0 view .LVU1133
 4961              	.LBE3433:
 4962              	.LBE3432:
 4963              	.LBE3429:
 4964              	.LBB3434:
 4965              	.LBI3416:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4966              		.loc 8 343 7 is_stmt 1 view .LVU1134
 4967              	.LBB3427:
 4968              	.LBB3425:
 4969              	.LBI3418:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 4970              		.loc 16 459 7 view .LVU1135
 4971              	.LBB3423:
 4972              	.LBI3419:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 4973              		.loc 15 103 7 view .LVU1136
 4974              	.LBB3421:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4975              		.loc 15 115 41 is_stmt 0 view .LVU1137
 4976 0072 FFF7FEFF 		bl	_Znwj
 4977              	.LVL241:
 4978              	.LBE3421:
 4979              	.LBE3423:
 4980              	.LBE3425:
 4981              	.LBE3427:
 4982              	.LBE3434:
 4983              	.LBB3435:
 4984              	.LBB3436:
 4985              	.LBB3437:
 4986              	.LBB3438:
 4987              	.LBB3439:
 4988              	.LBB3440:
 4989              	.LBB3441:
 4990              	.LBB3442:
 4991              	.LBB3443:
 4992              	.LBB3444:
 4993              	.LBB3445:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 4994              		.loc 18 426 23 view .LVU1138
 4995 0076 07AA     		add	r2, sp, #28
 4996              	.LVL242:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 4997              		.loc 18 426 23 view .LVU1139
 4998              	.LBE3445:
 4999              	.LBE3444:
 5000              	.LBE3443:
 5001              	.LBE3442:
 5002              	.LBE3441:
 5003              	.LBE3440:
 5004              	.LBE3439:
 5005              	.LBE3438:
 5006              	.LBE3437:
 5007              	.LBE3436:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 311


 5008              	.LBE3435:
 5009              	.LBE3480:
 5010              	.LBE3490:
 5011              	.LBE3506:
  16:../../dsp_fv/biquad.h ****         aCoeffVector = { 0,0,0 };
 5012              		.loc 7 16 14 view .LVU1140
 5013 0078 4FF07E51 		mov	r1, #1065353216
 5014              	.LBB3507:
 5015              	.LBB3491:
 5016              	.LBB3481:
 5017              	.LBB3476:
 5018              	.LBB3428:
 5019              	.LBB3426:
 5020              	.LBB3424:
 5021              	.LBB3422:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 5022              		.loc 15 115 41 view .LVU1141
 5023 007c 0346     		mov	r3, r0
 5024              	.LVL243:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 5025              		.loc 15 115 41 view .LVU1142
 5026              	.LBE3422:
 5027              	.LBE3424:
 5028              	.LBE3426:
 5029              	.LBE3428:
 5030              	.LBE3476:
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 5031              		.loc 8 1582 6 view .LVU1143
 5032 007e 6063     		str	r0, [r4, #52]
 5033              	.LBE3481:
 5034              	.LBE3491:
 5035              	.LBE3507:
  16:../../dsp_fv/biquad.h ****         aCoeffVector = { 0,0,0 };
 5036              		.loc 7 16 14 view .LVU1144
 5037 0080 6164     		str	r1, [r4, #68]	@ float
 5038              	.LBB3508:
 5039              	.LBB3492:
 5040              	.LBB3482:
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
 5041              		.loc 8 1583 61 view .LVU1145
 5042 0082 0833     		adds	r3, r3, #8
 5043              	.LBE3482:
 5044              	.LBE3492:
 5045              	.LBE3508:
  16:../../dsp_fv/biquad.h ****         aCoeffVector = { 0,0,0 };
 5046              		.loc 7 16 14 view .LVU1146
 5047 0084 2664     		str	r6, [r4, #64]	@ float
 5048              	.LBB3509:
 5049              	.LBB3281:
 5050              	.LBB3282:
 5051              	.LBB3283:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5052              		.loc 11 183 26 view .LVU1147
 5053 0086 E564     		str	r5, [r4, #76]
 5054              	.LBE3283:
 5055              	.LBE3282:
 5056              	.LBB3284:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 312


 5057              	.LBB3285:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5058              		.loc 12 322 14 view .LVU1148
 5059 0088 84F85050 		strb	r5, [r4, #80]
 5060              	.LBE3285:
 5061              	.LBE3284:
 5062              	.LBE3281:
 5063              	.LBE3509:
  17:../../dsp_fv/biquad.h ****         bCoeffVector = { 0,0,0 };
 5064              		.loc 7 17 22 view .LVU1149
 5065 008c 0996     		str	r6, [sp, #36]	@ float
 5066 008e 0A96     		str	r6, [sp, #40]	@ float
 5067 0090 0B96     		str	r6, [sp, #44]	@ float
 5068              	.LBB3510:
 5069              	.LBB3493:
 5070              	.LBB3483:
 5071              	.LBB3477:
 5072              	.LBB3473:
 5073              	.LBB3470:
 5074              	.LBB3467:
 5075              	.LBB3464:
 5076              	.LBB3461:
 5077              	.LBB3458:
 5078              	.LBB3455:
 5079              	.LBB3452:
 5080              	.LBB3449:
 5081              	.LBB3446:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 5082              		.loc 18 426 23 view .LVU1150
 5083 0092 03CA     		ldmia	r2!, {r0, r1}
 5084              	.LVL244:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 5085              		.loc 18 426 23 view .LVU1151
 5086              	.LBE3446:
 5087              	.LBE3449:
 5088              	.LBE3452:
 5089              	.LBE3455:
 5090              	.LBE3458:
 5091              	.LBE3461:
 5092              	.LBE3464:
 5093              	.LBE3467:
 5094              	.LBE3470:
 5095              	.LBE3473:
 5096              	.LBE3477:
 5097              	.LBE3483:
 5098              	.LBE3493:
 5099              	.LBE3510:
 5100              	.LBB3511:
 5101              	.LBB3512:
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 5102              		.loc 8 732 21 view .LVU1152
 5103 0094 0CAA     		add	r2, sp, #48
 5104              	.LVL245:
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 5105              		.loc 8 732 21 view .LVU1153
 5106              	.LBE3512:
 5107              	.LBE3511:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 313


 5108              	.LBB3517:
 5109              	.LBB3494:
 5110              	.LBB3484:
 5111              	.LBB3478:
 5112              	.LBB3474:
 5113              	.LBB3471:
 5114              	.LBB3468:
 5115              	.LBB3465:
 5116              	.LBB3462:
 5117              	.LBB3459:
 5118              	.LBB3456:
 5119              	.LBB3453:
 5120              	.LBB3450:
 5121              	.LBB3447:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 5122              		.loc 18 426 23 view .LVU1154
 5123 0096 43F8080C 		str	r0, [r3, #-8]	@ unaligned
 5124              	.LBE3447:
 5125              	.LBE3450:
 5126              	.LBE3453:
 5127              	.LBE3456:
 5128              	.LBE3459:
 5129              	.LBE3462:
 5130              	.LBE3465:
 5131              	.LBE3468:
 5132              	.LBE3471:
 5133              	.LBE3474:
 5134              	.LBE3478:
 5135              	.LBE3484:
 5136              	.LBE3494:
 5137              	.LBE3517:
 5138              	.LBB3518:
 5139              	.LBB3514:
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 5140              		.loc 8 732 21 view .LVU1155
 5141 009a 201D     		adds	r0, r4, #4
 5142              	.LBE3514:
 5143              	.LBE3518:
 5144              	.LBB3519:
 5145              	.LBB3495:
 5146              	.LBB3485:
 5147              	.LBB3479:
 5148              	.LBB3475:
 5149              	.LBB3472:
 5150              	.LBB3469:
 5151              	.LBB3466:
 5152              	.LBB3463:
 5153              	.LBB3460:
 5154              	.LBB3457:
 5155              	.LBB3454:
 5156              	.LBB3451:
 5157              	.LBB3448:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 5158              		.loc 18 426 23 view .LVU1156
 5159 009c 43F8041C 		str	r1, [r3, #-4]	@ unaligned
 5160              	.LBE3448:
 5161              	.LBE3451:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 314


 5162              	.LBE3454:
 5163              	.LBE3457:
 5164              	.LBE3460:
 5165              	.LBE3463:
 5166              	.LBE3466:
 5167              	.LBE3469:
 5168              	.LBE3472:
 5169              	.LBE3475:
 5170              	.LBE3479:
 5171              	.LBE3485:
 5172              	.LBE3495:
 5173              	.LBE3519:
 5174              	.LBB3520:
 5175              	.LBB3515:
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 5176              		.loc 8 732 21 view .LVU1157
 5177 00a0 09A9     		add	r1, sp, #36
 5178              	.LVL246:
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 5179              		.loc 8 732 21 view .LVU1158
 5180              	.LBE3515:
 5181              	.LBE3520:
 5182              	.LBB3521:
 5183              	.LBB3496:
 5184              	.LBB3486:
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 5185              		.loc 8 1584 28 view .LVU1159
 5186 00a2 C4E90E33 		strd	r3, r3, [r4, #56]
 5187              	.LVL247:
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
 5188              		.loc 8 1584 28 view .LVU1160
 5189              	.LBE3486:
 5190              	.LBE3496:
 5191              	.LBE3521:
 5192              	.LBB3522:
 5193              	.LBI3522:
 5194              		.loc 14 162 7 is_stmt 1 view .LVU1161
 5195              	.LBB3523:
 5196              	.LBI3523:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5197              		.loc 15 89 7 view .LVU1162
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5198              		.loc 15 89 7 is_stmt 0 view .LVU1163
 5199              	.LBE3523:
 5200              	.LBE3522:
 5201              	.LBB3524:
 5202              	.LBI3277:
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 5203              		.loc 11 431 7 is_stmt 1 view .LVU1164
 5204              	.LBB3289:
 5205              	.LBI3278:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5206              		.loc 11 190 7 view .LVU1165
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5207              		.loc 11 190 7 is_stmt 0 view .LVU1166
 5208              	.LBE3289:
 5209              	.LBB3290:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 315


 5210              	.LBI3290:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 5211              		.loc 14 144 7 is_stmt 1 view .LVU1167
 5212              	.LBB3291:
 5213              	.LBI3291:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5214              		.loc 15 79 7 view .LVU1168
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5215              		.loc 15 79 7 is_stmt 0 view .LVU1169
 5216              	.LBE3291:
 5217              	.LBE3290:
 5218              	.LBB3292:
 5219              	.LBI3292:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 5220              		.loc 11 159 2 is_stmt 1 view .LVU1170
 5221              	.LBB3293:
 5222              	.LBB3294:
 5223              	.LBI3294:
 5224              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\move.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** /** @file bits/move.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #ifndef _MOVE_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _MOVE_H 1
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <bits/c++config.h>
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus < 201103L
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** # include <bits/concept_check.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 316


  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // Used, in C++03 mode too, by allocators, etc.
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Same as C++11 std::addressof
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @ingroup utilities
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return __builtin_addressof(__r); }
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus >= 201103L
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** } // namespace
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <type_traits> // Brings in std::declval too.
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @addtogroup utilities
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @{
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an lvalue.
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an rvalue.
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 		    " substituting _Tp is an lvalue reference type");
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       return static_cast<_Tp&&>(__t);
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     }
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Convert a value to an rvalue.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 317


  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __t  A thing of arbitrary type.
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     move(_Tp&& __t) noexcept
 5225              		.loc 21 101 5 view .LVU1171
 5226              		.loc 21 101 5 is_stmt 0 view .LVU1172
 5227              	.LBE3294:
 5228              	.LBB3295:
 5229              	.LBI3295:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5230              		.loc 14 147 7 is_stmt 1 view .LVU1173
 5231              	.LBB3296:
 5232              	.LBI3296:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5233              		.loc 15 82 7 view .LVU1174
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5234              		.loc 15 82 7 is_stmt 0 view .LVU1175
 5235              	.LBE3296:
 5236              	.LBE3295:
 5237              	.LBE3293:
 5238              	.LBE3292:
 5239              	.LBB3298:
 5240              	.LBB3280:
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 5241              		.loc 11 193 51 view .LVU1176
 5242 00a6 04F15003 		add	r3, r4, #80
 5243              	.LVL248:
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 5244              		.loc 11 193 51 view .LVU1177
 5245              	.LBE3280:
 5246              	.LBE3298:
 5247              	.LBB3299:
 5248              	.LBB3297:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 5249              		.loc 11 160 46 view .LVU1178
 5250 00aa A364     		str	r3, [r4, #72]
 5251              	.LVL249:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 5252              		.loc 11 160 46 view .LVU1179
 5253              	.LBE3297:
 5254              	.LBE3299:
 5255              	.LBB3300:
 5256              	.LBI3300:
 5257              		.loc 14 162 7 is_stmt 1 view .LVU1180
 5258              	.LBB3301:
 5259              	.LBI3301:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5260              		.loc 15 89 7 view .LVU1181
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5261              		.loc 15 89 7 is_stmt 0 view .LVU1182
 5262              	.LBE3301:
 5263              	.LBE3300:
 5264              	.LBB3302:
 5265              	.LBI3281:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 318


 5266              		.loc 11 214 7 is_stmt 1 view .LVU1183
 5267              	.LBB3287:
 5268              	.LBI3282:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5269              		.loc 11 182 7 view .LVU1184
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5270              		.loc 11 182 7 is_stmt 0 view .LVU1185
 5271              	.LBE3287:
 5272              	.LBB3288:
 5273              	.LBI3284:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 5274              		.loc 12 321 7 is_stmt 1 view .LVU1186
 5275              	.LBB3286:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5276              		.loc 12 322 9 view .LVU1187
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5277              		.loc 12 322 9 is_stmt 0 view .LVU1188
 5278              	.LBE3286:
 5279              	.LBE3288:
 5280              	.LBE3302:
 5281              	.LBE3524:
  17:../../dsp_fv/biquad.h ****         bCoeffVector = { 0,0,0 };
 5282              		.loc 7 17 9 is_stmt 1 view .LVU1189
 5283              	.LBB3525:
 5284              	.LBI3511:
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 5285              		.loc 8 730 7 view .LVU1190
 5286              	.LBB3516:
 5287              	.LBB3513:
 5288              	.LBI3513:
 5289              		.loc 20 79 7 view .LVU1191
 5290              		.loc 20 79 7 is_stmt 0 view .LVU1192
 5291              	.LBE3513:
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 5292              		.loc 8 732 21 view .LVU1193
 5293 00ac FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE13_M_assign_auxIPKfEEvT_S5_St20forward_iterator_tag.isra.0
 5294              	.LVL250:
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 5295              		.loc 8 732 21 view .LVU1194
 5296              	.LBE3516:
 5297              	.LBE3525:
  18:../../dsp_fv/biquad.h ****         form = "canonical";
 5298              		.loc 7 18 9 is_stmt 1 view .LVU1195
 5299              	.LBB3526:
 5300              	.LBB3527:
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 5301              		.loc 8 732 21 is_stmt 0 view .LVU1196
 5302 00b0 09A9     		add	r1, sp, #36
 5303 00b2 0CAA     		add	r2, sp, #48
 5304 00b4 04F11000 		add	r0, r4, #16
 5305              	.LVL251:
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 5306              		.loc 8 732 21 view .LVU1197
 5307              	.LBE3527:
 5308              	.LBE3526:
  18:../../dsp_fv/biquad.h ****         form = "canonical";
 5309              		.loc 7 18 22 view .LVU1198
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 319


 5310 00b8 0996     		str	r6, [sp, #36]	@ float
 5311 00ba 0A96     		str	r6, [sp, #40]	@ float
 5312 00bc 0B96     		str	r6, [sp, #44]	@ float
 5313              	.LVL252:
 5314              	.LBB3530:
 5315              	.LBI3526:
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 5316              		.loc 8 730 7 is_stmt 1 view .LVU1199
 5317              	.LBB3529:
 5318              	.LBB3528:
 5319              	.LBI3528:
 5320              		.loc 20 79 7 view .LVU1200
 5321              		.loc 20 79 7 is_stmt 0 view .LVU1201
 5322              	.LBE3528:
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 5323              		.loc 8 732 21 view .LVU1202
 5324 00be FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE13_M_assign_auxIPKfEEvT_S5_St20forward_iterator_tag.isra.0
 5325              	.LVL253:
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 5326              		.loc 8 732 21 view .LVU1203
 5327              	.LBE3529:
 5328              	.LBE3530:
  19:../../dsp_fv/biquad.h **** 
 5329              		.loc 7 19 9 is_stmt 1 view .LVU1204
 5330              	.LBB3531:
 5331              	.LBI3531:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 5332              		.loc 11 675 7 view .LVU1205
 5333              	.LBB3532:
 5334              	.LBI3532:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5335              		.loc 11 1435 7 view .LVU1206
 5336              	.LBB3533:
 5337              	.LBB3534:
 5338              	.LBI3534:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 5339              		.loc 11 901 7 view .LVU1207
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 5340              		.loc 11 901 7 is_stmt 0 view .LVU1208
 5341              	.LBE3534:
 5342              	.LBE3533:
 5343              	.LBE3532:
 5344              	.LBE3531:
 5345              	.LBE3539:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 5346              		.loc 12 357 2 is_stmt 1 view .LVU1209
 5347              	.LBB3540:
 5348              	.LBB3537:
 5349              	.LBB3536:
 5350              	.LBB3535:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 5351              		.loc 11 1438 19 is_stmt 0 view .LVU1210
 5352 00c2 0922     		movs	r2, #9
 5353 00c4 054B     		ldr	r3, .L205+4
 5354 00c6 2946     		mov	r1, r5
 5355 00c8 3846     		mov	r0, r7
 5356 00ca 0092     		str	r2, [sp]
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 320


 5357 00cc E26C     		ldr	r2, [r4, #76]
 5358 00ce FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 5359              	.LVL254:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 5360              		.loc 11 1438 19 view .LVU1211
 5361              	.LBE3535:
 5362              	.LBE3536:
 5363              	.LBE3537:
 5364              	.LBE3540:
  21:../../dsp_fv/biquad.h ****     Biquad(const string f):form(f)
 5365              		.loc 7 21 5 view .LVU1212
 5366 00d2 2046     		mov	r0, r4
 5367 00d4 0DB0     		add	sp, sp, #52
 5368              		.cfi_def_cfa_offset 20
 5369              		@ sp needed
 5370 00d6 F0BD     		pop	{r4, r5, r6, r7, pc}
 5371              	.LVL255:
 5372              	.L206:
  21:../../dsp_fv/biquad.h ****     Biquad(const string f):form(f)
 5373              		.loc 7 21 5 view .LVU1213
 5374              		.align	2
 5375              	.L205:
 5376 00d8 08000000 		.word	_ZTV6Biquad+8
 5377 00dc 08000000 		.word	.LC3
 5378              		.cfi_endproc
 5379              	.LFE4736:
 5381              		.weak	_ZN6BiquadC1Ev
 5382              		.thumb_set _ZN6BiquadC1Ev,_ZN6BiquadC2Ev
 5383              		.section	.text._Z15prepareHardwarev,"ax",%progbits
 5384              		.align	1
 5385              		.p2align 2,,3
 5386              		.global	_Z15prepareHardwarev
 5387              		.syntax unified
 5388              		.thumb
 5389              		.thumb_func
 5390              		.fpu fpv5-d16
 5392              	_Z15prepareHardwarev:
 5393              	.LFB4760:
 5394              		.file 22 "NewExampleProject.cpp"
   1:NewExampleProject.cpp **** #include "daisy_seed.h"
   2:NewExampleProject.cpp **** #include "daisysp.h"
   3:NewExampleProject.cpp **** #include "../../dsp_fv/classicFilters.h"
   4:NewExampleProject.cpp **** using namespace daisy;
   5:NewExampleProject.cpp **** using namespace daisysp;
   6:NewExampleProject.cpp **** 
   7:NewExampleProject.cpp **** DaisySeed hardware;
   8:NewExampleProject.cpp **** ClassicFilters filter;
   9:NewExampleProject.cpp **** Switch filterSelectButton;
  10:NewExampleProject.cpp **** 
  11:NewExampleProject.cpp **** string filterState;
  12:NewExampleProject.cpp **** float samplerate;
  13:NewExampleProject.cpp **** 
  14:NewExampleProject.cpp **** 
  15:NewExampleProject.cpp **** /// @brief prepares the Hardware (pots, buttons, adc and dac)
  16:NewExampleProject.cpp **** void prepareHardware()
  17:NewExampleProject.cpp **** {
 5395              		.loc 22 17 1 is_stmt 1 view -0
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 321


 5396              		.cfi_startproc
 5397              		@ args = 0, pretend = 0, frame = 48
 5398              		@ frame_needed = 0, uses_anonymous_args = 0
  18:NewExampleProject.cpp **** 	// Configure and Initialize the Daisy Seed
  19:NewExampleProject.cpp ****     // These are separate to allow reconfiguration of any of the internal
  20:NewExampleProject.cpp ****     // components before initialization.
  21:NewExampleProject.cpp ****     hardware.Configure();
 5399              		.loc 22 21 5 view .LVU1215
  17:NewExampleProject.cpp **** 	// Configure and Initialize the Daisy Seed
 5400              		.loc 22 17 1 is_stmt 0 view .LVU1216
 5401 0000 30B5     		push	{r4, r5, lr}
 5402              		.cfi_def_cfa_offset 12
 5403              		.cfi_offset 4, -12
 5404              		.cfi_offset 5, -8
 5405              		.cfi_offset 14, -4
 5406              		.loc 22 21 23 view .LVU1217
 5407 0002 204C     		ldr	r4, .L209
  17:NewExampleProject.cpp **** 	// Configure and Initialize the Daisy Seed
 5408              		.loc 22 17 1 view .LVU1218
 5409 0004 8DB0     		sub	sp, sp, #52
 5410              		.cfi_def_cfa_offset 64
  22:NewExampleProject.cpp ****     hardware.Init();
  23:NewExampleProject.cpp ****     hardware.SetAudioBlockSize(4);
  24:NewExampleProject.cpp **** 	samplerate = hardware.AudioSampleRate();
 5411              		.loc 22 24 13 view .LVU1219
 5412 0006 204D     		ldr	r5, .L209+4
  21:NewExampleProject.cpp ****     hardware.Init();
 5413              		.loc 22 21 23 view .LVU1220
 5414 0008 2046     		mov	r0, r4
 5415 000a FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 5416              	.LVL256:
  22:NewExampleProject.cpp ****     hardware.Init();
 5417              		.loc 22 22 5 is_stmt 1 view .LVU1221
  22:NewExampleProject.cpp ****     hardware.Init();
 5418              		.loc 22 22 18 is_stmt 0 view .LVU1222
 5419 000e 2046     		mov	r0, r4
 5420 0010 0021     		movs	r1, #0
 5421 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 5422              	.LVL257:
  23:NewExampleProject.cpp **** 	samplerate = hardware.AudioSampleRate();
 5423              		.loc 22 23 5 is_stmt 1 view .LVU1223
  23:NewExampleProject.cpp **** 	samplerate = hardware.AudioSampleRate();
 5424              		.loc 22 23 31 is_stmt 0 view .LVU1224
 5425 0016 0421     		movs	r1, #4
 5426 0018 2046     		mov	r0, r4
 5427 001a FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 5428              	.LVL258:
 5429              		.loc 22 24 2 is_stmt 1 view .LVU1225
 5430              		.loc 22 24 39 is_stmt 0 view .LVU1226
 5431 001e 2046     		mov	r0, r4
 5432 0020 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5433              	.LVL259:
  25:NewExampleProject.cpp **** 
  26:NewExampleProject.cpp **** 	// Create an ADC configuration
  27:NewExampleProject.cpp ****     AdcChannelConfig adcConfig[2];
  28:NewExampleProject.cpp **** 	//Add pin 21 as an analog input in this config. We'll use this to read the knob
  29:NewExampleProject.cpp **** 	// cut off frequency pot
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 322


  30:NewExampleProject.cpp **** 	
  31:NewExampleProject.cpp **** 
  32:NewExampleProject.cpp **** 	adcConfig[0].InitSingle(hardware.GetPin(21));
 5434              		.loc 22 32 25 view .LVU1227
 5435 0024 1520     		movs	r0, #21
  24:NewExampleProject.cpp **** 
 5436              		.loc 22 24 13 view .LVU1228
 5437 0026 85ED000A 		vstr.32	s0, [r5]
  27:NewExampleProject.cpp **** 	//Add pin 21 as an analog input in this config. We'll use this to read the knob
 5438              		.loc 22 27 5 is_stmt 1 view .LVU1229
 5439              		.loc 22 32 2 view .LVU1230
 5440              		.loc 22 32 25 is_stmt 0 view .LVU1231
 5441 002a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5442              	.LVL260:
 5443 002e ADF80000 		strh	r0, [sp]	@ movhi
 5444 0032 0222     		movs	r2, #2
 5445 0034 0099     		ldr	r1, [sp]
 5446 0036 03A8     		add	r0, sp, #12
 5447 0038 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 5448              	.LVL261:
  33:NewExampleProject.cpp **** 	// q pot 
  34:NewExampleProject.cpp **** 	adcConfig[1].InitSingle(hardware.GetPin(17));
 5449              		.loc 22 34 2 is_stmt 1 view .LVU1232
 5450              		.loc 22 34 25 is_stmt 0 view .LVU1233
 5451 003c 1120     		movs	r0, #17
 5452 003e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5453              	.LVL262:
 5454 0042 ADF80400 		strh	r0, [sp, #4]	@ movhi
 5455 0046 0222     		movs	r2, #2
 5456 0048 0199     		ldr	r1, [sp, #4]
 5457 004a 0DF11E00 		add	r0, sp, #30
 5458 004e FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 5459              	.LVL263:
  35:NewExampleProject.cpp **** 	// filter select button
  36:NewExampleProject.cpp **** 	filterSelectButton.Init(hardware.GetPin(19),samplerate / 48.0f);
 5460              		.loc 22 36 2 is_stmt 1 view .LVU1234
 5461              		.loc 22 36 25 is_stmt 0 view .LVU1235
 5462 0052 1320     		movs	r0, #19
 5463 0054 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5464              	.LVL264:
 5465 0058 DFED0C7A 		vldr.32	s15, .L209+8
 5466 005c 95ED000A 		vldr.32	s0, [r5]
 5467 0060 ADF80800 		strh	r0, [sp, #8]	@ movhi
 5468 0064 80EE270A 		vdiv.f32	s0, s0, s15
 5469 0068 0299     		ldr	r1, [sp, #8]
 5470 006a 0948     		ldr	r0, .L209+12
 5471 006c FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 5472              	.LVL265:
  37:NewExampleProject.cpp **** 
  38:NewExampleProject.cpp **** 	hardware.adc.Init(adcConfig, 2);
 5473              		.loc 22 38 2 is_stmt 1 view .LVU1236
 5474              		.loc 22 38 19 is_stmt 0 view .LVU1237
 5475 0070 0423     		movs	r3, #4
 5476 0072 0222     		movs	r2, #2
 5477 0074 03A9     		add	r1, sp, #12
 5478 0076 04F11800 		add	r0, r4, #24
 5479 007a FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 323


 5480              	.LVL266:
  39:NewExampleProject.cpp **** 
  40:NewExampleProject.cpp **** }
 5481              		.loc 22 40 1 view .LVU1238
 5482 007e 0DB0     		add	sp, sp, #52
 5483              		.cfi_def_cfa_offset 12
 5484              		@ sp needed
 5485 0080 30BD     		pop	{r4, r5, pc}
 5486              	.L210:
 5487 0082 00BF     		.align	2
 5488              	.L209:
 5489 0084 00000000 		.word	.LANCHOR0
 5490 0088 00000000 		.word	.LANCHOR1
 5491 008c 00004042 		.word	1111490560
 5492 0090 00000000 		.word	.LANCHOR2
 5493              		.cfi_endproc
 5494              	.LFE4760:
 5496              		.section	.rodata._Z25processFilterSelectButtonv.str1.4,"aMS",%progbits,1
 5497              		.align	2
 5498              	.LC5:
 5499 0000 4C504631 		.ascii	"LPF1\000"
 5499      00
 5500 0005 000000   		.align	2
 5501              	.LC6:
 5502 0008 4C504632 		.ascii	"LPF2\000"
 5502      00
 5503 000d 000000   		.align	2
 5504              	.LC7:
 5505 0010 48504631 		.ascii	"HPF1\000"
 5505      00
 5506 0015 000000   		.align	2
 5507              	.LC8:
 5508 0018 48504632 		.ascii	"HPF2\000"
 5508      00
 5509              		.section	.text._Z25processFilterSelectButtonv,"ax",%progbits
 5510              		.align	1
 5511              		.p2align 2,,3
 5512              		.global	_Z25processFilterSelectButtonv
 5513              		.syntax unified
 5514              		.thumb
 5515              		.thumb_func
 5516              		.fpu fpv5-d16
 5518              	_Z25processFilterSelectButtonv:
 5519              	.LFB4761:
  41:NewExampleProject.cpp **** 
  42:NewExampleProject.cpp **** /// @brief prepares the DSP algorithm parametric parameters
  43:NewExampleProject.cpp **** /// @param samplerate 
  44:NewExampleProject.cpp **** 
  45:NewExampleProject.cpp **** void processFilterSelectButton()
  46:NewExampleProject.cpp **** {
 5520              		.loc 22 46 1 is_stmt 1 view -0
 5521              		.cfi_startproc
 5522              		@ args = 0, pretend = 0, frame = 0
 5523              		@ frame_needed = 0, uses_anonymous_args = 0
  47:NewExampleProject.cpp **** 	static unsigned int buttonState = 0; 
 5524              		.loc 22 47 2 view .LVU1240
  48:NewExampleProject.cpp **** 	filterSelectButton.Debounce();
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 324


 5525              		.loc 22 48 2 view .LVU1241
  46:NewExampleProject.cpp **** 	static unsigned int buttonState = 0; 
 5526              		.loc 22 46 1 is_stmt 0 view .LVU1242
 5527 0000 10B5     		push	{r4, lr}
 5528              		.cfi_def_cfa_offset 8
 5529              		.cfi_offset 4, -8
 5530              		.cfi_offset 14, -4
 5531              		.loc 22 48 29 view .LVU1243
 5532 0002 214C     		ldr	r4, .L225
  46:NewExampleProject.cpp **** 	static unsigned int buttonState = 0; 
 5533              		.loc 22 46 1 view .LVU1244
 5534 0004 82B0     		sub	sp, sp, #8
 5535              		.cfi_def_cfa_offset 16
 5536              		.loc 22 48 29 view .LVU1245
 5537 0006 2046     		mov	r0, r4
 5538 0008 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 5539              	.LVL267:
  49:NewExampleProject.cpp **** 
  50:NewExampleProject.cpp **** 	if (filterSelectButton.RisingEdge())
 5540              		.loc 22 50 2 is_stmt 1 view .LVU1246
 5541              	.LBB3587:
 5542              	.LBI3587:
  43:../../libDaisy//src/hid/switch.h **** 
  44:../../libDaisy//src/hid/switch.h ****     /** 
  45:../../libDaisy//src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../../libDaisy//src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../../libDaisy//src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../../libDaisy//src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../../libDaisy//src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../../libDaisy//src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../../libDaisy//src/hid/switch.h ****     */
  52:../../libDaisy//src/hid/switch.h ****     void
  53:../../libDaisy//src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../../libDaisy//src/hid/switch.h **** 
  55:../../libDaisy//src/hid/switch.h ****     /**
  56:../../libDaisy//src/hid/switch.h ****        Simplified Init.
  57:../../libDaisy//src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../../libDaisy//src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../../libDaisy//src/hid/switch.h ****     */
  60:../../libDaisy//src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
  61:../../libDaisy//src/hid/switch.h **** 
  62:../../libDaisy//src/hid/switch.h ****     /** 
  63:../../libDaisy//src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../../libDaisy//src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../../libDaisy//src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../../libDaisy//src/hid/switch.h ****     */
  67:../../libDaisy//src/hid/switch.h ****     void Debounce();
  68:../../libDaisy//src/hid/switch.h **** 
  69:../../libDaisy//src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../../libDaisy//src/hid/switch.h ****     inline bool RisingEdge() const { return updated_ ? state_ == 0x7f : false; }
 5543              		.loc 1 70 17 view .LVU1247
 5544              	.LBB3588:
 5545              		.loc 1 70 38 view .LVU1248
 5546              		.loc 1 70 54 is_stmt 0 view .LVU1249
 5547 000c 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 5548 000e B3B1     		cbz	r3, .L211
 5549              	.LVL268:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 325


 5550              		.loc 1 70 54 view .LVU1250
 5551              	.LBE3588:
 5552              	.LBE3587:
 5553              		.loc 22 50 2 view .LVU1251
 5554 0010 A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 5555 0012 7F2B     		cmp	r3, #127
 5556 0014 13D1     		bne	.L211
 5557              	.LBB3589:
 5558              	.LBI3589:
  45:NewExampleProject.cpp **** {
 5559              		.loc 22 45 6 is_stmt 1 view .LVU1252
 5560              	.LBB3590:
  51:NewExampleProject.cpp **** 	{
  52:NewExampleProject.cpp **** 		++buttonState;
 5561              		.loc 22 52 3 view .LVU1253
 5562 0016 1D4A     		ldr	r2, .L225+4
 5563 0018 1168     		ldr	r1, [r2]
 5564 001a 0131     		adds	r1, r1, #1
 5565 001c 1160     		str	r1, [r2]
  53:NewExampleProject.cpp **** 		if(buttonState == 0)
 5566              		.loc 22 53 3 view .LVU1254
 5567 001e 81B1     		cbz	r1, .L221
  54:NewExampleProject.cpp **** 			filterState = "LPF1";
  55:NewExampleProject.cpp **** 		else if(buttonState == 1)
 5568              		.loc 22 55 8 view .LVU1255
 5569 0020 0129     		cmp	r1, #1
 5570 0022 1FD0     		beq	.L222
  56:NewExampleProject.cpp **** 			filterState = "LPF2";
  57:NewExampleProject.cpp **** 		else if(buttonState == 2)
 5571              		.loc 22 57 8 view .LVU1256
 5572 0024 0229     		cmp	r1, #2
 5573 0026 26D0     		beq	.L223
  58:NewExampleProject.cpp **** 			filterState = "HPF1";
  59:NewExampleProject.cpp **** 		else if(buttonState == 3)
 5574              		.loc 22 59 8 view .LVU1257
 5575 0028 0329     		cmp	r1, #3
 5576 002a 12D0     		beq	.L224
  60:NewExampleProject.cpp **** 			filterState = "HPF2";
  61:NewExampleProject.cpp **** 		else
  62:NewExampleProject.cpp **** 		{
  63:NewExampleProject.cpp **** 			buttonState = 0;
 5577              		.loc 22 63 4 view .LVU1258
 5578              		.loc 22 63 16 is_stmt 0 view .LVU1259
 5579 002c 0021     		movs	r1, #0
 5580              	.LBB3591:
 5581              	.LBB3592:
 5582              	.LBB3593:
 5583              	.LBB3594:
 5584              	.LBB3595:
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5585              		.loc 11 902 16 view .LVU1260
 5586 002e 1848     		ldr	r0, .L225+8
 5587              	.LBE3595:
 5588              	.LBE3594:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 5589              		.loc 11 1438 19 view .LVU1261
 5590 0030 0424     		movs	r4, #4
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 326


 5591 0032 184B     		ldr	r3, .L225+12
 5592              	.LBE3593:
 5593              	.LBE3592:
 5594              	.LBE3591:
 5595              		.loc 22 63 16 view .LVU1262
 5596 0034 1160     		str	r1, [r2]
  64:NewExampleProject.cpp **** 			filterState = "LPF1";
 5597              		.loc 22 64 4 is_stmt 1 view .LVU1263
 5598              	.LVL269:
 5599              	.LBB3601:
 5600              	.LBI3591:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 5601              		.loc 11 675 7 view .LVU1264
 5602              	.LBB3599:
 5603              	.LBI3592:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5604              		.loc 11 1435 7 view .LVU1265
 5605              	.LBB3597:
 5606              	.LBB3596:
 5607              	.LBI3594:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 5608              		.loc 11 901 7 view .LVU1266
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 5609              		.loc 11 901 7 is_stmt 0 view .LVU1267
 5610              	.LBE3596:
 5611              	.LBE3597:
 5612              	.LBE3599:
 5613              	.LBE3601:
 5614              	.LBE3590:
 5615              	.LBE3589:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 5616              		.loc 12 357 2 is_stmt 1 view .LVU1268
 5617              	.LBB3645:
 5618              	.LBB3639:
 5619              	.LBB3602:
 5620              	.LBB3600:
 5621              	.LBB3598:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 5622              		.loc 11 1438 19 is_stmt 0 view .LVU1269
 5623 0036 0094     		str	r4, [sp]
 5624 0038 4268     		ldr	r2, [r0, #4]
 5625 003a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 5626              	.LVL270:
 5627              	.L211:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 5628              		.loc 11 1438 19 view .LVU1270
 5629              	.LBE3598:
 5630              	.LBE3600:
 5631              	.LBE3602:
 5632              	.LBE3639:
 5633              	.LBE3645:
  65:NewExampleProject.cpp **** 		}
  66:NewExampleProject.cpp **** 	}
  67:NewExampleProject.cpp **** }
 5634              		.loc 22 67 1 view .LVU1271
 5635 003e 02B0     		add	sp, sp, #8
 5636              		.cfi_remember_state
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 327


 5637              		.cfi_def_cfa_offset 8
 5638              		@ sp needed
 5639 0040 10BD     		pop	{r4, pc}
 5640              	.L221:
 5641              		.cfi_restore_state
 5642              	.LBB3646:
 5643              	.LBB3640:
  54:NewExampleProject.cpp **** 		else if(buttonState == 1)
 5644              		.loc 22 54 4 is_stmt 1 view .LVU1272
 5645              	.LVL271:
 5646              	.LBB3603:
 5647              	.LBI3603:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 5648              		.loc 11 675 7 view .LVU1273
 5649              	.LBB3604:
 5650              	.LBI3604:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5651              		.loc 11 1435 7 view .LVU1274
 5652              	.LBB3605:
 5653              	.LBB3606:
 5654              	.LBI3606:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 5655              		.loc 11 901 7 view .LVU1275
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 5656              		.loc 11 901 7 is_stmt 0 view .LVU1276
 5657              	.LBE3606:
 5658              	.LBE3605:
 5659              	.LBE3604:
 5660              	.LBE3603:
 5661              	.LBE3640:
 5662              	.LBE3646:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 5663              		.loc 12 357 2 is_stmt 1 view .LVU1277
 5664              	.LBB3647:
 5665              	.LBB3641:
 5666              	.LBB3611:
 5667              	.LBB3610:
 5668              	.LBB3609:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 5669              		.loc 11 1438 19 is_stmt 0 view .LVU1278
 5670 0042 0424     		movs	r4, #4
 5671              	.LBB3608:
 5672              	.LBB3607:
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5673              		.loc 11 902 16 view .LVU1279
 5674 0044 1248     		ldr	r0, .L225+8
 5675              	.LBE3607:
 5676              	.LBE3608:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 5677              		.loc 11 1438 19 view .LVU1280
 5678 0046 134B     		ldr	r3, .L225+12
 5679 0048 4268     		ldr	r2, [r0, #4]
 5680 004a 0094     		str	r4, [sp]
 5681 004c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 5682              	.LVL272:
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 5683              		.loc 11 1439 30 view .LVU1281
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 328


 5684 0050 F5E7     		b	.L211
 5685              	.LVL273:
 5686              	.L224:
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 5687              		.loc 11 1439 30 view .LVU1282
 5688              	.LBE3609:
 5689              	.LBE3610:
 5690              	.LBE3611:
  60:NewExampleProject.cpp **** 		else
 5691              		.loc 22 60 4 is_stmt 1 view .LVU1283
 5692              	.LBB3612:
 5693              	.LBI3612:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 5694              		.loc 11 675 7 view .LVU1284
 5695              	.LBB3613:
 5696              	.LBI3613:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5697              		.loc 11 1435 7 view .LVU1285
 5698              	.LBB3614:
 5699              	.LBB3615:
 5700              	.LBI3615:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 5701              		.loc 11 901 7 view .LVU1286
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 5702              		.loc 11 901 7 is_stmt 0 view .LVU1287
 5703              	.LBE3615:
 5704              	.LBE3614:
 5705              	.LBE3613:
 5706              	.LBE3612:
 5707              	.LBE3641:
 5708              	.LBE3647:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 5709              		.loc 12 357 2 is_stmt 1 view .LVU1288
 5710              	.LBB3648:
 5711              	.LBB3642:
 5712              	.LBB3620:
 5713              	.LBB3619:
 5714              	.LBB3618:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 5715              		.loc 11 1438 19 is_stmt 0 view .LVU1289
 5716 0052 0424     		movs	r4, #4
 5717              	.LBB3617:
 5718              	.LBB3616:
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5719              		.loc 11 902 16 view .LVU1290
 5720 0054 0E48     		ldr	r0, .L225+8
 5721              	.LBE3616:
 5722              	.LBE3617:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 5723              		.loc 11 1438 19 view .LVU1291
 5724 0056 104B     		ldr	r3, .L225+16
 5725 0058 0021     		movs	r1, #0
 5726 005a 4268     		ldr	r2, [r0, #4]
 5727 005c 0094     		str	r4, [sp]
 5728 005e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 5729              	.LVL274:
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 329


 5730              		.loc 11 1439 30 view .LVU1292
 5731 0062 ECE7     		b	.L211
 5732              	.LVL275:
 5733              	.L222:
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 5734              		.loc 11 1439 30 view .LVU1293
 5735              	.LBE3618:
 5736              	.LBE3619:
 5737              	.LBE3620:
  56:NewExampleProject.cpp **** 		else if(buttonState == 2)
 5738              		.loc 22 56 4 is_stmt 1 view .LVU1294
 5739              	.LBB3621:
 5740              	.LBI3621:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 5741              		.loc 11 675 7 view .LVU1295
 5742              	.LBB3622:
 5743              	.LBI3622:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5744              		.loc 11 1435 7 view .LVU1296
 5745              	.LBB3623:
 5746              	.LBB3624:
 5747              	.LBI3624:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 5748              		.loc 11 901 7 view .LVU1297
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 5749              		.loc 11 901 7 is_stmt 0 view .LVU1298
 5750              	.LBE3624:
 5751              	.LBE3623:
 5752              	.LBE3622:
 5753              	.LBE3621:
 5754              	.LBE3642:
 5755              	.LBE3648:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 5756              		.loc 12 357 2 is_stmt 1 view .LVU1299
 5757              	.LBB3649:
 5758              	.LBB3643:
 5759              	.LBB3629:
 5760              	.LBB3628:
 5761              	.LBB3627:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 5762              		.loc 11 1438 19 is_stmt 0 view .LVU1300
 5763 0064 0424     		movs	r4, #4
 5764              	.LBB3626:
 5765              	.LBB3625:
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5766              		.loc 11 902 16 view .LVU1301
 5767 0066 0A48     		ldr	r0, .L225+8
 5768              	.LBE3625:
 5769              	.LBE3626:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 5770              		.loc 11 1438 19 view .LVU1302
 5771 0068 0C4B     		ldr	r3, .L225+20
 5772 006a 0021     		movs	r1, #0
 5773 006c 4268     		ldr	r2, [r0, #4]
 5774 006e 0094     		str	r4, [sp]
 5775 0070 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 5776              	.LVL276:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 330


1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 5777              		.loc 11 1439 30 view .LVU1303
 5778 0074 E3E7     		b	.L211
 5779              	.LVL277:
 5780              	.L223:
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 5781              		.loc 11 1439 30 view .LVU1304
 5782              	.LBE3627:
 5783              	.LBE3628:
 5784              	.LBE3629:
  58:NewExampleProject.cpp **** 		else if(buttonState == 3)
 5785              		.loc 22 58 4 is_stmt 1 view .LVU1305
 5786              	.LBB3630:
 5787              	.LBI3630:
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 5788              		.loc 11 675 7 view .LVU1306
 5789              	.LBB3631:
 5790              	.LBI3631:
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5791              		.loc 11 1435 7 view .LVU1307
 5792              	.LBB3632:
 5793              	.LBB3633:
 5794              	.LBI3633:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 5795              		.loc 11 901 7 view .LVU1308
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 5796              		.loc 11 901 7 is_stmt 0 view .LVU1309
 5797              	.LBE3633:
 5798              	.LBE3632:
 5799              	.LBE3631:
 5800              	.LBE3630:
 5801              	.LBE3643:
 5802              	.LBE3649:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 5803              		.loc 12 357 2 is_stmt 1 view .LVU1310
 5804              	.LBB3650:
 5805              	.LBB3644:
 5806              	.LBB3638:
 5807              	.LBB3637:
 5808              	.LBB3636:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 5809              		.loc 11 1438 19 is_stmt 0 view .LVU1311
 5810 0076 0424     		movs	r4, #4
 5811              	.LBB3635:
 5812              	.LBB3634:
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5813              		.loc 11 902 16 view .LVU1312
 5814 0078 0548     		ldr	r0, .L225+8
 5815              	.LBE3634:
 5816              	.LBE3635:
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 5817              		.loc 11 1438 19 view .LVU1313
 5818 007a 094B     		ldr	r3, .L225+24
 5819 007c 0021     		movs	r1, #0
 5820 007e 4268     		ldr	r2, [r0, #4]
 5821 0080 0094     		str	r4, [sp]
 5822 0082 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 331


 5823              	.LVL278:
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 5824              		.loc 11 1439 30 view .LVU1314
 5825 0086 DAE7     		b	.L211
 5826              	.L226:
 5827              		.align	2
 5828              	.L225:
 5829 0088 00000000 		.word	.LANCHOR2
 5830 008c 00000000 		.word	.LANCHOR3
 5831 0090 00000000 		.word	.LANCHOR4
 5832 0094 00000000 		.word	.LC5
 5833 0098 18000000 		.word	.LC8
 5834 009c 08000000 		.word	.LC6
 5835 00a0 10000000 		.word	.LC7
 5836              	.LBE3636:
 5837              	.LBE3637:
 5838              	.LBE3638:
 5839              	.LBE3644:
 5840              	.LBE3650:
 5841              		.cfi_endproc
 5842              	.LFE4761:
 5844              		.section	.rodata._ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1
 5845              		.align	2
 5846              	.LC9:
 5847 0000 76656374 		.ascii	"vector::_M_realloc_insert\000"
 5847      6F723A3A 
 5847      5F4D5F72 
 5847      65616C6C 
 5847      6F635F69 
 5848              		.section	.text._ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_E
 5849              		.align	1
 5850              		.p2align 2,,3
 5851              		.weak	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 5852              		.syntax unified
 5853              		.thumb
 5854              		.thumb_func
 5855              		.fpu fpv5-d16
 5857              	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_:
 5858              	.LVL279:
 5859              	.LFB5332:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     auto
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_rval(const_iterator __position, value_type&& __v) -> iterator
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const auto __n = __position - cbegin();
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == cend())
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::move(__v));
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 332


 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_insert_aux(begin() + __n, std::move(__v));
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + __n, std::move(__v));
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       auto
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_emplace_aux(const_iterator __position, _Args&&... __args)
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       -> iterator
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const auto __n = __position - cbegin();
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__position == cend())
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				       std::forward<_Args>(__args)...);
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++this->_M_impl._M_finish;
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // We need to construct a temporary because something in __args...
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // could alias one of the elements of the container and so we
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // need to use it before _M_insert_aux moves elements around.
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Temporary_value __tmp(this, std::forward<_Args>(__args)...);
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_insert_aux(begin() + __n, std::move(__tmp._M_val()));
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(begin() + __n, std::forward<_Args>(__args)...);
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return iterator(this->_M_impl._M_start + __n);
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _Arg>
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_insert_aux(iterator __position, _Arg&& __arg)
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_aux(iterator __position, const _Tp& __x)
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			       _GLIBCXX_MOVE(*(this->_M_impl._M_finish - 1)));
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       ++this->_M_impl._M_finish;
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 333


 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Tp __x_copy = __x;
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 2,
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 1);
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = __x_copy;
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = std::forward<_Arg>(__arg);
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 5860              		.loc 13 426 7 is_stmt 1 view -0
 5861              		.cfi_startproc
 5862              		@ args = 0, pretend = 0, frame = 0
 5863              		@ frame_needed = 0, uses_anonymous_args = 0
 5864              		.loc 13 426 7 is_stmt 0 view .LVU1316
 5865 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5866              		.cfi_def_cfa_offset 40
 5867              		.cfi_offset 3, -40
 5868              		.cfi_offset 4, -36
 5869              		.cfi_offset 5, -32
 5870              		.cfi_offset 6, -28
 5871              		.cfi_offset 7, -24
 5872              		.cfi_offset 8, -20
 5873              		.cfi_offset 9, -16
 5874              		.cfi_offset 10, -12
 5875              		.cfi_offset 11, -8
 5876              		.cfi_offset 14, -4
 5877 0004 D0E90089 		ldrd	r8, r9, [r0]
 5878              		.loc 13 426 7 view .LVU1317
 5879 0008 0F46     		mov	r7, r1
 5880              	.LVL280:
 5881              	.LBB3688:
 5882              	.LBI3688:
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 5883              		.loc 8 1756 7 is_stmt 1 view .LVU1318
 5884              	.LBB3689:
 5885              	.LBB3690:
 5886              	.LBI3690:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 5887              		.loc 8 918 7 view .LVU1319
 5888              	.LBE3690:
 5889              	.LBE3689:
 5890              	.LBE3688:
 5891              		.loc 13 426 7 is_stmt 0 view .LVU1320
 5892 000a 9246     		mov	r10, r2
 5893              	.LBB3695:
 5894              	.LBB3693:
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 5895              		.loc 8 1758 2 view .LVU1321
 5896 000c 6FF06041 		mvn	r1, #-536870912
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 334


 5897              	.LBB3692:
 5898              	.LBB3691:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 5899              		.loc 8 919 50 view .LVU1322
 5900 0010 A9EB0802 		sub	r2, r9, r8
 5901              	.LVL281:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 5902              		.loc 8 919 50 view .LVU1323
 5903              	.LBE3691:
 5904              	.LBE3692:
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 5905              		.loc 8 1758 2 view .LVU1324
 5906 0014 B1EBA20F 		cmp	r1, r2, asr #2
 5907 0018 55D0     		beq	.L248
 5908 001a 9310     		asrs	r3, r2, #2
 5909 001c 0646     		mov	r6, r0
 5910              	.LBE3693:
 5911              	.LBE3695:
 5912              	.LBB3696:
 5913              	.LBB3697:
 5914              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Iterators -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 335


  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1996-1998
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /** @file bits/stl_iterator.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <ext/type_traits.h>
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/move.h>
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/ptr_traits.h>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <type_traits>
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201811L
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_constexpr_iterator 201811L
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #elif __cplusplus == 201703L
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201803L
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <compare>
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <new>
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <bits/iterator_concepts.h>
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @addtogroup iterators
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @{
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    */
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 336


  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   namespace __detail
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   {
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // Weaken iterator_category _Cat to _Limit if it is derived from that,
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // otherwise use _Otherwise.
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _Cat, typename _Limit, typename _Otherwise = _Cat>
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using __clamp_iter_cat
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<derived_from<_Cat, _Limit>, _Limit, _Otherwise>;
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   }
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.1 Reverse iterators
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @code
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @endcode
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  the requirement that the iterators must be safe.
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class reverse_iterator
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator current;
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<random_access_iterator<_Iterator>,
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			random_access_iterator_tag,
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			bidirectional_iterator_tag>;
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_category
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= __detail::__clamp_iter_cat<typename __traits_type::iterator_category,
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 				     random_access_iterator_tag>;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 337


 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 1012. reverse_iterator default ctor should value initialize
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator() : current() { }
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX17_CONSTEXPR
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The copy constructor is normal.
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : current(__x.current) { }
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator& operator=(const reverse_iterator&) = default;
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_GLIBCXX17_CONSTEXPR
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	: current(__x.base()) { }
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR iterator_type
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return current; }
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reference to the value at @c --current
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 338


 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *--__tmp;
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR pointer
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_concepts >= 201907L
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires is_pointer_v<_Iterator>
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	|| requires(const _Iterator __i) { __i.operator->(); }
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// 1052. operator-> should also support smart pointers
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--__tmp;
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return _S_to_pointer(__tmp);
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The original value of @c *this
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--()
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 339


 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int)
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current - __n); }
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n)
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current -= __n;
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current + __n); }
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n)
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 340


 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current += __n;
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *(*this + __n); }
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr iter_rvalue_reference_t<_Iterator>
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       iter_move(const reverse_iterator& __i)
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_copy_constructible_v<_Iterator>
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       && noexcept(ranges::iter_move(--std::declval<_Iterator&>())))
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	auto __tmp = __i.base();
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return ranges::iter_move(--__tmp);
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<indirectly_swappable<_Iterator> _Iter2>
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr void
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter_swap(const reverse_iterator& __x,
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		  const reverse_iterator<_Iter2>& __y)
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	noexcept(is_nothrow_copy_constructible_v<_Iterator>
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && is_nothrow_copy_constructible_v<_Iter2>
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && noexcept(ranges::iter_swap(--std::declval<_Iterator&>(),
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					       --std::declval<_Iter2&>())))
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __xtmp = __x.base();
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __ytmp = __y.base();
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  ranges::iter_swap(--__xtmp, --__ytmp);
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     private:
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR _Tp*
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp* __p)
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __p; }
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR pointer
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp __t)
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __t.operator->(); }
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@{
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  A simple bool.
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators forward comparisons to their underlying base()
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 341


 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus <= 201703L || ! defined __cpp_lib_concepts
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 342


 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else // C++20
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() == __y.base() } -> convertible_to<bool>; }
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() != __y.base() } -> convertible_to<bool>; }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() != __y.base(); }
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() > __y.base() } -> convertible_to<bool>; }
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() > __y.base(); }
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() < __y.base() } -> convertible_to<bool>; }
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() < __y.base(); }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() >= __y.base() } -> convertible_to<bool>; }
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() >= __y.base(); }
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 343


 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() <= __y.base() } -> convertible_to<bool>; }
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() <= __y.base(); }
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL,
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	   three_way_comparable_with<_IteratorL> _IteratorR>
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr compare_three_way_result_t<_IteratorL, _IteratorR>
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const reverse_iterator<_IteratorL>& __x,
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const reverse_iterator<_IteratorR>& __y)
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() <=> __x.base(); }
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++20
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@}
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 685. reverse_iterator/move_iterator difference has invalid signatures
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR auto
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Same as C++14 make_reverse_iterator but used in C++11 mode too.
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __make_reverse_iterator(_Iterator __i)
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # if __cplusplus >= 201402L
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  define __cpp_lib_make_reverse_iterator 201402
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 2285. make_reverse_iterator
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /// Generator function for reverse_iterator.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 344


 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  if __cplusplus > 201703L && defined __cpp_lib_concepts
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator1, typename _Iterator2>
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires (!sized_sentinel_for<_Iterator1, _Iterator2>)
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline constexpr bool
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     disable_sized_sentinel_for<reverse_iterator<_Iterator1>,
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			       reverse_iterator<_Iterator2>> = true;
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  endif // C++20
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # endif // C++14
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __niter_base(reverse_iterator<_Iterator> __it)
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__niter_base(__it.base())))
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__niter_base(__it.base())); }
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     struct __is_move_iterator<reverse_iterator<_Iterator> >
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : __is_move_iterator<_Iterator>
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { };
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __miter_base(reverse_iterator<_Iterator> __it)
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__miter_base(__it.base())))
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__miter_base(__it.base())); }
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++11
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_back.
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class back_insert_iterator
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 345


 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr back_insert_iterator() noexcept : container(nullptr) { }
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator(_Container& __x)
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always append the value to the end of the container.
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(std::move(__value));
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 346


 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline back_insert_iterator<_Container>
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     back_inserter(_Container& __x)
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_front.
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class front_insert_iterator
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr front_insert_iterator() noexcept : container(nullptr) { }
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator(_Container& __x)
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 347


 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always prepend the value to the front of the container.
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(std::move(__value));
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 348


 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline front_insert_iterator<_Container>
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     front_inserter(_Container& __x)
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  position.
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position.)
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class insert_iterator
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using _Iter = std::__detail::__range_iter_t<_Container>;
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container = nullptr;
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter = _Iter();
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename _Container::iterator		_Iter;
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter;
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator() = default;
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 349


 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator(_Container& __x, _Iter __i)
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)), iter(__i) {}
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  value into the container at the place before the %iterator.
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  insert values immediately after one another.  For example,
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @code
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A and Z
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 1;
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 2;
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 3;
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @endcode
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 350


 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __i  An iterator into the container.
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr insert_iterator<_Container>
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, std::__detail::__range_iter_t<_Container> __i)
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return insert_iterator<_Container>(__x, __i); }
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container, typename _Iterator>
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline insert_iterator<_Container>
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       return insert_iterator<_Container>(__x,
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					 typename _Container::iterator(__i));
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // @} group iterators
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** } // namespace
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // change the semantics of any of the operators of its iterator
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 351


 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // using this template can instantiate different types, even if the
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _Iterator parameter is the same.
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class __normal_iterator
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator _M_current;
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef std::iterator_traits<_Iterator>		__traits_type;
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept = std::__detail::__iter_concept<_Iterator>;
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(_Iterator()) { }
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Allow iterator to const_iterator conversion
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         _GLIBCXX20_CONSTEXPR
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			  typename __enable_if<
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         : _M_current(__i.base()) { }
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Forward iterator requirements
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *_M_current; }
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       pointer
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++_M_current;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 352


1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int) _GLIBCXX_NOEXCEPT
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current++); }
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Bidirectional iterator requirements
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--() _GLIBCXX_NOEXCEPT
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--_M_current;
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int) _GLIBCXX_NOEXCEPT
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current--); }
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Random access iterator requirements
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current[__n]; }
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { _M_current += __n; return *this; }
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { _M_current -= __n; return *this; }
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       const _Iterator&
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const _GLIBCXX_NOEXCEPT
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Note: In what follows, the left- and right-hand-side iterators are
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // allowed to vary in types (conceptually in cv-qualification) so that
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // comparison between cv-qualified and non-cv-qualified iterators be
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 353


1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // valid.  However, the greedy and unfriendly operators in std::rel_ops
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // will make overload resolution ambiguous (when in scope) if we don't
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // provide overloads whose operands are of the same type.  Can someone
1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // remind me what generic programming is about? -- Gaby
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cpp_lib_three_way_comparison
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires (_IteratorL __lhs, _IteratorR __rhs)
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { { __lhs == __rhs } -> std::convertible_to<bool>; }
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(noexcept(__lhs.base() == __rhs.base()))
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr std::__detail::__synth3way_t<_IteratorR, _IteratorL>
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const __normal_iterator<_IteratorL, _Container>& __lhs,
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const __normal_iterator<_IteratorR, _Container>& __rhs)
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(noexcept(std::__detail::__synth3way(__lhs.base(), __rhs.base())))
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return std::__detail::__synth3way(__lhs.base(), __rhs.base()); }
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    // Forward iterator requirements
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Random access iterator requirements
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 354


1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 355


1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // three-way comparison
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // According to the resolution of DR179 not only the various comparison
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // operators but also operator- must accept mixed iterator/const_iterator
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameters.
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // DR 685.
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline auto
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__lhs.base() - __rhs.base())
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename __normal_iterator<_IteratorL, _Container>::difference_type
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename __normal_iterator<_Iterator, _Container>::difference_type
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 5915              		.loc 23 1205 27 view .LVU1325
 5916 001e A7EB0805 		sub	r5, r7, r8
 5917 0022 012B     		cmp	r3, #1
 5918 0024 1C46     		mov	r4, r3
 5919 0026 38BF     		it	cc
 5920 0028 0124     		movcc	r4, #1
 5921 002a 1C19     		adds	r4, r3, r4
 5922 002c 49D2     		bcs	.L230
 5923              	.LVL282:
 5924              		.loc 23 1205 27 view .LVU1326
 5925              	.LBE3697:
 5926              	.LBE3696:
 5927              	.LBB3699:
 5928              	.LBI3699:
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 5929              		.loc 8 811 7 is_stmt 1 view .LVU1327
 5930              	.LBB3700:
 5931              	.LBI3700:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 5932              		.loc 23 978 7 view .LVU1328
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 5933              		.loc 23 978 7 is_stmt 0 view .LVU1329
 5934              	.LBE3700:
 5935              	.LBE3699:
 5936              	.LBB3702:
 5937              	.LBI3696:
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 5938              		.loc 23 1202 5 is_stmt 1 view .LVU1330
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 356


1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 5939              		.loc 23 1202 5 is_stmt 0 view .LVU1331
 5940              	.LBE3702:
 5941              	.LBB3703:
 5942              	.LBI3703:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 5943              		.loc 8 343 7 is_stmt 1 view .LVU1332
 5944              	.LBB3704:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 5945              		.loc 8 346 18 is_stmt 0 view .LVU1333
 5946 002e 002C     		cmp	r4, #0
 5947 0030 3DD1     		bne	.L249
 5948 0032 A346     		mov	fp, r4
 5949              	.LVL283:
 5950              	.L239:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 5951              		.loc 8 346 18 view .LVU1334
 5952              	.LBE3704:
 5953              	.LBE3703:
 5954              	.LBB3712:
 5955              	.LBI3712:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 5956              		.loc 16 507 2 is_stmt 1 view .LVU1335
 5957              	.LBB3713:
 5958              	.LBI3713:
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			  , __t * sizeof(_Tp)
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			 );
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       size_type
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return _M_max_size(); }
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up, typename... _Args>
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 5959              		.loc 15 148 2 view .LVU1336
 5960              		.loc 15 148 2 is_stmt 0 view .LVU1337
 5961              	.LBE3713:
 5962              	.LBE3712:
 5963              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\new"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // The -*- C++ -*- dynamic memory management header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Copyright (C) 1994-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // This file is part of GCC.
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** //
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GCC is free software; you can redistribute it and/or modify
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // it under the terms of the GNU General Public License as published by
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // the Free Software Foundation; either version 3, or (at your option)
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // any later version.
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GCC is distributed in the hope that it will be useful,
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 357


  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // GNU General Public License for more details.
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Under Section 7 of GPL version 3, you are granted additional
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // permissions described in the GCC Runtime Library Exception, version
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // 3.1, as published by the Free Software Foundation.
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // You should have received a copy of the GNU General Public License and
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // <http://www.gnu.org/licenses/>.
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** /** @file new
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  This is a Standard C++ Library header.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  handling memory allocation errors; see
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/dynamic_memory.html
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  for more.
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  */
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #ifndef _NEW
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #define _NEW
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC system_header
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #include <bits/c++config.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #include <exception>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC visibility push(default)
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** extern "C++" {
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** namespace std 
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** {
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /**
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @brief  Exception possibly thrown by @c new.
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @ingroup exceptions
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  errors from the throwing forms of @c new.  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   class bad_alloc : public exception 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   public:
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc() throw() { }
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc(const bad_alloc&) = default;
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc& operator=(const bad_alloc&) = default;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_alloc() throw();
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 358


  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   class bad_array_new_length : public bad_alloc
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   public:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     bad_array_new_length() throw() { }
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_array_new_length() throw();
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   enum class align_val_t: size_t {};
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   struct nothrow_t
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   {
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****     explicit nothrow_t() = default;
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   };
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   extern const nothrow_t nothrow;
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /** If you write your own error handler to be called by @c new, it must
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****    *  be of this type.  */
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   typedef void (*new_handler)();
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// Takes a replacement handler as the argument, returns the
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// previous handler.
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   new_handler set_new_handler(new_handler) throw();
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   /// Return the current new handler.
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   new_handler get_new_handler() noexcept;
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** } // namespace std
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** //@{
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** /** These are replaceable signatures:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal array new and delete (same)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *    @c NULL on error)
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow array new and delete (same)
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  Placement new and delete signatures (take a memory address argument,
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****  *  does nothing) may not be replaced by a user's program.
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** */
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 359


 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t, const std::nothrow_t&)
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t)
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t, const std::nothrow_t&)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t)
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t, const std::nothrow_t&)
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t)
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t, const std::nothrow_t&)
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t, std::align_val_t)
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t, std::align_val_t)
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_sized_deallocation
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_aligned_new
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** // Default placement versions of operator new.
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\new **** { return __p; }
 5964              		.loc 24 175 3 is_stmt 1 view .LVU1338
 5965              	.LBB3718:
 5966              	.LBB3716:
 5967              	.LBB3714:
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 5968              		.loc 15 150 4 is_stmt 0 view .LVU1339
 5969 0034 DAF80020 		ldr	r2, [r10]	@ float
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 360


 5970 0038 0BEB0503 		add	r3, fp, r5
 5971              	.LVL284:
 5972              		.loc 15 150 4 view .LVU1340
 5973              	.LBE3714:
 5974              	.LBE3716:
 5975              	.LBE3718:
 5976              	.LBB3719:
 5977              	.LBB3720:
 5978              	.LBB3721:
 5979              	.LBB3722:
 5980              	.LBB3723:
 5981              	.LBB3724:
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 __result, __alloc);
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _InputIterator __last,
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _ForwardIterator __result,
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _Allocator& __alloc)
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Allocator>
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     void
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, _Allocator& __alloc)
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 361


 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Tp2>
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, allocator<_Tp2>&)
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { std::uninitialized_fill(__first, __last, __x); }
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, _Allocator& __alloc)
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Tp2>
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, allocator<_Tp2>&)
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_fill_n(__first, __n, __x); }
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: __uninitialized_copy_move, __uninitialized_move_copy,
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_fill_move, __uninitialized_move_fill.
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // All of these algorithms take a user-supplied allocator, which is used
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // for construction and destruction.
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_copy_move
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Copies [first1, last1) into [result, result + (last1 - first1)), and
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  move [first2, last2) into
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_move(_InputIterator1 __first1,
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator1 __last1,
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __first2,
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __last2,
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result,
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1,
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __result,
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 362


 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __alloc);
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first2, __last2, __mid, __alloc);
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_move_copy
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Moves [first1, last1) into [result, result + (last1 - first1)), and
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  copies [first2, last2) into
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_copy(_InputIterator1 __first1,
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator1 __last1,
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __first2,
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __last2,
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_move_a(__first1, __last1,
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __result,
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __alloc);
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_fill_move
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [result, mid) with x, and moves [first, last) into
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [mid, mid + (last - first)).
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _InputIterator,
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid,
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      const _Tp& __x, _InputIterator __first,
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator __last, _Allocator& __alloc)
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill_a(__result, __mid, __x, __alloc);
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first, __last, __mid, __alloc);
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 363


 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_move_fill
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Moves [first1, last1) into [first2, first2 + (last1 - first1)), and
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  fills [first2 + (last1 - first1), last2) with x.
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp,
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1,
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __first2,
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last2, const _Tp& __x,
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid2 = std::__uninitialized_move_a(__first1, __last1,
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							    __first2,
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							    __alloc);
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::__uninitialized_fill_a(__mid2, __last2, __x, __alloc);
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first2, __mid2, __alloc);
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: __uninitialized_default, __uninitialized_default_n,
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_a, __uninitialized_default_n_a.
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_1
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 364


 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_1<true>
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    _ValueType;
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::fill(__first, __last, _ValueType());
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_n_1
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_n_1<true>
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    _ValueType;
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::fill_n(__first, __n, _ValueType());
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed value_types(s).
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator>
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 365


 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default(_ForwardIterator __first,
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			    _ForwardIterator __last)
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_default_1<__is_trivial(_ValueType)
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				     && __assignable>::
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default(__first, __last);
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_type(s).
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n(_ForwardIterator __first, _Size __n)
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_n_1<__is_trivial(_ValueType)
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_n(__first, __n);
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_a
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed value_types(s), constructed with the allocator alloc.
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Allocator>
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     void
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last,
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last,
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 366


 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      allocator<_Tp>&)
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { std::__uninitialized_default(__first, __last); }
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n_a
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_types(s),
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed with the allocator alloc.
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Allocator>
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				_Allocator& __alloc)
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				allocator<_Tp>&)
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::__uninitialized_default_n(__first, __n); }
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_1
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static void
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue(_ForwardIterator __first,
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 _ForwardIterator __last)
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_1<true>
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 367


 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_novalue(_ForwardIterator __first,
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 _ForwardIterator __last)
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static _ForwardIterator
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1<true>
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static _ForwardIterator
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{ return std::next(__first, __n); }
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_novalue
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default-initialized
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // value_types(s).
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator>
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_novalue(_ForwardIterator __first,
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				    _ForwardIterator __last)
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_default_novalue_1<
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue(__first, __last);
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 368


 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default-initialized value_type(s).
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_novalue_n(_ForwardIterator __first, _Size __n)
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_novalue_n_1<
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(__first, __n);
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n(_InputIterator __first, _Size __n,
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n(_RandomAccessIterator __first, _Size __n,
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result,
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   random_access_iterator_tag)
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __first + __n, __result); }
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     pair<_InputIterator, _ForwardIterator>
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return {__first, __cur};
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 369


 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_RandomAccessIterator, _ForwardIterator>
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_RandomAccessIterator __first, _Size __n,
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result,
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   random_access_iterator_tag)
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __second_res = uninitialized_copy(__first, __first + __n, __result);
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __first_res = std::next(__first, __n);
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return {__first_res, __second_res};
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,first+n) into result.
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of elements to copy.
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return  __result + __n
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy_n(), but does not require an initialized output range.
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy_n(_InputIterator __first, _Size __n,
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 _ForwardIterator __result)
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::__uninitialized_copy_n(__first, __n, __result,
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 std::__iterator_category(__first)); }
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result)
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__uninitialized_copy_n_pair(__first, __n, __result,
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 std::__iterator_category(__first));
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201703L
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** # define __cpp_lib_raw_memory_algorithms 201606L
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Default-initializes objects in the range [first,last).
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   A forward iterator.
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator>
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 370


 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_default_construct(_ForwardIterator __first,
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				    _ForwardIterator __last)
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __uninitialized_default_novalue(__first, __last);
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Default-initializes objects in the range [first,first+count).
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to construct.
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __first + __count
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_default_construct_n(_ForwardIterator __first, _Size __count)
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_novalue_n(__first, __count);
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Value-initializes objects in the range [first,last).
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   A forward iterator.
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator>
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_value_construct(_ForwardIterator __first,
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				  _ForwardIterator __last)
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default(__first, __last);
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Value-initializes objects in the range [first,first+count).
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to construct.
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + __count
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_value_construct_n(_ForwardIterator __first, _Size __count)
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_n(__first, __count);
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Move-construct from the range [first,last) into result.
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator>
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_move(_InputIterator __first, _InputIterator __last,
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 371


 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::uninitialized_copy
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_ITERATOR(__last), __result);
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Move-construct from the range [first,first+count) into result.
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to initialize.
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return  __result + __count
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _Size, typename _ForwardIterator>
 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_move_n(_InputIterator __first, _Size __count,
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 _ForwardIterator __result)
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __res = std::__uninitialized_copy_n_pair
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 __count, __result);
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return {__res.first.base(), __res.second};
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif // C++17
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _Tp, typename _Up, typename _Allocator>
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			_Allocator& __alloc)
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 __dest, std::move(*__orig)))
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	     && noexcept(std::allocator_traits<_Allocator>::destroy(
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			    __alloc, std::__addressof(*__orig))))
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef std::allocator_traits<_Allocator> __traits;
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __traits::construct(__alloc, __dest, std::move(*__orig));
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __traits::destroy(__alloc, std::__addressof(*__orig));
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // This class may be specialized for specific types.
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Also known as is_trivially_relocatable.
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _Tp, typename = void>
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __is_bitwise_relocatable
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     : is_trivial<_Tp> { };
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _Tp, typename _Up>
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline __enable_if_t<std::__is_bitwise_relocatable<_Tp>::value, _Tp*>
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a_1(_Tp* __first, _Tp* __last,
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       ptrdiff_t __count = __last - __first;
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 5982              		.loc 17 992 7 view .LVU1341
 5983 003c 002D     		cmp	r5, #0
 5984              	.LBE3724:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 372


 5985              	.LBE3723:
 5986              	.LBE3722:
 5987              	.LBE3721:
 5988              	.LBE3720:
 5989              	.LBE3719:
 5990              	.LBB3740:
 5991              	.LBB3717:
 5992              	.LBB3715:
 5993              		.loc 15 150 4 view .LVU1342
 5994 003e 1A60     		str	r2, [r3]	@ float
 5995              	.LVL285:
 5996              		.loc 15 150 4 view .LVU1343
 5997              	.LBE3715:
 5998              	.LBE3717:
 5999              	.LBE3740:
 6000              	.LBB3741:
 6001              	.LBI3719:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 6002              		.loc 8 465 7 is_stmt 1 view .LVU1344
 6003              	.LBB3737:
 6004              	.LBB3734:
 6005              	.LBI3721:
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 6006              		.loc 8 453 7 view .LVU1345
 6007              	.LBB3731:
 6008              	.LBI3722:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    typename _Allocator>
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a_1(_InputIterator __first, _InputIterator __last,
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     noexcept(noexcept(std::__relocate_object_a(std::addressof(*__result),
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					       std::addressof(*__first),
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					       __alloc)))
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(std::is_same<_ValueType, _ValueType2>::value,
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "relocation is only possible for values of the same type");
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 std::__addressof(*__first), __alloc);
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __cur;
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    typename _Allocator>
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a(_InputIterator __first, _InputIterator __last,
 6009              		.loc 17 1022 5 view .LVU1346
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 373


 6010              	.LBB3728:
 6011              	.LBI3723:
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 6012              		.loc 17 988 5 view .LVU1347
 6013              	.LBB3725:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 6014              		.loc 17 992 7 is_stmt 0 view .LVU1348
 6015 0040 24DC     		bgt	.L250
 6016              	.LVL286:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 6017              		.loc 17 992 7 view .LVU1349
 6018              	.LBE3725:
 6019              	.LBE3728:
 6020              	.LBE3731:
 6021              	.LBE3734:
 6022              	.LBE3737:
 6023              	.LBE3741:
 6024              	.LBB3742:
 6025              	.LBB3743:
 6026              	.LBB3744:
 6027              	.LBB3745:
 6028              	.LBB3746:
 6029              	.LBB3747:
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 6030              		.loc 17 991 34 view .LVU1350
 6031 0042 A9EB0709 		sub	r9, r9, r7
 6032              	.LVL287:
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 6033              		.loc 17 991 34 view .LVU1351
 6034              	.LBE3747:
 6035              	.LBE3746:
 6036              	.LBE3745:
 6037              	.LBE3744:
 6038              	.LBE3743:
 6039              	.LBE3742:
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_realloc_insert(iterator __position, const _Tp& __x)
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __len =
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_check_len(size_type(1), "vector::_M_realloc_insert");
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_start = this->_M_impl._M_start;
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_finish = this->_M_impl._M_finish;
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __elems_before = __position - begin();
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_start(this->_M_allocate(__len));
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_finish(__new_start);
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __try
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // The order of the three operations is dictated by the C++11
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // case, where the moves could alter a new element belonging
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // to the existing vector.  This is an issue only for callers
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // taking the element by lvalue ref (see last bullet of C++11
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // [res.on.arguments]).
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 374


 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl,
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before,
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   std::forward<_Args>(__args)...);
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x);
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __new_finish = pointer();
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__old_start, __position.base(),
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_start, _M_get_Tp_allocator());
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 6040              		.loc 13 464 8 view .LVU1352
 6041 0046 0435     		adds	r5, r5, #4
 6042              	.LVL288:
 6043              	.LBB3783:
 6044              	.LBB3776:
 6045              	.LBB3769:
 6046              	.LBB3762:
 6047              	.LBB3755:
 6048              	.LBB3748:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 6049              		.loc 17 992 7 view .LVU1353
 6050 0048 B9F1000F 		cmp	r9, #0
 6051              	.LBE3748:
 6052              	.LBE3755:
 6053              	.LBE3762:
 6054              	.LBE3769:
 6055              	.LBE3776:
 6056              	.LBE3783:
 6057              		.loc 13 464 8 view .LVU1354
 6058 004c 5D44     		add	r5, r5, fp
 6059              	.LVL289:
 6060              	.LBB3784:
 6061              	.LBI3742:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 6062              		.loc 8 465 7 is_stmt 1 view .LVU1355
 6063              	.LBB3777:
 6064              	.LBB3770:
 6065              	.LBI3744:
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 6066              		.loc 8 453 7 view .LVU1356
 6067              	.LBB3763:
 6068              	.LBI3745:
 6069              		.loc 17 1022 5 view .LVU1357
 6070              	.LBB3756:
 6071              	.LBI3746:
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 6072              		.loc 17 988 5 view .LVU1358
 6073              	.LBB3749:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 6074              		.loc 17 992 7 is_stmt 0 view .LVU1359
 6075 004e 13DC     		bgt	.L235
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 375


 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 6076              		.loc 17 994 25 view .LVU1360
 6077 0050 4D44     		add	r5, r5, r9
 6078              	.LVL290:
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 6079              		.loc 17 994 25 view .LVU1361
 6080              	.LBE3749:
 6081              	.LBE3756:
 6082              	.LBE3763:
 6083              	.LBE3770:
 6084              	.LBE3777:
 6085              	.LBE3784:
 6086              	.LBB3785:
 6087              	.LBI3785:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 6088              		.loc 8 350 7 is_stmt 1 view .LVU1362
 6089              	.LBB3786:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 6090              		.loc 8 353 2 is_stmt 0 view .LVU1363
 6091 0052 B8F1000F 		cmp	r8, #0
 6092 0056 04D1     		bne	.L251
 6093              	.LVL291:
 6094              	.L238:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 6095              		.loc 8 353 2 view .LVU1364
 6096              	.LBE3786:
 6097              	.LBE3785:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__position.base(), __old_finish,
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_finish, _M_get_Tp_allocator());
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__old_start, __position.base(),
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_start, _M_get_Tp_allocator());
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__position.base(), __old_finish,
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_finish, _M_get_Tp_allocator());
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __catch(...)
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (!__new_finish)
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::destroy(this->_M_impl,
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before);
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(__new_start, __len);
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __throw_exception_again;
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 376


 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_REINIT;
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_deallocate(__old_start,
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_end_of_storage - __old_start);
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 6098              		.loc 13 504 39 view .LVU1365
 6099 0058 B460     		str	r4, [r6, #8]
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 6100              		.loc 13 503 31 view .LVU1366
 6101 005a C6E900B5 		strd	fp, r5, [r6]
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 6102              		.loc 13 505 5 view .LVU1367
 6103 005e BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6104              	.LVL292:
 6105              	.L251:
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 6106              		.loc 13 501 39 view .LVU1368
 6107 0062 B168     		ldr	r1, [r6, #8]
 6108 0064 A1EB0801 		sub	r1, r1, r8
 6109              	.L240:
 6110              	.LVL293:
 6111              	.LBB3793:
 6112              	.LBB3791:
 6113              	.LBB3787:
 6114              	.LBI3787:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6115              		.loc 16 491 7 is_stmt 1 view .LVU1369
 6116              	.LBB3788:
 6117              	.LBB3789:
 6118              	.LBI3789:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6119              		.loc 15 120 7 view .LVU1370
 6120              	.LBB3790:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6121              		.loc 15 133 19 is_stmt 0 view .LVU1371
 6122 0068 4046     		mov	r0, r8
 6123 006a FFF7FEFF 		bl	_ZdlPvj
 6124              	.LVL294:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6125              		.loc 15 133 19 view .LVU1372
 6126              	.LBE3790:
 6127              	.LBE3789:
 6128              	.LBE3788:
 6129              	.LBE3787:
 6130              	.LBE3791:
 6131              	.LBE3793:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 6132              		.loc 13 504 39 view .LVU1373
 6133 006e B460     		str	r4, [r6, #8]
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 6134              		.loc 13 503 31 view .LVU1374
 6135 0070 C6E900B5 		strd	fp, r5, [r6]
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 377


 6136              		.loc 13 505 5 view .LVU1375
 6137 0074 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6138              	.LVL295:
 6139              	.L235:
 6140              	.LBB3794:
 6141              	.LBB3778:
 6142              	.LBB3771:
 6143              	.LBB3764:
 6144              	.LBB3757:
 6145              	.LBB3750:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 6146              		.loc 17 993 19 view .LVU1376
 6147 0078 2846     		mov	r0, r5
 6148 007a 3946     		mov	r1, r7
 6149 007c 4A46     		mov	r2, r9
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 6150              		.loc 17 994 25 view .LVU1377
 6151 007e 4D44     		add	r5, r5, r9
 6152              	.LVL296:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 6153              		.loc 17 993 19 view .LVU1378
 6154 0080 FFF7FEFF 		bl	memcpy
 6155              	.LVL297:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 6156              		.loc 17 993 19 view .LVU1379
 6157              	.LBE3750:
 6158              	.LBE3757:
 6159              	.LBE3764:
 6160              	.LBE3771:
 6161              	.LBE3778:
 6162              	.LBE3794:
 6163              	.LBB3795:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 6164              		.loc 8 350 7 is_stmt 1 view .LVU1380
 6165              	.LBB3792:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 6166              		.loc 8 353 2 is_stmt 0 view .LVU1381
 6167 0084 B8F1000F 		cmp	r8, #0
 6168 0088 E6D0     		beq	.L238
 6169 008a EAE7     		b	.L251
 6170              	.LVL298:
 6171              	.L250:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 6172              		.loc 8 353 2 view .LVU1382
 6173              	.LBE3792:
 6174              	.LBE3795:
 6175              	.LBB3796:
 6176              	.LBB3779:
 6177              	.LBB3772:
 6178              	.LBB3765:
 6179              	.LBB3758:
 6180              	.LBB3751:
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 6181              		.loc 17 991 34 view .LVU1383
 6182 008c A9EB0709 		sub	r9, r9, r7
 6183              	.LVL299:
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 378


 6184              		.loc 17 991 34 view .LVU1384
 6185              	.LBE3751:
 6186              	.LBE3758:
 6187              	.LBE3765:
 6188              	.LBE3772:
 6189              	.LBE3779:
 6190              	.LBE3796:
 6191              	.LBB3797:
 6192              	.LBB3738:
 6193              	.LBB3735:
 6194              	.LBB3732:
 6195              	.LBB3729:
 6196              	.LBB3726:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 6197              		.loc 17 993 19 view .LVU1385
 6198 0090 2A46     		mov	r2, r5
 6199 0092 4146     		mov	r1, r8
 6200 0094 5846     		mov	r0, fp
 6201              	.LBE3726:
 6202              	.LBE3729:
 6203              	.LBE3732:
 6204              	.LBE3735:
 6205              	.LBE3738:
 6206              	.LBE3797:
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 6207              		.loc 13 464 8 view .LVU1386
 6208 0096 0435     		adds	r5, r5, #4
 6209              	.LVL300:
 6210              	.LBB3798:
 6211              	.LBB3739:
 6212              	.LBB3736:
 6213              	.LBB3733:
 6214              	.LBB3730:
 6215              	.LBB3727:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 6216              		.loc 17 993 19 view .LVU1387
 6217 0098 FFF7FEFF 		bl	memmove
 6218              	.LVL301:
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 6219              		.loc 17 993 19 view .LVU1388
 6220              	.LBE3727:
 6221              	.LBE3730:
 6222              	.LBE3733:
 6223              	.LBE3736:
 6224              	.LBE3739:
 6225              	.LBE3798:
 6226              	.LBB3799:
 6227              	.LBB3780:
 6228              	.LBB3773:
 6229              	.LBB3766:
 6230              	.LBB3759:
 6231              	.LBB3752:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 6232              		.loc 17 992 7 view .LVU1389
 6233 009c B9F1000F 		cmp	r9, #0
 6234              	.LBE3752:
 6235              	.LBE3759:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 379


 6236              	.LBE3766:
 6237              	.LBE3773:
 6238              	.LBE3780:
 6239              	.LBE3799:
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 6240              		.loc 13 464 8 view .LVU1390
 6241 00a0 5D44     		add	r5, r5, fp
 6242              	.LVL302:
 6243              	.LBB3800:
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 6244              		.loc 8 465 7 is_stmt 1 view .LVU1391
 6245              	.LBB3781:
 6246              	.LBB3774:
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 6247              		.loc 8 453 7 view .LVU1392
 6248              	.LBB3767:
 6249              		.loc 17 1022 5 view .LVU1393
 6250              	.LBB3760:
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 6251              		.loc 17 988 5 view .LVU1394
 6252              	.LBB3753:
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 6253              		.loc 17 992 7 is_stmt 0 view .LVU1395
 6254 00a2 E9DC     		bgt	.L235
 6255              	.LBE3753:
 6256              	.LBE3760:
 6257              	.LBE3767:
 6258              	.LBE3774:
 6259              	.LBE3781:
 6260              	.LBE3800:
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 6261              		.loc 13 501 39 view .LVU1396
 6262 00a4 B168     		ldr	r1, [r6, #8]
 6263              	.LBB3801:
 6264              	.LBB3782:
 6265              	.LBB3775:
 6266              	.LBB3768:
 6267              	.LBB3761:
 6268              	.LBB3754:
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 6269              		.loc 17 994 25 view .LVU1397
 6270 00a6 4D44     		add	r5, r5, r9
 6271              	.LVL303:
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 6272              		.loc 17 994 25 view .LVU1398
 6273              	.LBE3754:
 6274              	.LBE3761:
 6275              	.LBE3768:
 6276              	.LBE3775:
 6277              	.LBE3782:
 6278              	.LBE3801:
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 6279              		.loc 13 501 39 view .LVU1399
 6280 00a8 A1EB0801 		sub	r1, r1, r8
 6281              	.LVL304:
 6282              	.LBB3802:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 380


 6283              		.loc 8 350 7 is_stmt 1 view .LVU1400
 6284 00ac DCE7     		b	.L240
 6285              	.LVL305:
 6286              	.L249:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 6287              		.loc 8 350 7 is_stmt 0 view .LVU1401
 6288              	.LBE3802:
 6289              	.LBB3803:
 6290              	.LBB3710:
 6291              	.LBB3705:
 6292              	.LBB3706:
 6293              	.LBB3707:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 6294              		.loc 15 115 41 view .LVU1402
 6295 00ae 8C42     		cmp	r4, r1
 6296 00b0 28BF     		it	cs
 6297 00b2 0C46     		movcs	r4, r1
 6298              	.LVL306:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 6299              		.loc 15 115 41 view .LVU1403
 6300 00b4 A400     		lsls	r4, r4, #2
 6301              	.LVL307:
 6302              	.L232:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 6303              		.loc 15 115 41 view .LVU1404
 6304              	.LBE3707:
 6305              	.LBE3706:
 6306              	.LBI3705:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 6307              		.loc 16 459 7 is_stmt 1 view .LVU1405
 6308              	.LBB3709:
 6309              	.LBI3706:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6310              		.loc 15 103 7 view .LVU1406
 6311              	.LBB3708:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 6312              		.loc 15 115 41 is_stmt 0 view .LVU1407
 6313 00b6 2046     		mov	r0, r4
 6314              	.LVL308:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 6315              		.loc 15 115 41 view .LVU1408
 6316 00b8 FFF7FEFF 		bl	_Znwj
 6317              	.LVL309:
 6318 00bc 8346     		mov	fp, r0
 6319              	.LVL310:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 6320              		.loc 15 115 41 view .LVU1409
 6321              	.LBE3708:
 6322              	.LBE3709:
 6323              	.LBE3705:
 6324              	.LBE3710:
 6325              	.LBE3803:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 6326              		.loc 13 504 53 view .LVU1410
 6327 00be 0444     		add	r4, r4, r0
 6328              	.LBB3804:
 6329              	.LBB3711:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 381


 6330 00c0 B8E7     		b	.L239
 6331              	.LVL311:
 6332              	.L230:
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 6333              		.loc 13 504 53 view .LVU1411
 6334              	.LBE3711:
 6335              	.LBE3804:
 6336              	.LBB3805:
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 6337              		.loc 8 811 7 is_stmt 1 view .LVU1412
 6338              	.LBB3701:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 6339              		.loc 23 978 7 view .LVU1413
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 6340              		.loc 23 978 7 is_stmt 0 view .LVU1414
 6341              	.LBE3701:
 6342              	.LBE3805:
 6343              	.LBB3806:
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 6344              		.loc 23 1202 5 is_stmt 1 view .LVU1415
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 6345              		.loc 23 1202 5 is_stmt 0 view .LVU1416
 6346              	.LBE3806:
 6347              	.LBB3807:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 6348              		.loc 8 343 7 is_stmt 1 view .LVU1417
 6349              	.LBE3807:
 6350              	.LBB3808:
 6351              	.LBB3698:
 6352              		.loc 23 1205 27 is_stmt 0 view .LVU1418
 6353 00c2 024C     		ldr	r4, .L252
 6354 00c4 F7E7     		b	.L232
 6355              	.LVL312:
 6356              	.L248:
 6357              		.loc 23 1205 27 view .LVU1419
 6358              	.LBE3698:
 6359              	.LBE3808:
 6360              	.LBB3809:
 6361              	.LBB3694:
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 6362              		.loc 8 1759 24 view .LVU1420
 6363 00c6 0248     		ldr	r0, .L252+4
 6364              	.LVL313:
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 6365              		.loc 8 1759 24 view .LVU1421
 6366 00c8 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 6367              	.LVL314:
 6368              	.L253:
 6369              		.align	2
 6370              	.L252:
 6371 00cc FCFFFF7F 		.word	2147483644
 6372 00d0 00000000 		.word	.LC9
 6373              	.LBE3694:
 6374              	.LBE3809:
 6375              		.cfi_endproc
 6376              	.LFE5332:
 6378              		.section	.text._ZN14ClassicFilters15setCoefficientsEffff,"axG",%progbits,_ZN14ClassicFilters15setC
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 382


 6379              		.align	1
 6380              		.p2align 2,,3
 6381              		.weak	_ZN14ClassicFilters15setCoefficientsEffff
 6382              		.syntax unified
 6383              		.thumb
 6384              		.thumb_func
 6385              		.fpu fpv5-d16
 6387              	_ZN14ClassicFilters15setCoefficientsEffff:
 6388              	.LVL315:
 6389              	.LFB4756:
  43:../../dsp_fv/classicFilters.h ****     {
 6390              		.loc 19 43 10 is_stmt 1 view -0
 6391              		.cfi_startproc
 6392              		@ args = 0, pretend = 0, frame = 48
 6393              		@ frame_needed = 0, uses_anonymous_args = 0
  46:../../dsp_fv/classicFilters.h ****         vector<float> bCoeff;
 6394              		.loc 19 46 9 view .LVU1423
  43:../../dsp_fv/classicFilters.h ****     {
 6395              		.loc 19 43 10 is_stmt 0 view .LVU1424
 6396 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 6397              		.cfi_def_cfa_offset 28
 6398              		.cfi_offset 4, -28
 6399              		.cfi_offset 5, -24
 6400              		.cfi_offset 6, -20
 6401              		.cfi_offset 7, -16
 6402              		.cfi_offset 8, -12
 6403              		.cfi_offset 9, -8
 6404              		.cfi_offset 14, -4
 6405 0004 2DED0A8B 		vpush.64	{d8, d9, d10, d11, d12}
 6406              		.cfi_def_cfa_offset 68
 6407              		.cfi_offset 80, -68
 6408              		.cfi_offset 81, -64
 6409              		.cfi_offset 82, -60
 6410              		.cfi_offset 83, -56
 6411              		.cfi_offset 84, -52
 6412              		.cfi_offset 85, -48
 6413              		.cfi_offset 86, -44
 6414              		.cfi_offset 87, -40
 6415              		.cfi_offset 88, -36
 6416              		.cfi_offset 89, -32
 6417 0008 8DB0     		sub	sp, sp, #52
 6418              		.cfi_def_cfa_offset 120
 6419              	.LVL316:
 6420              	.LBB4490:
 6421              	.LBI4490:
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 6422              		.loc 8 487 7 is_stmt 1 view .LVU1425
 6423              	.LBB4491:
 6424              	.LBI4491:
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 6425              		.loc 8 288 7 view .LVU1426
 6426              	.LBB4492:
 6427              	.LBI4492:
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 6428              		.loc 8 131 2 view .LVU1427
 6429              	.LBB4493:
 6430              	.LBI4493:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 383


 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6431              		.loc 14 144 7 view .LVU1428
 6432              	.LBB4494:
 6433              	.LBI4494:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6434              		.loc 15 79 7 view .LVU1429
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6435              		.loc 15 79 7 is_stmt 0 view .LVU1430
 6436              	.LBE4494:
 6437              	.LBE4493:
 6438              	.LBB4495:
 6439              	.LBI4495:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 6440              		.loc 8 97 2 is_stmt 1 view .LVU1431
 6441              	.LBE4495:
 6442              	.LBE4492:
 6443              	.LBE4491:
 6444              	.LBE4490:
 6445              	.LBB4506:
 6446              	.LBB4507:
 6447              	.LBB4508:
 6448              	.LBB4509:
 6449              	.LBB4510:
 6450              	.LBB4511:
 6451              	.LBB4512:
 6452              	.LBB4513:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 6453              		.loc 11 247 23 is_stmt 0 view .LVU1432
 6454 000a C84A     		ldr	r2, .L396
 6455              	.LBE4513:
 6456              	.LBE4512:
 6457              	.LBE4511:
 6458              	.LBE4510:
 6459              	.LBE4509:
 6460              	.LBE4508:
 6461              	.LBE4507:
 6462              	.LBE4506:
 6463              	.LBB5541:
 6464              	.LBB4504:
 6465              	.LBB4502:
 6466              	.LBB4500:
 6467              	.LBB4496:
 6468              	.LBB4497:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 6469              		.loc 8 98 47 view .LVU1433
 6470 000c 0023     		movs	r3, #0
 6471              	.LBE4497:
 6472              	.LBE4496:
 6473              	.LBE4500:
 6474              	.LBE4502:
 6475              	.LBE4504:
 6476              	.LBE5541:
  43:../../dsp_fv/classicFilters.h ****     {
 6477              		.loc 19 43 10 view .LVU1434
 6478 000e 0446     		mov	r4, r0
 6479              	.LBB5542:
 6480              	.LBB4543:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 384


 6481              	.LBB4539:
 6482              	.LBB4535:
 6483              	.LBB4520:
 6484              	.LBB4521:
 6485              	.LBB4522:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6486              		.loc 11 157 35 view .LVU1435
 6487 0010 08AD     		add	r5, sp, #32
 6488              	.LBE4522:
 6489              	.LBE4521:
 6490              	.LBE4520:
 6491              	.LBB4529:
 6492              	.LBB4518:
 6493              	.LBB4516:
 6494              	.LBB4514:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 6495              		.loc 11 247 23 view .LVU1436
 6496 0012 111F     		subs	r1, r2, #4
 6497 0014 06A8     		add	r0, sp, #24
 6498              	.LVL317:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 6499              		.loc 11 247 23 view .LVU1437
 6500              	.LBE4514:
 6501              	.LBE4516:
 6502              	.LBE4518:
 6503              	.LBE4529:
 6504              	.LBE4535:
 6505              	.LBE4539:
 6506              	.LBE4543:
 6507              	.LBE5542:
  43:../../dsp_fv/classicFilters.h ****     {
 6508              		.loc 19 43 10 view .LVU1438
 6509 0016 B0EE409A 		vmov.f32	s18, s0
 6510 001a F0EE608A 		vmov.f32	s17, s1
 6511              	.LBB5543:
 6512              	.LBB4544:
 6513              	.LBB4540:
 6514              	.LBB4536:
 6515              	.LBB4530:
 6516              	.LBB4527:
 6517              	.LBB4525:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6518              		.loc 11 157 35 view .LVU1439
 6519 001e 0695     		str	r5, [sp, #24]
 6520              	.LBE4525:
 6521              	.LBE4527:
 6522              	.LBE4530:
 6523              	.LBE4536:
 6524              	.LBE4540:
 6525              	.LBE4544:
 6526              	.LBE5543:
  43:../../dsp_fv/classicFilters.h ****     {
 6527              		.loc 19 43 10 view .LVU1440
 6528 0020 F0EE419A 		vmov.f32	s19, s2
 6529 0024 B0EE618A 		vmov.f32	s16, s3
 6530              	.LBB5544:
 6531              	.LBB4505:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 385


 6532              	.LBB4503:
 6533              	.LBB4501:
 6534              	.LBB4499:
 6535              	.LBB4498:
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 6536              		.loc 8 98 47 view .LVU1441
 6537 0028 CDE90033 		strd	r3, r3, [sp]
 6538              	.LBE4498:
 6539              	.LBE4499:
 6540              	.LBE4501:
 6541              	.LBE4503:
 6542              	.LBE4505:
 6543              	.LBE5544:
 6544              	.LBB5545:
 6545              	.LBB5546:
 6546              	.LBB5547:
 6547              	.LBB5548:
 6548              	.LBB5549:
 6549              	.LBB5550:
 6550 002c CDE90233 		strd	r3, r3, [sp, #8]
 6551 0030 CDE90433 		strd	r3, r3, [sp, #16]
 6552              	.LBE5550:
 6553              	.LBE5549:
 6554              	.LBE5548:
 6555              	.LBE5547:
 6556              	.LBE5546:
 6557              	.LBE5545:
  49:../../dsp_fv/classicFilters.h ****         {
 6558              		.loc 19 49 9 is_stmt 1 view .LVU1442
 6559              	.LVL318:
 6560              	.LBB5551:
 6561              	.LBB4545:
 6562              	.LBI4545:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6563              		.loc 14 144 7 view .LVU1443
 6564              	.LBB4546:
 6565              	.LBI4546:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6566              		.loc 15 79 7 view .LVU1444
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6567              		.loc 15 79 7 is_stmt 0 view .LVU1445
 6568              	.LBE4546:
 6569              	.LBE4545:
 6570              	.LBB4547:
 6571              	.LBI4507:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 6572              		.loc 11 525 7 is_stmt 1 view .LVU1446
 6573              	.LBB4541:
 6574              	.LBB4537:
 6575              	.LBB4531:
 6576              	.LBI4531:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6577              		.loc 11 190 7 view .LVU1447
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6578              		.loc 11 190 7 is_stmt 0 view .LVU1448
 6579              	.LBE4531:
 6580              	.LBB4532:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 386


 6581              	.LBI4520:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 6582              		.loc 11 156 2 is_stmt 1 view .LVU1449
 6583              	.LBB4528:
 6584              	.LBB4526:
 6585              	.LBB4523:
 6586              	.LBI4523:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6587              		.loc 14 147 7 view .LVU1450
 6588              	.LBB4524:
 6589              	.LBI4524:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6590              		.loc 15 82 7 view .LVU1451
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6591              		.loc 15 82 7 is_stmt 0 view .LVU1452
 6592              	.LBE4524:
 6593              	.LBE4523:
 6594              	.LBE4526:
 6595              	.LBE4528:
 6596              	.LBE4532:
 6597              	.LBB4533:
 6598              	.LBI4533:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 6599              		.loc 12 351 7 is_stmt 1 view .LVU1453
 6600              	.LBE4533:
 6601              	.LBE4537:
 6602              	.LBE4541:
 6603              	.LBE4547:
 6604              	.LBE5551:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 6605              		.loc 12 357 2 view .LVU1454
 6606              	.LBB5552:
 6607              	.LBB4548:
 6608              	.LBB4542:
 6609              	.LBB4538:
 6610              	.LBB4534:
 6611              	.LBI4510:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 6612              		.loc 11 263 9 view .LVU1455
 6613              	.LBB4519:
 6614              	.LBB4517:
 6615              	.LBI4512:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 6616              		.loc 11 243 9 view .LVU1456
 6617              	.LBB4515:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 6618              		.loc 11 247 23 is_stmt 0 view .LVU1457
 6619 0034 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 6620              	.LVL319:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 6621              		.loc 11 247 23 view .LVU1458
 6622              	.LBE4515:
 6623              	.LBE4517:
 6624              	.LBE4519:
 6625              	.LBE4534:
 6626              	.LBE4538:
 6627              	.LBE4542:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 387


 6628              	.LBE4548:
 6629              	.LBB4549:
 6630              	.LBI4549:
6171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
 6631              		.loc 11 6171 5 is_stmt 1 view .LVU1459
 6632              	.LBB4550:
 6633              	.LBB4551:
 6634              	.LBI4551:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 6635              		.loc 11 901 7 view .LVU1460
 6636              	.LBB4552:
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6637              		.loc 11 902 16 is_stmt 0 view .LVU1461
 6638 0038 626E     		ldr	r2, [r4, #100]
 6639              	.LVL320:
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6640              		.loc 11 902 16 view .LVU1462
 6641              	.LBE4552:
 6642              	.LBE4551:
 6643              	.LBB4553:
 6644              	.LBI4553:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 6645              		.loc 11 901 7 is_stmt 1 view .LVU1463
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 6646              		.loc 11 901 7 is_stmt 0 view .LVU1464
 6647              	.LBE4553:
 6648              	.LBB4554:
 6649              	.LBB4555:
 6650              	.LBB4556:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6651              		.loc 11 187 28 view .LVU1465
 6652 003a DDE90663 		ldrd	r6, r3, [sp, #24]
 6653              	.LBE4556:
 6654              	.LBE4555:
 6655              	.LBE4554:
 6656              		.loc 11 6174 8 view .LVU1466
 6657 003e 9A42     		cmp	r2, r3
 6658 0040 00F0AE80 		beq	.L393
 6659              	.L257:
 6660              	.LVL321:
 6661              		.loc 11 6174 8 view .LVU1467
 6662              	.LBE4550:
 6663              	.LBE4549:
 6664              	.LBB4564:
 6665              	.LBI4564:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 6666              		.loc 11 657 7 is_stmt 1 view .LVU1468
 6667              	.LBB4565:
 6668              	.LBB4566:
 6669              	.LBI4566:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6670              		.loc 11 229 7 view .LVU1469
 6671              	.LBB4567:
 6672              	.LBB4568:
 6673              	.LBI4568:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 6674              		.loc 11 221 7 view .LVU1470
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 388


 6675              	.LBB4569:
 6676              	.LBI4569:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6677              		.loc 11 200 7 view .LVU1471
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6678              		.loc 11 200 7 is_stmt 0 view .LVU1472
 6679              	.LBE4569:
 6680              	.LBE4568:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6681              		.loc 11 231 2 view .LVU1473
 6682 0044 AE42     		cmp	r6, r5
 6683 0046 04D0     		beq	.L259
 6684              	.LVL322:
 6685              	.LBB4571:
 6686              	.LBI4571:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6687              		.loc 11 236 7 is_stmt 1 view .LVU1474
 6688              	.LBB4572:
 6689              	.LBB4573:
 6690              	.LBI4573:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6691              		.loc 16 491 7 view .LVU1475
 6692              	.LBB4574:
 6693              	.LBI4574:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6694              		.loc 15 120 7 view .LVU1476
 6695              	.LBE4574:
 6696              	.LBE4573:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6697              		.loc 11 237 34 is_stmt 0 view .LVU1477
 6698 0048 0899     		ldr	r1, [sp, #32]
 6699              	.LBB4580:
 6700              	.LBB4577:
 6701              	.LBB4575:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6702              		.loc 15 133 19 view .LVU1478
 6703 004a 3046     		mov	r0, r6
 6704 004c 0131     		adds	r1, r1, #1
 6705              	.LVL323:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6706              		.loc 15 133 19 view .LVU1479
 6707 004e FFF7FEFF 		bl	_ZdlPvj
 6708              	.LVL324:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6709              		.loc 15 133 19 view .LVU1480
 6710              	.LBE4575:
 6711              	.LBE4577:
 6712              	.LBE4580:
 6713              	.LBE4572:
 6714              	.LBE4571:
 6715              	.LBE4567:
 6716              	.LBE4566:
 6717              	.LBB4587:
 6718              	.LBI4587:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6719              		.loc 11 150 14 is_stmt 1 view .LVU1481
 6720              	.LBB4588:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 389


 6721              	.LBI4588:
 6722              		.loc 14 162 7 view .LVU1482
 6723              	.LBB4589:
 6724              	.LBI4589:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6725              		.loc 15 89 7 view .LVU1483
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6726              		.loc 15 89 7 is_stmt 0 view .LVU1484
 6727              	.LBE4589:
 6728              	.LBE4588:
 6729              	.LBE4587:
 6730              	.LBE4565:
 6731              	.LBE4564:
 6732              	.LBB4595:
 6733              	.LBI4595:
 6734              		.loc 14 162 7 is_stmt 1 view .LVU1485
 6735              	.LBB4596:
 6736              	.LBI4596:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6737              		.loc 15 89 7 view .LVU1486
 6738              	.L259:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6739              		.loc 15 89 7 is_stmt 0 view .LVU1487
 6740              	.LBE4596:
 6741              	.LBE4595:
 6742              	.LBE5552:
  62:../../dsp_fv/classicFilters.h ****         {
 6743              		.loc 19 62 14 is_stmt 1 view .LVU1488
 6744              	.LBB5553:
 6745              	.LBB4598:
 6746              	.LBB4599:
 6747              	.LBI4599:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6748              		.loc 14 144 7 view .LVU1489
 6749              	.LBB4600:
 6750              	.LBI4600:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6751              		.loc 15 79 7 view .LVU1490
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6752              		.loc 15 79 7 is_stmt 0 view .LVU1491
 6753              	.LBE4600:
 6754              	.LBE4599:
 6755              	.LBB4601:
 6756              	.LBI4601:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 6757              		.loc 11 525 7 is_stmt 1 view .LVU1492
 6758              	.LBB4602:
 6759              	.LBB4603:
 6760              	.LBB4604:
 6761              	.LBI4604:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6762              		.loc 11 190 7 view .LVU1493
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6763              		.loc 11 190 7 is_stmt 0 view .LVU1494
 6764              	.LBE4604:
 6765              	.LBB4605:
 6766              	.LBI4605:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 390


 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 6767              		.loc 11 156 2 is_stmt 1 view .LVU1495
 6768              	.LBB4606:
 6769              	.LBB4607:
 6770              	.LBB4608:
 6771              	.LBI4608:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6772              		.loc 14 147 7 view .LVU1496
 6773              	.LBB4609:
 6774              	.LBI4609:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6775              		.loc 15 82 7 view .LVU1497
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6776              		.loc 15 82 7 is_stmt 0 view .LVU1498
 6777              	.LBE4609:
 6778              	.LBE4608:
 6779              	.LBE4607:
 6780              	.LBE4606:
 6781              	.LBE4605:
 6782              	.LBB4612:
 6783              	.LBB4613:
 6784              	.LBB4614:
 6785              	.LBB4615:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 6786              		.loc 11 247 23 view .LVU1499
 6787 0052 B74A     		ldr	r2, .L396+4
 6788 0054 06A8     		add	r0, sp, #24
 6789              	.LVL325:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 6790              		.loc 11 247 23 view .LVU1500
 6791              	.LBE4615:
 6792              	.LBE4614:
 6793              	.LBE4613:
 6794              	.LBE4612:
 6795              	.LBB4619:
 6796              	.LBB4611:
 6797              	.LBB4610:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6798              		.loc 11 157 35 view .LVU1501
 6799 0056 0695     		str	r5, [sp, #24]
 6800              	.LVL326:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6801              		.loc 11 157 35 view .LVU1502
 6802              	.LBE4610:
 6803              	.LBE4611:
 6804              	.LBE4619:
 6805              	.LBB4620:
 6806              	.LBI4620:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 6807              		.loc 12 351 7 is_stmt 1 view .LVU1503
 6808              	.LBE4620:
 6809              	.LBE4603:
 6810              	.LBE4602:
 6811              	.LBE4601:
 6812              	.LBE4598:
 6813              	.LBE5553:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 391


 6814              		.loc 12 357 2 view .LVU1504
 6815              	.LBB5554:
 6816              	.LBB5377:
 6817              	.LBB4624:
 6818              	.LBB4623:
 6819              	.LBB4622:
 6820              	.LBB4621:
 6821              	.LBI4612:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 6822              		.loc 11 263 9 view .LVU1505
 6823              	.LBB4618:
 6824              	.LBB4617:
 6825              	.LBI4614:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 6826              		.loc 11 243 9 view .LVU1506
 6827              	.LBB4616:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 6828              		.loc 11 247 23 is_stmt 0 view .LVU1507
 6829 0058 111F     		subs	r1, r2, #4
 6830 005a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 6831              	.LVL327:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 6832              		.loc 11 247 23 view .LVU1508
 6833              	.LBE4616:
 6834              	.LBE4617:
 6835              	.LBE4618:
 6836              	.LBE4621:
 6837              	.LBE4622:
 6838              	.LBE4623:
 6839              	.LBE4624:
 6840              	.LBB4625:
 6841              	.LBI4625:
6171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
 6842              		.loc 11 6171 5 is_stmt 1 view .LVU1509
 6843              	.LBB4626:
 6844              	.LBB4627:
 6845              	.LBI4627:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 6846              		.loc 11 901 7 view .LVU1510
 6847              	.LBB4628:
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6848              		.loc 11 902 16 is_stmt 0 view .LVU1511
 6849 005e 626E     		ldr	r2, [r4, #100]
 6850              	.LVL328:
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6851              		.loc 11 902 16 view .LVU1512
 6852              	.LBE4628:
 6853              	.LBE4627:
 6854              	.LBB4629:
 6855              	.LBI4629:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 6856              		.loc 11 901 7 is_stmt 1 view .LVU1513
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 6857              		.loc 11 901 7 is_stmt 0 view .LVU1514
 6858              	.LBE4629:
 6859              	.LBB4630:
 6860              	.LBB4631:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 392


 6861              	.LBB4632:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6862              		.loc 11 187 28 view .LVU1515
 6863 0060 DDE90663 		ldrd	r6, r3, [sp, #24]
 6864              	.LBE4632:
 6865              	.LBE4631:
 6866              	.LBE4630:
 6867              		.loc 11 6174 8 view .LVU1516
 6868 0064 9A42     		cmp	r2, r3
 6869 0066 00F06D81 		beq	.L394
 6870              	.L275:
 6871              	.LVL329:
 6872              		.loc 11 6174 8 view .LVU1517
 6873              	.LBE4626:
 6874              	.LBE4625:
 6875              	.LBB4640:
 6876              	.LBI4640:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 6877              		.loc 11 657 7 is_stmt 1 view .LVU1518
 6878              	.LBB4641:
 6879              	.LBB4642:
 6880              	.LBI4642:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6881              		.loc 11 229 7 view .LVU1519
 6882              	.LBB4643:
 6883              	.LBB4644:
 6884              	.LBI4644:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 6885              		.loc 11 221 7 view .LVU1520
 6886              	.LBB4645:
 6887              	.LBI4645:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6888              		.loc 11 200 7 view .LVU1521
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6889              		.loc 11 200 7 is_stmt 0 view .LVU1522
 6890              	.LBE4645:
 6891              	.LBE4644:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6892              		.loc 11 231 2 view .LVU1523
 6893 006a AE42     		cmp	r6, r5
 6894 006c 04D0     		beq	.L277
 6895              	.LVL330:
 6896              	.LBB4647:
 6897              	.LBI4647:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6898              		.loc 11 236 7 is_stmt 1 view .LVU1524
 6899              	.LBB4648:
 6900              	.LBB4649:
 6901              	.LBI4649:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6902              		.loc 16 491 7 view .LVU1525
 6903              	.LBB4650:
 6904              	.LBI4650:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6905              		.loc 15 120 7 view .LVU1526
 6906              	.LBE4650:
 6907              	.LBE4649:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 393


 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6908              		.loc 11 237 34 is_stmt 0 view .LVU1527
 6909 006e 0899     		ldr	r1, [sp, #32]
 6910              	.LBB4656:
 6911              	.LBB4653:
 6912              	.LBB4651:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6913              		.loc 15 133 19 view .LVU1528
 6914 0070 3046     		mov	r0, r6
 6915 0072 0131     		adds	r1, r1, #1
 6916              	.LVL331:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6917              		.loc 15 133 19 view .LVU1529
 6918 0074 FFF7FEFF 		bl	_ZdlPvj
 6919              	.LVL332:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6920              		.loc 15 133 19 view .LVU1530
 6921              	.LBE4651:
 6922              	.LBE4653:
 6923              	.LBE4656:
 6924              	.LBE4648:
 6925              	.LBE4647:
 6926              	.LBE4643:
 6927              	.LBE4642:
 6928              	.LBB4663:
 6929              	.LBI4663:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6930              		.loc 11 150 14 is_stmt 1 view .LVU1531
 6931              	.LBB4664:
 6932              	.LBI4664:
 6933              		.loc 14 162 7 view .LVU1532
 6934              	.LBB4665:
 6935              	.LBI4665:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6936              		.loc 15 89 7 view .LVU1533
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6937              		.loc 15 89 7 is_stmt 0 view .LVU1534
 6938              	.LBE4665:
 6939              	.LBE4664:
 6940              	.LBE4663:
 6941              	.LBE4641:
 6942              	.LBE4640:
 6943              	.LBB4671:
 6944              	.LBI4671:
 6945              		.loc 14 162 7 is_stmt 1 view .LVU1535
 6946              	.LBB4672:
 6947              	.LBI4672:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6948              		.loc 15 89 7 view .LVU1536
 6949              	.L277:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6950              		.loc 15 89 7 is_stmt 0 view .LVU1537
 6951              	.LBE4672:
 6952              	.LBE4671:
 6953              	.LBE5377:
 6954              	.LBE5554:
  75:../../dsp_fv/classicFilters.h ****         {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 394


 6955              		.loc 19 75 14 is_stmt 1 view .LVU1538
 6956              	.LBB5555:
 6957              	.LBB5378:
 6958              	.LBB4674:
 6959              	.LBB4675:
 6960              	.LBI4675:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6961              		.loc 14 144 7 view .LVU1539
 6962              	.LBB4676:
 6963              	.LBI4676:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6964              		.loc 15 79 7 view .LVU1540
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6965              		.loc 15 79 7 is_stmt 0 view .LVU1541
 6966              	.LBE4676:
 6967              	.LBE4675:
 6968              	.LBB4677:
 6969              	.LBI4677:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 6970              		.loc 11 525 7 is_stmt 1 view .LVU1542
 6971              	.LBB4678:
 6972              	.LBB4679:
 6973              	.LBB4680:
 6974              	.LBI4680:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6975              		.loc 11 190 7 view .LVU1543
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6976              		.loc 11 190 7 is_stmt 0 view .LVU1544
 6977              	.LBE4680:
 6978              	.LBB4681:
 6979              	.LBI4681:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 6980              		.loc 11 156 2 is_stmt 1 view .LVU1545
 6981              	.LBB4682:
 6982              	.LBB4683:
 6983              	.LBB4684:
 6984              	.LBI4684:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6985              		.loc 14 147 7 view .LVU1546
 6986              	.LBB4685:
 6987              	.LBI4685:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6988              		.loc 15 82 7 view .LVU1547
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6989              		.loc 15 82 7 is_stmt 0 view .LVU1548
 6990              	.LBE4685:
 6991              	.LBE4684:
 6992              	.LBE4683:
 6993              	.LBE4682:
 6994              	.LBE4681:
 6995              	.LBB4688:
 6996              	.LBB4689:
 6997              	.LBB4690:
 6998              	.LBB4691:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 6999              		.loc 11 247 23 view .LVU1549
 7000 0078 AE4A     		ldr	r2, .L396+8
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 395


 7001 007a 06A8     		add	r0, sp, #24
 7002              	.LVL333:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 7003              		.loc 11 247 23 view .LVU1550
 7004              	.LBE4691:
 7005              	.LBE4690:
 7006              	.LBE4689:
 7007              	.LBE4688:
 7008              	.LBB4695:
 7009              	.LBB4687:
 7010              	.LBB4686:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7011              		.loc 11 157 35 view .LVU1551
 7012 007c 0695     		str	r5, [sp, #24]
 7013              	.LVL334:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7014              		.loc 11 157 35 view .LVU1552
 7015              	.LBE4686:
 7016              	.LBE4687:
 7017              	.LBE4695:
 7018              	.LBB4696:
 7019              	.LBI4696:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 7020              		.loc 12 351 7 is_stmt 1 view .LVU1553
 7021              	.LBE4696:
 7022              	.LBE4679:
 7023              	.LBE4678:
 7024              	.LBE4677:
 7025              	.LBE4674:
 7026              	.LBE5378:
 7027              	.LBE5555:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 7028              		.loc 12 357 2 view .LVU1554
 7029              	.LBB5556:
 7030              	.LBB5379:
 7031              	.LBB5233:
 7032              	.LBB4700:
 7033              	.LBB4699:
 7034              	.LBB4698:
 7035              	.LBB4697:
 7036              	.LBI4688:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 7037              		.loc 11 263 9 view .LVU1555
 7038              	.LBB4694:
 7039              	.LBB4693:
 7040              	.LBI4690:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 7041              		.loc 11 243 9 view .LVU1556
 7042              	.LBB4692:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 7043              		.loc 11 247 23 is_stmt 0 view .LVU1557
 7044 007e 111F     		subs	r1, r2, #4
 7045 0080 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 7046              	.LVL335:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 7047              		.loc 11 247 23 view .LVU1558
 7048              	.LBE4692:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 396


 7049              	.LBE4693:
 7050              	.LBE4694:
 7051              	.LBE4697:
 7052              	.LBE4698:
 7053              	.LBE4699:
 7054              	.LBE4700:
 7055              	.LBB4701:
 7056              	.LBI4701:
6171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
 7057              		.loc 11 6171 5 is_stmt 1 view .LVU1559
 7058              	.LBB4702:
 7059              	.LBB4703:
 7060              	.LBI4703:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 7061              		.loc 11 901 7 view .LVU1560
 7062              	.LBB4704:
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7063              		.loc 11 902 16 is_stmt 0 view .LVU1561
 7064 0084 626E     		ldr	r2, [r4, #100]
 7065              	.LVL336:
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7066              		.loc 11 902 16 view .LVU1562
 7067              	.LBE4704:
 7068              	.LBE4703:
 7069              	.LBB4705:
 7070              	.LBI4705:
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 7071              		.loc 11 901 7 is_stmt 1 view .LVU1563
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 7072              		.loc 11 901 7 is_stmt 0 view .LVU1564
 7073              	.LBE4705:
 7074              	.LBB4706:
 7075              	.LBB4707:
 7076              	.LBB4708:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7077              		.loc 11 187 28 view .LVU1565
 7078 0086 DDE90663 		ldrd	r6, r3, [sp, #24]
 7079              	.LBE4708:
 7080              	.LBE4707:
 7081              	.LBE4706:
 7082              		.loc 11 6174 8 view .LVU1566
 7083 008a 9A42     		cmp	r2, r3
 7084 008c 00F0C281 		beq	.L395
 7085              	.L292:
 7086              	.LVL337:
 7087              		.loc 11 6174 8 view .LVU1567
 7088              	.LBE4702:
 7089              	.LBE4701:
 7090              	.LBB4716:
 7091              	.LBI4716:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 7092              		.loc 11 657 7 is_stmt 1 view .LVU1568
 7093              	.LBB4717:
 7094              	.LBB4718:
 7095              	.LBI4718:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7096              		.loc 11 229 7 view .LVU1569
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 397


 7097              	.LBB4719:
 7098              	.LBB4720:
 7099              	.LBI4720:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 7100              		.loc 11 221 7 view .LVU1570
 7101              	.LBB4721:
 7102              	.LBI4721:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7103              		.loc 11 200 7 view .LVU1571
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7104              		.loc 11 200 7 is_stmt 0 view .LVU1572
 7105              	.LBE4721:
 7106              	.LBE4720:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7107              		.loc 11 231 2 view .LVU1573
 7108 0090 AE42     		cmp	r6, r5
 7109 0092 04D0     		beq	.L293
 7110              	.LVL338:
 7111              	.LBB4723:
 7112              	.LBI4723:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7113              		.loc 11 236 7 is_stmt 1 view .LVU1574
 7114              	.LBB4724:
 7115              	.LBB4725:
 7116              	.LBI4725:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7117              		.loc 16 491 7 view .LVU1575
 7118              	.LBB4726:
 7119              	.LBI4726:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7120              		.loc 15 120 7 view .LVU1576
 7121              	.LBE4726:
 7122              	.LBE4725:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7123              		.loc 11 237 34 is_stmt 0 view .LVU1577
 7124 0094 0899     		ldr	r1, [sp, #32]
 7125              	.LBB4732:
 7126              	.LBB4729:
 7127              	.LBB4727:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7128              		.loc 15 133 19 view .LVU1578
 7129 0096 3046     		mov	r0, r6
 7130 0098 0131     		adds	r1, r1, #1
 7131              	.LVL339:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7132              		.loc 15 133 19 view .LVU1579
 7133 009a FFF7FEFF 		bl	_ZdlPvj
 7134              	.LVL340:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7135              		.loc 15 133 19 view .LVU1580
 7136              	.LBE4727:
 7137              	.LBE4729:
 7138              	.LBE4732:
 7139              	.LBE4724:
 7140              	.LBE4723:
 7141              	.LBE4719:
 7142              	.LBE4718:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 398


 7143              	.LBB4739:
 7144              	.LBI4739:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7145              		.loc 11 150 14 is_stmt 1 view .LVU1581
 7146              	.LBB4740:
 7147              	.LBI4740:
 7148              		.loc 14 162 7 view .LVU1582
 7149              	.LBB4741:
 7150              	.LBI4741:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7151              		.loc 15 89 7 view .LVU1583
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7152              		.loc 15 89 7 is_stmt 0 view .LVU1584
 7153              	.LBE4741:
 7154              	.LBE4740:
 7155              	.LBE4739:
 7156              	.LBE4717:
 7157              	.LBE4716:
 7158              	.LBB4747:
 7159              	.LBI4747:
 7160              		.loc 14 162 7 is_stmt 1 view .LVU1585
 7161              	.LBB4748:
 7162              	.LBI4748:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7163              		.loc 15 89 7 view .LVU1586
 7164              	.L293:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7165              		.loc 15 89 7 is_stmt 0 view .LVU1587
 7166              	.LBE4748:
 7167              	.LBE4747:
 7168              	.LBE5233:
 7169              	.LBE5379:
  49:../../dsp_fv/classicFilters.h ****         {
 7170              		.loc 19 49 13 view .LVU1588
 7171 009e 04F16006 		add	r6, r4, #96
 7172              	.LBE5556:
  91:../../dsp_fv/classicFilters.h ****         {
 7173              		.loc 19 91 14 is_stmt 1 view .LVU1589
 7174              	.LVL341:
 7175              	.LBB5557:
 7176              	.LBB5380:
 7177              	.LBB5234:
 7178              	.LBB4750:
 7179              	.LBB4751:
 7180              	.LBI4751:
6175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 						    __lhs.size())); }
6176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
6177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
6178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Test equivalence of string and C string.
6179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __lhs  String.
6180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @param __rhs  C string.
6181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
6183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     inline bool
6185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 7181              		.loc 11 6185 5 view .LVU1590
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 399


 7182              	.LBB4752:
6186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
6187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
 7183              		.loc 11 6187 27 is_stmt 0 view .LVU1591
 7184 00a2 A549     		ldr	r1, .L396+12
 7185 00a4 3046     		mov	r0, r6
 7186 00a6 FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
 7187              	.LVL342:
 7188              		.loc 11 6187 27 view .LVU1592
 7189              	.LBE4752:
 7190              	.LBE4751:
  91:../../dsp_fv/classicFilters.h ****         {
 7191              		.loc 19 91 14 view .LVU1593
 7192 00aa 0028     		cmp	r0, #0
 7193 00ac 40F05C82 		bne	.L306
 7194              	.LBB4753:
  93:../../dsp_fv/classicFilters.h ****             auto d = 1 / qualityFactor;
 7195              		.loc 19 93 13 is_stmt 1 view .LVU1594
  93:../../dsp_fv/classicFilters.h ****             auto d = 1 / qualityFactor;
 7196              		.loc 19 93 34 is_stmt 0 view .LVU1595
 7197 00b0 9FEDA30A 		vldr.32	s0, .L396+20
  94:../../dsp_fv/classicFilters.h ****             auto beta = 0.5 * (1 - d / 2 * std::sin(theta_c)) / (1 + d / 2 * std::sin(theta_c));
 7198              		.loc 19 94 18 view .LVU1596
 7199 00b4 B7EE00AA 		vmov.f32	s20, #1.0e+0
  95:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 7200              		.loc 19 95 38 view .LVU1597
 7201 00b8 B6EE007A 		vmov.f32	s14, #5.0e-1
  93:../../dsp_fv/classicFilters.h ****             auto d = 1 / qualityFactor;
 7202              		.loc 19 93 34 view .LVU1598
 7203 00bc 29EE000A 		vmul.f32	s0, s18, s0
  94:../../dsp_fv/classicFilters.h ****             auto beta = 0.5 * (1 - d / 2 * std::sin(theta_c)) / (1 + d / 2 * std::sin(theta_c));
 7204              		.loc 19 94 18 view .LVU1599
 7205 00c0 CAEE287A 		vdiv.f32	s15, s20, s17
  93:../../dsp_fv/classicFilters.h ****             auto d = 1 / qualityFactor;
 7206              		.loc 19 93 18 view .LVU1600
 7207 00c4 80EE299A 		vdiv.f32	s18, s0, s19
 7208              	.LVL343:
  94:../../dsp_fv/classicFilters.h ****             auto beta = 0.5 * (1 - d / 2 * std::sin(theta_c)) / (1 + d / 2 * std::sin(theta_c));
 7209              		.loc 19 94 13 is_stmt 1 view .LVU1601
  95:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 7210              		.loc 19 95 13 view .LVU1602
  95:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 7211              		.loc 19 95 29 is_stmt 0 view .LVU1603
 7212 00c8 B6EE00BB 		vmov.f64	d11, #5.0e-1
  95:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 7213              		.loc 19 95 38 view .LVU1604
 7214 00cc 67EE878A 		vmul.f32	s17, s15, s14
 7215              	.LVL344:
 7216              	.LBB4754:
 7217              	.LBI4754:
 7218              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // software; you can redistribute it and/or modify it under the
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 400


   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** /** @file include/cmath
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  as macros in C).
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  */
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #pragma GCC system_header
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include_next <math.h>
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef div
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acos
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asin
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan2
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ceil
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cos
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cosh
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fabs
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef floor
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 401


  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmod
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef frexp
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ldexp
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log10
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef modf
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef pow
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sin
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sinh
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sqrt
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tan
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tanh
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** extern "C++"
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acos;
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(float __x)
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(long double __x)
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asin;
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(float __x)
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(long double __x)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 402


 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(float __x)
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(long double __x)
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan2;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ceil;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(float __x)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(long double __x)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ceil(_Tp __x)
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 403


 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cos;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(float __x)
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(long double __x)
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cosh;
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(float __x)
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(long double __x)
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp;
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(float __x)
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(long double __x)
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     exp(_Tp __x)
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 404


 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fabs;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(float __x)
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsf(__x); }
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(long double __x)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsl(__x); }
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fabs(_Tp __x)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_fabs(__x); }
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::floor;
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(float __x)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorf(__x); }
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(long double __x)
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorl(__x); }
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     floor(_Tp __x)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_floor(__x); }
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmod;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(float __x, float __y)
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(long double __x, long double __y)
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fmod(_Tp __x, _Up __y)
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 405


 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmod(__type(__x), __type(__y));
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::frexp;
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(float __x, int* __exp)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(long double __x, int* __exp)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     frexp(_Tp __x, int* __exp)
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_frexp(__x, __exp); }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ldexp;
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(float __x, int __exp)
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(long double __x, int __exp)
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ldexp(_Tp __x, int __exp)
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log;
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log(float __x)
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logf(__x); }
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log(long double __x)
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logl(__x); }
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 406


 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log(_Tp __x)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log(__x); }
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log10;
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(float __x)
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10f(__x); }
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(long double __x)
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10l(__x); }
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log10(_Tp __x)
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log10(__x); }
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::modf;
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(float __x, float* __iptr)
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(long double __x, long double* __iptr)
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::pow;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, float __y)
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powf(__x, __y); }
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, long double __y)
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powl(__x, __y); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus < 201103L
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline double
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(double __x, int __i)
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powi(__x, __i); }
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, int __n)
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powif(__x, __n); }
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 407


 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, int __n)
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powil(__x, __n); }
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     pow(_Tp __x, _Up __y)
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return pow(__type(__x), __type(__y));
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sin;
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(float __x)
 7219              		.loc 25 425 3 is_stmt 1 view .LVU1605
 7220              	.LBB4755:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 7221              		.loc 25 426 5 view .LVU1606
 7222              		.loc 25 426 26 is_stmt 0 view .LVU1607
 7223 00d0 B0EE490A 		vmov.f32	s0, s18
 7224 00d4 FFF7FEFF 		bl	sinf
 7225              	.LVL345:
 7226              	.LBE4755:
 7227              	.LBE4754:
  95:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 7228              		.loc 19 95 34 view .LVU1608
 7229 00d8 B0EE4A6A 		vmov.f32	s12, s20
 7230              	.LBB4757:
 7231              	.LBB4756:
 7232              		.loc 25 426 26 view .LVU1609
 7233 00dc F0EE407A 		vmov.f32	s15, s0
 7234              	.LBE4756:
 7235              	.LBE4757:
 7236              	.LBB4758:
 7237              	.LBB4759:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 7238              		.loc 25 185 26 view .LVU1610
 7239 00e0 B0EE490A 		vmov.f32	s0, s18
 7240              	.LVL346:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 7241              		.loc 25 185 26 view .LVU1611
 7242              	.LBE4759:
 7243              	.LBE4758:
  95:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 7244              		.loc 19 95 34 view .LVU1612
 7245 00e4 A8EEE76A 		vfms.f32	s12, s17, s15
 7246              	.LVL347:
  95:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 7247              		.loc 19 95 34 view .LVU1613
 7248              	.LBE4753:
 7249              	.LBE4750:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 408


 7250              	.LBE5234:
 7251              	.LBE5380:
 7252              	.LBE5557:
 7253              		.loc 25 426 5 is_stmt 1 view .LVU1614
 7254              	.LBB5558:
 7255              	.LBB5381:
 7256              	.LBB5235:
 7257              	.LBB5073:
 7258              	.LBB4888:
  95:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 7259              		.loc 19 95 68 is_stmt 0 view .LVU1615
 7260 00e8 A8EEA7AA 		vfma.f32	s20, s17, s15
  95:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 7261              		.loc 19 95 34 view .LVU1616
 7262 00ec B7EEC66A 		vcvt.f64.f32	d6, s12
  95:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 7263              		.loc 19 95 68 view .LVU1617
 7264 00f0 B7EECAAA 		vcvt.f64.f32	d10, s20
  95:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 7265              		.loc 19 95 29 view .LVU1618
 7266 00f4 26EE0B6B 		vmul.f64	d6, d6, d11
  95:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 7267              		.loc 19 95 95 view .LVU1619
 7268 00f8 86EE0ACB 		vdiv.f64	d12, d6, d10
 7269              	.LVL348:
  96:../../dsp_fv/classicFilters.h **** 
 7270              		.loc 19 96 13 is_stmt 1 view .LVU1620
 7271              	.LBB4761:
 7272              	.LBI4758:
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 7273              		.loc 25 184 3 view .LVU1621
 7274              	.LBB4760:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 7275              		.loc 25 185 5 view .LVU1622
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 7276              		.loc 25 185 26 is_stmt 0 view .LVU1623
 7277 00fc FFF7FEFF 		bl	cosf
 7278              	.LVL349:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 7279              		.loc 25 185 26 view .LVU1624
 7280              	.LBE4760:
 7281              	.LBE4761:
  96:../../dsp_fv/classicFilters.h **** 
 7282              		.loc 19 96 34 view .LVU1625
 7283 0100 B7EEC00A 		vcvt.f64.f32	d0, s0
 7284              	.LBB4762:
 7285              	.LBB4763:
 7286              	.LBB4764:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7287              		.loc 13 112 47 view .LVU1626
 7288 0104 DDE90131 		ldrd	r3, r1, [sp, #4]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7289              		.loc 13 112 2 view .LVU1627
 7290 0108 8B42     		cmp	r3, r1
 7291              	.LBE4764:
 7292              	.LBE4763:
 7293              	.LBE4762:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 409


  96:../../dsp_fv/classicFilters.h **** 
 7294              		.loc 19 96 51 view .LVU1628
 7295 010a 3CEE0BAB 		vadd.f64	d10, d12, d11
  96:../../dsp_fv/classicFilters.h **** 
 7296              		.loc 19 96 57 view .LVU1629
 7297 010e 20EE0A9B 		vmul.f64	d9, d0, d10
 7298              	.LVL350:
  98:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(-(0.5 + beta + gamma));
 7299              		.loc 19 98 13 is_stmt 1 view .LVU1630
  98:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(-(0.5 + beta + gamma));
 7300              		.loc 19 98 42 is_stmt 0 view .LVU1631
 7301 0112 3AEE09AB 		vadd.f64	d10, d10, d9
  98:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(-(0.5 + beta + gamma));
 7302              		.loc 19 98 51 view .LVU1632
 7303 0116 2AEE0BBB 		vmul.f64	d11, d10, d11
 7304 011a B7EECBBB 		vcvt.f32.f64	s22, d11
 7305 011e 8DED06BA 		vstr.32	s22, [sp, #24]
 7306              	.LVL351:
 7307              	.LBB4778:
 7308              	.LBI4762:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7309              		.loc 8 1203 7 is_stmt 1 view .LVU1633
 7310              	.LBB4775:
 7311              	.LBI4763:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7312              		.loc 13 109 7 view .LVU1634
 7313              	.LBB4772:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7314              		.loc 13 112 2 is_stmt 0 view .LVU1635
 7315 0122 00F0C582 		beq	.L307
 7316              	.LVL352:
 7317              	.LBB4765:
 7318              	.LBI4765:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7319              		.loc 16 507 2 is_stmt 1 view .LVU1636
 7320              	.LBB4766:
 7321              	.LBI4766:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7322              		.loc 15 148 2 view .LVU1637
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7323              		.loc 15 148 2 is_stmt 0 view .LVU1638
 7324              	.LBE4766:
 7325              	.LBE4765:
 7326              	.LBE4772:
 7327              	.LBE4775:
 7328              	.LBE4778:
 7329              	.LBE4888:
 7330              	.LBE5073:
 7331              	.LBE5235:
 7332              	.LBE5381:
 7333              	.LBE5558:
 7334              		.loc 24 175 3 is_stmt 1 view .LVU1639
 7335              	.LBB5559:
 7336              	.LBB5382:
 7337              	.LBB5236:
 7338              	.LBB5074:
 7339              	.LBB4889:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 410


 7340              	.LBB4779:
 7341              	.LBB4776:
 7342              	.LBB4773:
 7343              	.LBB4769:
 7344              	.LBB4768:
 7345              	.LBB4767:
 7346              		.loc 15 150 4 is_stmt 0 view .LVU1640
 7347 0126 A3EC01BA 		vstmia.32	r3!, {s22}
 7348              	.LVL353:
 7349              		.loc 15 150 4 view .LVU1641
 7350              	.LBE4767:
 7351              	.LBE4768:
 7352              	.LBE4769:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7353              		.loc 13 117 6 view .LVU1642
 7354 012a 0193     		str	r3, [sp, #4]
 7355              	.L308:
 7356              	.LVL354:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7357              		.loc 13 117 6 view .LVU1643
 7358              	.LBE4773:
 7359              	.LBE4776:
 7360              	.LBE4779:
  99:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((0.5 + beta + gamma) / 2.0);
 7361              		.loc 19 99 13 is_stmt 1 view .LVU1644
  99:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((0.5 + beta + gamma) / 2.0);
 7362              		.loc 19 99 43 is_stmt 0 view .LVU1645
 7363 012c F7EECA7B 		vcvt.f32.f64	s15, d10
 7364              	.LBB4780:
 7365              	.LBB4781:
 7366              	.LBB4782:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7367              		.loc 13 112 2 view .LVU1646
 7368 0130 9942     		cmp	r1, r3
 7369              	.LBE4782:
 7370              	.LBE4781:
 7371              	.LBE4780:
  99:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((0.5 + beta + gamma) / 2.0);
 7372              		.loc 19 99 29 view .LVU1647
 7373 0132 F1EE677A 		vneg.f32	s15, s15
 7374 0136 CDED067A 		vstr.32	s15, [sp, #24]
 7375              	.LVL355:
 7376              	.LBB4798:
 7377              	.LBI4780:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7378              		.loc 8 1203 7 is_stmt 1 view .LVU1648
 7379              	.LBB4794:
 7380              	.LBI4781:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7381              		.loc 13 109 7 view .LVU1649
 7382              	.LBB4790:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7383              		.loc 13 112 2 is_stmt 0 view .LVU1650
 7384 013a 00F0B282 		beq	.L309
 7385              	.LVL356:
 7386              	.LBB4783:
 7387              	.LBI4783:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 411


 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7388              		.loc 16 507 2 is_stmt 1 view .LVU1651
 7389              	.LBB4784:
 7390              	.LBI4784:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7391              		.loc 15 148 2 view .LVU1652
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7392              		.loc 15 148 2 is_stmt 0 view .LVU1653
 7393              	.LBE4784:
 7394              	.LBE4783:
 7395              	.LBE4790:
 7396              	.LBE4794:
 7397              	.LBE4798:
 7398              	.LBE4889:
 7399              	.LBE5074:
 7400              	.LBE5236:
 7401              	.LBE5382:
 7402              	.LBE5559:
 7403              		.loc 24 175 3 is_stmt 1 view .LVU1654
 7404              	.LBB5560:
 7405              	.LBB5383:
 7406              	.LBB5237:
 7407              	.LBB5075:
 7408              	.LBB4890:
 7409              	.LBB4799:
 7410              	.LBB4795:
 7411              	.LBB4791:
 7412              	.LBB4787:
 7413              	.LBB4786:
 7414              	.LBB4785:
 7415              		.loc 15 150 4 is_stmt 0 view .LVU1655
 7416 013e E3EC017A 		vstmia.32	r3!, {s15}
 7417              	.LVL357:
 7418              		.loc 15 150 4 view .LVU1656
 7419              	.LBE4785:
 7420              	.LBE4786:
 7421              	.LBE4787:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7422              		.loc 13 117 6 view .LVU1657
 7423 0142 0193     		str	r3, [sp, #4]
 7424              	.L310:
 7425              	.LVL358:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7426              		.loc 13 117 6 view .LVU1658
 7427              	.LBE4791:
 7428              	.LBE4795:
 7429              	.LBE4799:
 100:../../dsp_fv/classicFilters.h **** 
 7430              		.loc 19 100 13 is_stmt 1 view .LVU1659
 7431              	.LBB4800:
 7432              	.LBB4801:
 7433              	.LBB4802:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7434              		.loc 13 112 2 is_stmt 0 view .LVU1660
 7435 0144 8B42     		cmp	r3, r1
 7436              	.LBE4802:
 7437              	.LBE4801:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 412


 7438              	.LBE4800:
 100:../../dsp_fv/classicFilters.h **** 
 7439              		.loc 19 100 51 view .LVU1661
 7440 0146 8DED06BA 		vstr.32	s22, [sp, #24]
 7441              	.LVL359:
 7442              	.LBB4818:
 7443              	.LBI4800:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7444              		.loc 8 1203 7 is_stmt 1 view .LVU1662
 7445              	.LBB4814:
 7446              	.LBI4801:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7447              		.loc 13 109 7 view .LVU1663
 7448              	.LBB4810:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7449              		.loc 13 112 2 is_stmt 0 view .LVU1664
 7450 014a 00F0A482 		beq	.L311
 7451              	.LVL360:
 7452              	.LBB4803:
 7453              	.LBI4803:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7454              		.loc 16 507 2 is_stmt 1 view .LVU1665
 7455              	.LBB4804:
 7456              	.LBI4804:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7457              		.loc 15 148 2 view .LVU1666
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7458              		.loc 15 148 2 is_stmt 0 view .LVU1667
 7459              	.LBE4804:
 7460              	.LBE4803:
 7461              	.LBE4810:
 7462              	.LBE4814:
 7463              	.LBE4818:
 7464              	.LBE4890:
 7465              	.LBE5075:
 7466              	.LBE5237:
 7467              	.LBE5383:
 7468              	.LBE5560:
 7469              		.loc 24 175 3 is_stmt 1 view .LVU1668
 7470              	.LBB5561:
 7471              	.LBB5384:
 7472              	.LBB5238:
 7473              	.LBB5076:
 7474              	.LBB4891:
 7475              	.LBB4819:
 7476              	.LBB4815:
 7477              	.LBB4811:
 7478              	.LBB4807:
 7479              	.LBB4806:
 7480              	.LBB4805:
 7481              		.loc 15 150 4 is_stmt 0 view .LVU1669
 7482 014e A3EC01BA 		vstmia.32	r3!, {s22}
 7483              	.LVL361:
 7484              		.loc 15 150 4 view .LVU1670
 7485              	.LBE4805:
 7486              	.LBE4806:
 7487              	.LBE4807:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 413


 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7488              		.loc 13 117 6 view .LVU1671
 7489 0152 0193     		str	r3, [sp, #4]
 7490              	.L312:
 7491              	.LVL362:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7492              		.loc 13 117 6 view .LVU1672
 7493              	.LBE4811:
 7494              	.LBE4815:
 7495              	.LBE4819:
 102:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(-2 * gamma);
 7496              		.loc 19 102 13 is_stmt 1 view .LVU1673
 102:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(-2 * gamma);
 7497              		.loc 19 102 29 is_stmt 0 view .LVU1674
 7498 0154 4FF07E52 		mov	r2, #1065353216
 7499              	.LBB4820:
 7500              	.LBB4821:
 7501              	.LBB4822:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7502              		.loc 13 112 47 view .LVU1675
 7503 0158 DDE90431 		ldrd	r3, r1, [sp, #16]
 7504              	.LBE4822:
 7505              	.LBE4821:
 7506              	.LBE4820:
 102:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(-2 * gamma);
 7507              		.loc 19 102 29 view .LVU1676
 7508 015c 0692     		str	r2, [sp, #24]	@ float
 7509              	.LVL363:
 7510              	.LBB4836:
 7511              	.LBI4820:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7512              		.loc 8 1203 7 is_stmt 1 view .LVU1677
 7513              	.LBB4833:
 7514              	.LBI4821:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7515              		.loc 13 109 7 view .LVU1678
 7516              	.LBB4830:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7517              		.loc 13 112 2 is_stmt 0 view .LVU1679
 7518 015e 8B42     		cmp	r3, r1
 7519 0160 00F09282 		beq	.L313
 7520              	.LVL364:
 7521              	.LBB4823:
 7522              	.LBI4823:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7523              		.loc 16 507 2 is_stmt 1 view .LVU1680
 7524              	.LBB4824:
 7525              	.LBI4824:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7526              		.loc 15 148 2 view .LVU1681
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7527              		.loc 15 148 2 is_stmt 0 view .LVU1682
 7528              	.LBE4824:
 7529              	.LBE4823:
 7530              	.LBE4830:
 7531              	.LBE4833:
 7532              	.LBE4836:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 414


 7533              	.LBE4891:
 7534              	.LBE5076:
 7535              	.LBE5238:
 7536              	.LBE5384:
 7537              	.LBE5561:
 7538              		.loc 24 175 3 is_stmt 1 view .LVU1683
 7539              	.LBB5562:
 7540              	.LBB5385:
 7541              	.LBB5239:
 7542              	.LBB5077:
 7543              	.LBB4892:
 7544              	.LBB4837:
 7545              	.LBB4834:
 7546              	.LBB4831:
 7547              	.LBB4827:
 7548              	.LBB4826:
 7549              	.LBB4825:
 7550              		.loc 15 150 4 is_stmt 0 view .LVU1684
 7551 0164 43F8042B 		str	r2, [r3], #4	@ float
 7552              	.LVL365:
 7553              		.loc 15 150 4 view .LVU1685
 7554              	.LBE4825:
 7555              	.LBE4826:
 7556              	.LBE4827:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7557              		.loc 13 117 6 view .LVU1686
 7558 0168 0493     		str	r3, [sp, #16]
 7559              	.L314:
 7560              	.LVL366:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7561              		.loc 13 117 6 view .LVU1687
 7562              	.LBE4831:
 7563              	.LBE4834:
 7564              	.LBE4837:
 103:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(2 * beta);
 7565              		.loc 19 103 13 is_stmt 1 view .LVU1688
 103:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(2 * beta);
 7566              		.loc 19 103 33 is_stmt 0 view .LVU1689
 7567 016a B8EE007B 		vmov.f64	d7, #-2.0e+0
 7568              	.LBB4838:
 7569              	.LBB4839:
 7570              	.LBB4840:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7571              		.loc 13 112 2 view .LVU1690
 7572 016e 8B42     		cmp	r3, r1
 7573              	.LBE4840:
 7574              	.LBE4839:
 7575              	.LBE4838:
 103:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(2 * beta);
 7576              		.loc 19 103 33 view .LVU1691
 7577 0170 29EE079B 		vmul.f64	d9, d9, d7
 7578              	.LVL367:
 103:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(2 * beta);
 7579              		.loc 19 103 33 view .LVU1692
 7580 0174 B7EEC99B 		vcvt.f32.f64	s18, d9
 7581 0178 8DED069A 		vstr.32	s18, [sp, #24]
 7582              	.LVL368:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 415


 7583              	.LBB4856:
 7584              	.LBI4838:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7585              		.loc 8 1203 7 is_stmt 1 view .LVU1693
 7586              	.LBB4852:
 7587              	.LBI4839:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7588              		.loc 13 109 7 view .LVU1694
 7589              	.LBB4848:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7590              		.loc 13 112 2 is_stmt 0 view .LVU1695
 7591 017c 00F07D82 		beq	.L315
 7592              	.LVL369:
 7593              	.LBB4841:
 7594              	.LBI4841:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7595              		.loc 16 507 2 is_stmt 1 view .LVU1696
 7596              	.LBB4842:
 7597              	.LBI4842:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7598              		.loc 15 148 2 view .LVU1697
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7599              		.loc 15 148 2 is_stmt 0 view .LVU1698
 7600              	.LBE4842:
 7601              	.LBE4841:
 7602              	.LBE4848:
 7603              	.LBE4852:
 7604              	.LBE4856:
 7605              	.LBE4892:
 7606              	.LBE5077:
 7607              	.LBE5239:
 7608              	.LBE5385:
 7609              	.LBE5562:
 7610              		.loc 24 175 3 is_stmt 1 view .LVU1699
 7611              	.LBB5563:
 7612              	.LBB5386:
 7613              	.LBB5240:
 7614              	.LBB5078:
 7615              	.LBB4893:
 7616              	.LBB4857:
 7617              	.LBB4853:
 7618              	.LBB4849:
 7619              	.LBB4845:
 7620              	.LBB4844:
 7621              	.LBB4843:
 7622              		.loc 15 150 4 is_stmt 0 view .LVU1700
 7623 0180 A3EC019A 		vstmia.32	r3!, {s18}
 7624              	.LVL370:
 7625              		.loc 15 150 4 view .LVU1701
 7626              	.LBE4843:
 7627              	.LBE4844:
 7628              	.LBE4845:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7629              		.loc 13 117 6 view .LVU1702
 7630 0184 0493     		str	r3, [sp, #16]
 7631              	.L316:
 7632              	.LVL371:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 416


 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7633              		.loc 13 117 6 view .LVU1703
 7634              	.LBE4849:
 7635              	.LBE4853:
 7636              	.LBE4857:
 104:../../dsp_fv/classicFilters.h ****         }
 7637              		.loc 19 104 13 is_stmt 1 view .LVU1704
 104:../../dsp_fv/classicFilters.h ****         }
 7638              		.loc 19 104 32 is_stmt 0 view .LVU1705
 7639 0186 3CEE0CCB 		vadd.f64	d12, d12, d12
 7640              	.LVL372:
 7641              	.LBB4858:
 7642              	.LBB4859:
 7643              	.LBB4860:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7644              		.loc 13 112 2 view .LVU1706
 7645 018a 9942     		cmp	r1, r3
 7646              	.LBE4860:
 7647              	.LBE4859:
 7648              	.LBE4858:
 104:../../dsp_fv/classicFilters.h ****         }
 7649              		.loc 19 104 32 view .LVU1707
 7650 018c B7EECCCB 		vcvt.f32.f64	s24, d12
 7651 0190 8DED06CA 		vstr.32	s24, [sp, #24]
 7652              	.LVL373:
 7653              	.LBB4876:
 7654              	.LBI4858:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7655              		.loc 8 1203 7 is_stmt 1 view .LVU1708
 7656              	.LBB4872:
 7657              	.LBI4859:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7658              		.loc 13 109 7 view .LVU1709
 7659              	.LBB4868:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7660              		.loc 13 112 2 is_stmt 0 view .LVU1710
 7661 0194 00F0C281 		beq	.L317
 7662              	.LVL374:
 7663              	.LBB4861:
 7664              	.LBI4861:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7665              		.loc 16 507 2 is_stmt 1 view .LVU1711
 7666              	.LBB4862:
 7667              	.LBI4862:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7668              		.loc 15 148 2 view .LVU1712
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7669              		.loc 15 148 2 is_stmt 0 view .LVU1713
 7670              	.LBE4862:
 7671              	.LBE4861:
 7672              	.LBE4868:
 7673              	.LBE4872:
 7674              	.LBE4876:
 7675              	.LBE4893:
 7676              	.LBE5078:
 7677              	.LBE5240:
 7678              	.LBE5386:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 417


 7679              	.LBE5563:
 7680              		.loc 24 175 3 is_stmt 1 view .LVU1714
 7681              	.LBB5564:
 7682              	.LBB5387:
 7683              	.LBB5241:
 7684              	.LBB5079:
 7685              	.LBB4894:
 7686              	.LBB4877:
 7687              	.LBB4873:
 7688              	.LBB4869:
 7689              	.LBB4865:
 7690              	.LBB4864:
 7691              	.LBB4863:
 7692              		.loc 15 150 4 is_stmt 0 view .LVU1715
 7693 0198 A3EC01CA 		vstmia.32	r3!, {s24}
 7694              	.LVL375:
 7695              		.loc 15 150 4 view .LVU1716
 7696              	.LBE4863:
 7697              	.LBE4864:
 7698              	.LBE4865:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7699              		.loc 13 117 6 view .LVU1717
 7700 019c 0493     		str	r3, [sp, #16]
 7701 019e 60E0     		b	.L272
 7702              	.LVL376:
 7703              	.L393:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7704              		.loc 13 117 6 view .LVU1718
 7705              	.LBE4869:
 7706              	.LBE4873:
 7707              	.LBE4877:
 7708              	.LBE4894:
 7709              	.LBE5079:
 7710              	.LBE5241:
 7711              	.LBE5387:
 7712              	.LBB5388:
 7713              	.LBB4563:
 7714              	.LBB4558:
 7715              	.LBI4558:
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
 7716              		.loc 11 2311 7 is_stmt 1 view .LVU1719
 7717              	.LBB4559:
 7718              	.LBI4559:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7719              		.loc 11 186 7 view .LVU1720
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7720              		.loc 11 186 7 is_stmt 0 view .LVU1721
 7721              	.LBE4559:
 7722              	.LBE4558:
 7723              	.LBB4560:
 7724              	.LBI4554:
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
 7725              		.loc 11 2311 7 is_stmt 1 view .LVU1722
 7726              	.LBB4557:
 7727              	.LBI4555:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7728              		.loc 11 186 7 view .LVU1723
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 418


 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7729              		.loc 11 186 7 is_stmt 0 view .LVU1724
 7730              	.LBE4557:
 7731              	.LBE4560:
 7732              	.LBB4561:
 7733              	.LBI4561:
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 7734              		.loc 12 337 7 is_stmt 1 view .LVU1725
 7735              	.LBB4562:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 7736              		.loc 12 339 2 view .LVU1726
 7737 01a0 32B1     		cbz	r2, .L256
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 7738              		.loc 12 347 2 view .LVU1727
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 7739              		.loc 12 347 25 is_stmt 0 view .LVU1728
 7740 01a2 3146     		mov	r1, r6
 7741 01a4 206E     		ldr	r0, [r4, #96]
 7742 01a6 FFF7FEFF 		bl	memcmp
 7743              	.LVL377:
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 7744              		.loc 12 347 25 view .LVU1729
 7745              	.LBE4562:
 7746              	.LBE4561:
6174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 						    __lhs.size())); }
 7747              		.loc 11 6174 8 view .LVU1730
 7748 01aa 0028     		cmp	r0, #0
 7749 01ac 7FF44AAF 		bne	.L257
 7750              	.L256:
 7751              	.LVL378:
6174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 						    __lhs.size())); }
 7752              		.loc 11 6174 8 view .LVU1731
 7753              	.LBE4563:
 7754              	.LBE5388:
 7755              	.LBB5389:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 7756              		.loc 11 657 7 is_stmt 1 view .LVU1732
 7757              	.LBB4594:
 7758              	.LBB4592:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7759              		.loc 11 229 7 view .LVU1733
 7760              	.LBB4586:
 7761              	.LBB4584:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 7762              		.loc 11 221 7 view .LVU1734
 7763              	.LBB4570:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7764              		.loc 11 200 7 view .LVU1735
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7765              		.loc 11 200 7 is_stmt 0 view .LVU1736
 7766              	.LBE4570:
 7767              	.LBE4584:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7768              		.loc 11 231 2 view .LVU1737
 7769 01b0 AE42     		cmp	r6, r5
 7770 01b2 04D0     		beq	.L258
 7771              	.LVL379:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 419


 7772              	.LBB4585:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7773              		.loc 11 236 7 is_stmt 1 view .LVU1738
 7774              	.LBB4583:
 7775              	.LBB4581:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7776              		.loc 16 491 7 view .LVU1739
 7777              	.LBB4578:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7778              		.loc 15 120 7 view .LVU1740
 7779              	.LBE4578:
 7780              	.LBE4581:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7781              		.loc 11 237 34 is_stmt 0 view .LVU1741
 7782 01b4 0899     		ldr	r1, [sp, #32]
 7783              	.LBB4582:
 7784              	.LBB4579:
 7785              	.LBB4576:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7786              		.loc 15 133 19 view .LVU1742
 7787 01b6 3046     		mov	r0, r6
 7788 01b8 0131     		adds	r1, r1, #1
 7789              	.LVL380:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7790              		.loc 15 133 19 view .LVU1743
 7791 01ba FFF7FEFF 		bl	_ZdlPvj
 7792              	.LVL381:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7793              		.loc 15 133 19 view .LVU1744
 7794              	.LBE4576:
 7795              	.LBE4579:
 7796              	.LBE4582:
 7797              	.LBE4583:
 7798              	.LBE4585:
 7799              	.LBE4586:
 7800              	.LBE4592:
 7801              	.LBB4593:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7802              		.loc 11 150 14 is_stmt 1 view .LVU1745
 7803              	.LBB4591:
 7804              		.loc 14 162 7 view .LVU1746
 7805              	.LBB4590:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7806              		.loc 15 89 7 view .LVU1747
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7807              		.loc 15 89 7 is_stmt 0 view .LVU1748
 7808              	.LBE4590:
 7809              	.LBE4591:
 7810              	.LBE4593:
 7811              	.LBE4594:
 7812              	.LBE5389:
 7813              	.LBB5390:
 7814              		.loc 14 162 7 is_stmt 1 view .LVU1749
 7815              	.LBB4597:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7816              		.loc 15 89 7 view .LVU1750
 7817              	.L258:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 420


  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7818              		.loc 15 89 7 is_stmt 0 view .LVU1751
 7819              	.LBE4597:
 7820              	.LBE5390:
 7821              	.LBB5391:
  51:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) / (1 + std::sin(theta_c));
 7822              		.loc 19 51 13 is_stmt 1 view .LVU1752
  51:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) / (1 + std::sin(theta_c));
 7823              		.loc 19 51 34 is_stmt 0 view .LVU1753
 7824 01be DFED607A 		vldr.32	s15, .L396+20
 7825 01c2 29EE270A 		vmul.f32	s0, s18, s15
  51:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) / (1 + std::sin(theta_c));
 7826              		.loc 19 51 18 view .LVU1754
 7827 01c6 80EE299A 		vdiv.f32	s18, s0, s19
 7828              	.LVL382:
  52:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((1 - gamma) / 2);
 7829              		.loc 19 52 13 is_stmt 1 view .LVU1755
 7830              	.LBB5392:
 7831              	.LBI5392:
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 7832              		.loc 25 184 3 view .LVU1756
 7833              	.LBB5393:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 7834              		.loc 25 185 5 view .LVU1757
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 7835              		.loc 25 185 26 is_stmt 0 view .LVU1758
 7836 01ca B0EE490A 		vmov.f32	s0, s18
 7837 01ce FFF7FEFF 		bl	cosf
 7838              	.LVL383:
 7839 01d2 F0EE408A 		vmov.f32	s17, s0
 7840              	.LVL384:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 7841              		.loc 25 185 26 view .LVU1759
 7842              	.LBE5393:
 7843              	.LBE5392:
 7844              	.LBB5394:
 7845              	.LBB5395:
 7846              		.loc 25 426 26 view .LVU1760
 7847 01d6 B0EE490A 		vmov.f32	s0, s18
 7848              	.LVL385:
 7849              		.loc 25 426 26 view .LVU1761
 7850              	.LBE5395:
 7851              	.LBI5394:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 7852              		.loc 25 425 3 is_stmt 1 view .LVU1762
 7853              	.LBB5396:
 7854              		.loc 25 426 5 view .LVU1763
 7855              		.loc 25 426 26 is_stmt 0 view .LVU1764
 7856 01da FFF7FEFF 		bl	sinf
 7857              	.LVL386:
 7858              		.loc 25 426 26 view .LVU1765
 7859              	.LBE5396:
 7860              	.LBE5394:
  52:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((1 - gamma) / 2);
 7861              		.loc 19 52 49 view .LVU1766
 7862 01de F7EE007A 		vmov.f32	s15, #1.0e+0
  53:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((1 - gamma) / 2);
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 421


 7863              		.loc 19 53 42 view .LVU1767
 7864 01e2 F6EE006A 		vmov.f32	s13, #5.0e-1
  52:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((1 - gamma) / 2);
 7865              		.loc 19 52 49 view .LVU1768
 7866 01e6 30EE277A 		vadd.f32	s14, s0, s15
 7867              	.LBB5397:
 7868              	.LBB5398:
 7869              	.LBB5399:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7870              		.loc 13 112 47 view .LVU1769
 7871 01ea DDE90131 		ldrd	r3, r1, [sp, #4]
 7872              	.LBE5399:
 7873              	.LBE5398:
 7874              	.LBE5397:
  52:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((1 - gamma) / 2);
 7875              		.loc 19 52 68 view .LVU1770
 7876 01ee 88EE879A 		vdiv.f32	s18, s17, s14
 7877              	.LVL387:
  53:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((1 - gamma) / 2);
 7878              		.loc 19 53 13 is_stmt 1 view .LVU1771
 7879              	.LBB5415:
 7880              	.LBB5411:
 7881              	.LBB5407:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7882              		.loc 13 112 2 is_stmt 0 view .LVU1772
 7883 01f2 8B42     		cmp	r3, r1
 7884              	.LBE5407:
 7885              	.LBE5411:
 7886              	.LBE5415:
  53:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((1 - gamma) / 2);
 7887              		.loc 19 53 33 view .LVU1773
 7888 01f4 77EEC97A 		vsub.f32	s15, s15, s18
  53:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((1 - gamma) / 2);
 7889              		.loc 19 53 42 view .LVU1774
 7890 01f8 67EEA68A 		vmul.f32	s17, s15, s13
 7891 01fc CDED068A 		vstr.32	s17, [sp, #24]
 7892              	.LVL388:
 7893              	.LBB5416:
 7894              	.LBI5397:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7895              		.loc 8 1203 7 is_stmt 1 view .LVU1775
 7896              	.LBB5412:
 7897              	.LBI5398:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7898              		.loc 13 109 7 view .LVU1776
 7899              	.LBB5408:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7900              		.loc 13 112 2 is_stmt 0 view .LVU1777
 7901 0200 00F0AB81 		beq	.L260
 7902              	.LVL389:
 7903              	.LBB5400:
 7904              	.LBI5400:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7905              		.loc 16 507 2 is_stmt 1 view .LVU1778
 7906              	.LBB5401:
 7907              	.LBI5401:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 422


 7908              		.loc 15 148 2 view .LVU1779
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7909              		.loc 15 148 2 is_stmt 0 view .LVU1780
 7910              	.LBE5401:
 7911              	.LBE5400:
 7912              	.LBE5408:
 7913              	.LBE5412:
 7914              	.LBE5416:
 7915              	.LBE5391:
 7916              	.LBE5564:
 7917              		.loc 24 175 3 is_stmt 1 view .LVU1781
 7918              	.LBB5565:
 7919              	.LBB5513:
 7920              	.LBB5417:
 7921              	.LBB5413:
 7922              	.LBB5409:
 7923              	.LBB5404:
 7924              	.LBB5403:
 7925              	.LBB5402:
 7926              		.loc 15 150 4 is_stmt 0 view .LVU1782
 7927 0204 E3EC018A 		vstmia.32	r3!, {s17}
 7928              	.LVL390:
 7929              		.loc 15 150 4 view .LVU1783
 7930              	.LBE5402:
 7931              	.LBE5403:
 7932              	.LBE5404:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7933              		.loc 13 117 6 view .LVU1784
 7934 0208 0193     		str	r3, [sp, #4]
 7935              	.L261:
 7936              	.LVL391:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7937              		.loc 13 117 6 view .LVU1785
 7938              	.LBE5409:
 7939              	.LBE5413:
 7940              	.LBE5417:
  54:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(0.0f);
 7941              		.loc 19 54 13 is_stmt 1 view .LVU1786
 7942              	.LBB5418:
 7943              	.LBB5419:
 7944              	.LBB5420:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7945              		.loc 13 112 2 is_stmt 0 view .LVU1787
 7946 020a 8B42     		cmp	r3, r1
 7947              	.LBE5420:
 7948              	.LBE5419:
 7949              	.LBE5418:
  54:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(0.0f);
 7950              		.loc 19 54 42 view .LVU1788
 7951 020c CDED068A 		vstr.32	s17, [sp, #24]
 7952              	.LVL392:
 7953              	.LBB5436:
 7954              	.LBI5418:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 7955              		.loc 8 1203 7 is_stmt 1 view .LVU1789
 7956              	.LBB5432:
 7957              	.LBI5419:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 423


 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 7958              		.loc 13 109 7 view .LVU1790
 7959              	.LBB5428:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 7960              		.loc 13 112 2 is_stmt 0 view .LVU1791
 7961 0210 00F09C81 		beq	.L262
 7962              	.LVL393:
 7963              	.LBB5421:
 7964              	.LBI5421:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7965              		.loc 16 507 2 is_stmt 1 view .LVU1792
 7966              	.LBB5422:
 7967              	.LBI5422:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7968              		.loc 15 148 2 view .LVU1793
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7969              		.loc 15 148 2 is_stmt 0 view .LVU1794
 7970              	.LBE5422:
 7971              	.LBE5421:
 7972              	.LBE5428:
 7973              	.LBE5432:
 7974              	.LBE5436:
 7975              	.LBE5513:
 7976              	.LBE5565:
 7977              		.loc 24 175 3 is_stmt 1 view .LVU1795
 7978              	.LBB5566:
 7979              	.LBB5514:
 7980              	.LBB5437:
 7981              	.LBB5433:
 7982              	.LBB5429:
 7983              	.LBB5425:
 7984              	.LBB5424:
 7985              	.LBB5423:
 7986              		.loc 15 150 4 is_stmt 0 view .LVU1796
 7987 0214 E3EC018A 		vstmia.32	r3!, {s17}
 7988              	.LVL394:
 7989              		.loc 15 150 4 view .LVU1797
 7990              	.LBE5423:
 7991              	.LBE5424:
 7992              	.LBE5425:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7993              		.loc 13 117 6 view .LVU1798
 7994 0218 0193     		str	r3, [sp, #4]
 7995              	.L263:
 7996              	.LVL395:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7997              		.loc 13 117 6 view .LVU1799
 7998              	.LBE5429:
 7999              	.LBE5433:
 8000              	.LBE5437:
  55:../../dsp_fv/classicFilters.h **** 
 8001              		.loc 19 55 13 is_stmt 1 view .LVU1800
  55:../../dsp_fv/classicFilters.h **** 
 8002              		.loc 19 55 30 is_stmt 0 view .LVU1801
 8003 021a 0022     		movs	r2, #0
 8004              	.LBB5438:
 8005              	.LBB5439:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 424


 8006              	.LBB5440:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8007              		.loc 13 112 2 view .LVU1802
 8008 021c 9942     		cmp	r1, r3
 8009              	.LBE5440:
 8010              	.LBE5439:
 8011              	.LBE5438:
  55:../../dsp_fv/classicFilters.h **** 
 8012              		.loc 19 55 30 view .LVU1803
 8013 021e 0692     		str	r2, [sp, #24]	@ float
 8014              	.LVL396:
 8015              	.LBB5456:
 8016              	.LBI5438:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8017              		.loc 8 1203 7 is_stmt 1 view .LVU1804
 8018              	.LBB5452:
 8019              	.LBI5439:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8020              		.loc 13 109 7 view .LVU1805
 8021              	.LBB5448:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8022              		.loc 13 112 2 is_stmt 0 view .LVU1806
 8023 0220 00F08F81 		beq	.L264
 8024              	.LVL397:
 8025              	.LBB5441:
 8026              	.LBI5441:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8027              		.loc 16 507 2 is_stmt 1 view .LVU1807
 8028              	.LBB5442:
 8029              	.LBI5442:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8030              		.loc 15 148 2 view .LVU1808
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8031              		.loc 15 148 2 is_stmt 0 view .LVU1809
 8032              	.LBE5442:
 8033              	.LBE5441:
 8034              	.LBE5448:
 8035              	.LBE5452:
 8036              	.LBE5456:
 8037              	.LBE5514:
 8038              	.LBE5566:
 8039              		.loc 24 175 3 is_stmt 1 view .LVU1810
 8040              	.LBB5567:
 8041              	.LBB5515:
 8042              	.LBB5457:
 8043              	.LBB5453:
 8044              	.LBB5449:
 8045              	.LBB5445:
 8046              	.LBB5444:
 8047              	.LBB5443:
 8048              		.loc 15 150 4 is_stmt 0 view .LVU1811
 8049 0224 43F8042B 		str	r2, [r3], #4	@ float
 8050              	.LVL398:
 8051              		.loc 15 150 4 view .LVU1812
 8052              	.LBE5443:
 8053              	.LBE5444:
 8054              	.LBE5445:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 425


 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8055              		.loc 13 117 6 view .LVU1813
 8056 0228 0193     		str	r3, [sp, #4]
 8057              	.L265:
 8058              	.LVL399:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8059              		.loc 13 117 6 view .LVU1814
 8060              	.LBE5449:
 8061              	.LBE5453:
 8062              	.LBE5457:
  57:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(-gamma);
 8063              		.loc 19 57 13 is_stmt 1 view .LVU1815
  57:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(-gamma);
 8064              		.loc 19 57 29 is_stmt 0 view .LVU1816
 8065 022a 0022     		movs	r2, #0
 8066              	.LBB5458:
 8067              	.LBB5459:
 8068              	.LBB5460:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8069              		.loc 13 112 47 view .LVU1817
 8070 022c DDE90431 		ldrd	r3, r1, [sp, #16]
 8071              	.LBE5460:
 8072              	.LBE5459:
 8073              	.LBE5458:
  57:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(-gamma);
 8074              		.loc 19 57 29 view .LVU1818
 8075 0230 0692     		str	r2, [sp, #24]	@ float
 8076              	.LVL400:
 8077              	.LBB5474:
 8078              	.LBI5458:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8079              		.loc 8 1203 7 is_stmt 1 view .LVU1819
 8080              	.LBB5471:
 8081              	.LBI5459:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8082              		.loc 13 109 7 view .LVU1820
 8083              	.LBB5468:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8084              		.loc 13 112 2 is_stmt 0 view .LVU1821
 8085 0232 8B42     		cmp	r3, r1
 8086 0234 00F07E81 		beq	.L266
 8087              	.LVL401:
 8088              	.LBB5461:
 8089              	.LBI5461:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8090              		.loc 16 507 2 is_stmt 1 view .LVU1822
 8091              	.LBB5462:
 8092              	.LBI5462:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8093              		.loc 15 148 2 view .LVU1823
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8094              		.loc 15 148 2 is_stmt 0 view .LVU1824
 8095              	.LBE5462:
 8096              	.LBE5461:
 8097              	.LBE5468:
 8098              	.LBE5471:
 8099              	.LBE5474:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 426


 8100              	.LBE5515:
 8101              	.LBE5567:
 8102              		.loc 24 175 3 is_stmt 1 view .LVU1825
 8103              	.LBB5568:
 8104              	.LBB5516:
 8105              	.LBB5475:
 8106              	.LBB5472:
 8107              	.LBB5469:
 8108              	.LBB5465:
 8109              	.LBB5464:
 8110              	.LBB5463:
 8111              		.loc 15 150 4 is_stmt 0 view .LVU1826
 8112 0238 43F8042B 		str	r2, [r3], #4	@ float
 8113              	.LVL402:
 8114              		.loc 15 150 4 view .LVU1827
 8115              	.LBE5463:
 8116              	.LBE5464:
 8117              	.LBE5465:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8118              		.loc 13 117 6 view .LVU1828
 8119 023c 0493     		str	r3, [sp, #16]
 8120              	.L267:
 8121              	.LVL403:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8122              		.loc 13 117 6 view .LVU1829
 8123              	.LBE5469:
 8124              	.LBE5472:
 8125              	.LBE5475:
  58:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
 8126              		.loc 19 58 13 is_stmt 1 view .LVU1830
  58:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
 8127              		.loc 19 58 30 is_stmt 0 view .LVU1831
 8128 023e B1EE499A 		vneg.f32	s18, s18
 8129              	.LVL404:
 8130              	.LBB5476:
 8131              	.LBB5477:
 8132              	.LBB5478:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8133              		.loc 13 112 2 view .LVU1832
 8134 0242 8B42     		cmp	r3, r1
 8135              	.LBE5478:
 8136              	.LBE5477:
 8137              	.LBE5476:
  58:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
 8138              		.loc 19 58 30 view .LVU1833
 8139 0244 8DED069A 		vstr.32	s18, [sp, #24]
 8140              	.LVL405:
 8141              	.LBB5494:
 8142              	.LBI5476:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8143              		.loc 8 1203 7 is_stmt 1 view .LVU1834
 8144              	.LBB5490:
 8145              	.LBI5477:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8146              		.loc 13 109 7 view .LVU1835
 8147              	.LBB5486:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 427


 8148              		.loc 13 112 2 is_stmt 0 view .LVU1836
 8149 0248 00F06D81 		beq	.L268
 8150              	.LVL406:
 8151              	.LBB5479:
 8152              	.LBI5479:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8153              		.loc 16 507 2 is_stmt 1 view .LVU1837
 8154              	.LBB5480:
 8155              	.LBI5480:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8156              		.loc 15 148 2 view .LVU1838
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8157              		.loc 15 148 2 is_stmt 0 view .LVU1839
 8158              	.LBE5480:
 8159              	.LBE5479:
 8160              	.LBE5486:
 8161              	.LBE5490:
 8162              	.LBE5494:
 8163              	.LBE5516:
 8164              	.LBE5568:
 8165              		.loc 24 175 3 is_stmt 1 view .LVU1840
 8166              	.LBB5569:
 8167              	.LBB5517:
 8168              	.LBB5495:
 8169              	.LBB5491:
 8170              	.LBB5487:
 8171              	.LBB5483:
 8172              	.LBB5482:
 8173              	.LBB5481:
 8174              		.loc 15 150 4 is_stmt 0 view .LVU1841
 8175 024c A3EC019A 		vstmia.32	r3!, {s18}
 8176              	.LVL407:
 8177              		.loc 15 150 4 view .LVU1842
 8178              	.LBE5481:
 8179              	.LBE5482:
 8180              	.LBE5483:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8181              		.loc 13 117 6 view .LVU1843
 8182 0250 0493     		str	r3, [sp, #16]
 8183              	.L269:
 8184              	.LVL408:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8185              		.loc 13 117 6 view .LVU1844
 8186              	.LBE5487:
 8187              	.LBE5491:
 8188              	.LBE5495:
  59:../../dsp_fv/classicFilters.h **** 
 8189              		.loc 19 59 13 is_stmt 1 view .LVU1845
  59:../../dsp_fv/classicFilters.h **** 
 8190              		.loc 19 59 29 is_stmt 0 view .LVU1846
 8191 0252 0022     		movs	r2, #0
 8192              	.LBB5496:
 8193              	.LBB5497:
 8194              	.LBB5498:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8195              		.loc 13 112 2 view .LVU1847
 8196 0254 9942     		cmp	r1, r3
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 428


 8197              	.LBE5498:
 8198              	.LBE5497:
 8199              	.LBE5496:
  59:../../dsp_fv/classicFilters.h **** 
 8200              		.loc 19 59 29 view .LVU1848
 8201 0256 0692     		str	r2, [sp, #24]	@ float
 8202              	.LVL409:
 8203              	.LBB5503:
 8204              	.LBI5496:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 8205              		.loc 8 1203 7 is_stmt 1 view .LVU1849
 8206              	.LBB5501:
 8207              	.LBI5497:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 8208              		.loc 13 109 7 view .LVU1850
 8209              	.LBB5499:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8210              		.loc 13 112 2 is_stmt 0 view .LVU1851
 8211 0258 00F06081 		beq	.L317
 8212              	.LVL410:
 8213              	.L391:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 8214              		.loc 13 112 2 view .LVU1852
 8215              	.LBE5499:
 8216              	.LBE5501:
 8217              	.LBE5503:
 8218              	.LBE5517:
 8219              	.LBB5518:
 8220              	.LBB5242:
 8221              	.LBB5080:
 8222              	.LBB4895:
 8223              	.LBB4896:
 8224              	.LBB4897:
 8225              	.LBB4898:
 8226              	.LBI4898:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8227              		.loc 16 507 2 is_stmt 1 view .LVU1853
 8228              	.LBB4899:
 8229              	.LBI4899:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8230              		.loc 15 148 2 view .LVU1854
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8231              		.loc 15 148 2 is_stmt 0 view .LVU1855
 8232              	.LBE4899:
 8233              	.LBE4898:
 8234              	.LBE4897:
 8235              	.LBE4896:
 8236              	.LBE4895:
 8237              	.LBE5080:
 8238              	.LBE5242:
 8239              	.LBE5518:
 8240              	.LBE5569:
 8241              		.loc 24 175 3 is_stmt 1 view .LVU1856
 8242              	.LBB5570:
 8243              	.LBB5519:
 8244              	.LBB5243:
 8245              	.LBB5081:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 429


 8246              	.LBB4913:
 8247              	.LBB4909:
 8248              	.LBB4905:
 8249              	.LBB4902:
 8250              	.LBB4901:
 8251              	.LBB4900:
 8252              		.loc 15 150 4 is_stmt 0 view .LVU1857
 8253 025c 43F8042B 		str	r2, [r3], #4	@ float
 8254              	.LVL411:
 8255              		.loc 15 150 4 view .LVU1858
 8256              	.LBE4900:
 8257              	.LBE4901:
 8258              	.LBE4902:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 8259              		.loc 13 117 6 view .LVU1859
 8260 0260 0493     		str	r3, [sp, #16]
 8261              	.L272:
 8262              	.LBE4905:
 8263              	.LBE4909:
 8264              	.LBE4913:
 8265              	.LBE5081:
 8266              	.LBE5243:
 8267              	.LBE5519:
 8268              	.LBE5570:
 118:../../dsp_fv/classicFilters.h ****         setFilterGain(gain);
 8269              		.loc 19 118 9 is_stmt 1 view .LVU1860
 8270              	.LVL412:
 8271              	.LBB5571:
 8272              	.LBI5571:
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 8273              		.loc 8 553 7 view .LVU1861
 8274              	.LBB5572:
 8275              	.LBI5572:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8276              		.loc 8 918 7 view .LVU1862
 8277              	.LBB5573:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 8278              		.loc 8 919 66 is_stmt 0 view .LVU1863
 8279 0262 DDE90013 		ldrd	r1, r3, [sp]
 8280              	.LVL413:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 8281              		.loc 8 919 66 view .LVU1864
 8282              	.LBE5573:
 8283              	.LBE5572:
 8284              	.LBB5574:
 8285              	.LBI5574:
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8286              		.loc 8 280 7 is_stmt 1 view .LVU1865
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8287              		.loc 8 280 7 is_stmt 0 view .LVU1866
 8288              	.LBE5574:
 8289              	.LBB5575:
 8290              	.LBI5575:
 8291              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\alloc_trait
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 430


   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /** @file ext/alloc_traits.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  */
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #pragma GCC system_header
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/alloc_traits.h>
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus < 201103L
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** {
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /**
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @ingroup allocators
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** */
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** template<typename _Alloc, typename = typename _Alloc::value_type>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   struct __alloc_traits
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   : std::allocator_traits<_Alloc>
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   {
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef _Alloc allocator_type;
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 431


  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef value_type&                             reference;
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef const value_type&                       const_reference;
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::allocate;
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::deallocate;
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::construct;
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::destroy;
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::max_size;
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   private:
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       using __is_custom_pointer
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   public:
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload construct for non-standard pointer types
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::construct(__a, std::__to_address(__p),
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 					      std::forward<_Args>(__args)...)))
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       {
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	_Base_type::construct(__a, std::__to_address(__p),
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       }
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload destroy for non-standard pointer types
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       { _Base_type::destroy(__a, std::__to_address(__p)); }
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
 8292              		.loc 26 97 29 is_stmt 1 view .LVU1867
 8293              	.LBB5576:
 8294              	.LBI5576:
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 8295              		.loc 16 558 7 view .LVU1868
 8296              	.LBB5577:
 8297              	.LBI5577:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8298              		.loc 14 147 7 view .LVU1869
 8299              	.LBB5578:
 8300              	.LBI5578:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8301              		.loc 15 82 7 view .LVU1870
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8302              		.loc 15 82 7 is_stmt 0 view .LVU1871
 8303              	.LBE5578:
 8304              	.LBE5577:
 8305              	.LBE5576:
 8306              	.LBE5575:
 8307              	.LBB5579:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 432


 8308              	.LBI5579:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 8309              		.loc 8 303 7 is_stmt 1 view .LVU1872
 8310              	.LBB5580:
 8311              	.LBI5580:
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 8312              		.loc 8 136 2 view .LVU1873
 8313              	.LBB5581:
 8314              	.LBI5581:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8315              		.loc 14 147 7 view .LVU1874
 8316              	.LBB5582:
 8317              	.LBI5582:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8318              		.loc 15 82 7 view .LVU1875
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8319              		.loc 15 82 7 is_stmt 0 view .LVU1876
 8320              	.LBE5582:
 8321              	.LBE5581:
 8322              	.LBB5583:
 8323              	.LBI5583:
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8324              		.loc 8 97 2 is_stmt 1 view .LVU1877
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8325              		.loc 8 97 2 is_stmt 0 view .LVU1878
 8326              	.LBE5583:
 8327              	.LBE5580:
 8328              	.LBB5584:
 8329              	.LBI5584:
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8330              		.loc 8 359 7 is_stmt 1 view .LVU1879
 8331              	.LBB5585:
 8332              	.LBI5585:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8333              		.loc 8 343 7 view .LVU1880
 8334              	.LBB5586:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8335              		.loc 8 346 18 is_stmt 0 view .LVU1881
 8336 0266 581A     		subs	r0, r3, r1
 8337              	.LVL414:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8338              		.loc 8 346 18 view .LVU1882
 8339 0268 5BD0     		beq	.L356
 8340              	.LVL415:
 8341              	.LBB5587:
 8342              	.LBI5587:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 8343              		.loc 16 459 7 is_stmt 1 view .LVU1883
 8344              	.LBB5588:
 8345              	.LBI5588:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8346              		.loc 15 103 7 view .LVU1884
 8347              	.LBB5589:
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 8348              		.loc 15 105 2 is_stmt 0 view .LVU1885
 8349 026a 344B     		ldr	r3, .L396+16
 8350 026c 0746     		mov	r7, r0
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 433


 8351 026e 9842     		cmp	r0, r3
 8352 0270 00F23F82 		bhi	.L336
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8353              		.loc 15 115 41 view .LVU1886
 8354 0274 FFF7FEFF 		bl	_Znwj
 8355              	.LVL416:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8356              		.loc 15 115 41 view .LVU1887
 8357 0278 0646     		mov	r6, r0
 8358              	.LVL417:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8359              		.loc 15 115 41 view .LVU1888
 8360              	.LBE5589:
 8361              	.LBE5588:
 8362              	.LBE5587:
 8363              	.LBE5586:
 8364              	.LBE5585:
 8365              	.LBE5584:
 8366              	.LBE5579:
 8367              	.LBB5599:
 8368              	.LBB5600:
 8369              	.LBB5601:
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 8370              		.loc 23 979 23 view .LVU1889
 8371 027a DDE90013 		ldrd	r1, r3, [sp]
 8372              	.LVL418:
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 8373              		.loc 23 979 23 view .LVU1890
 8374              	.LBE5601:
 8375              	.LBE5600:
 8376              	.LBE5599:
 8377              	.LBB5603:
 8378              	.LBB5604:
 8379              	.LBB5605:
 8380              	.LBB5606:
 8381              	.LBB5607:
 8382              	.LBB5608:
 8383              	.LBB5609:
 8384              	.LBB5610:
 8385              	.LBB5611:
 8386              	.LBB5612:
 8387              	.LBB5613:
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 8388              		.loc 18 424 34 view .LVU1891
 8389 027e 581A     		subs	r0, r3, r1
 8390              	.LVL419:
 8391              	.L332:
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 8392              		.loc 18 424 34 view .LVU1892
 8393              	.LBE5613:
 8394              	.LBE5612:
 8395              	.LBE5611:
 8396              	.LBE5610:
 8397              	.LBE5609:
 8398              	.LBE5608:
 8399              	.LBE5607:
 8400              	.LBE5606:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 434


 8401              	.LBE5605:
 8402              	.LBE5604:
 8403              	.LBE5603:
 8404              	.LBB5624:
 8405              	.LBI5624:
 8406              		.loc 14 162 7 is_stmt 1 view .LVU1893
 8407              	.LBB5625:
 8408              	.LBI5625:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8409              		.loc 15 89 7 view .LVU1894
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8410              		.loc 15 89 7 is_stmt 0 view .LVU1895
 8411              	.LBE5625:
 8412              	.LBE5624:
 8413              	.LBB5626:
 8414              	.LBI5626:
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 8415              		.loc 8 820 7 is_stmt 1 view .LVU1896
 8416              	.LBB5627:
 8417              	.LBI5627:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8418              		.loc 23 978 7 view .LVU1897
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8419              		.loc 23 978 7 is_stmt 0 view .LVU1898
 8420              	.LBE5627:
 8421              	.LBE5626:
 8422              	.LBB5628:
 8423              	.LBI5599:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 8424              		.loc 8 838 7 is_stmt 1 view .LVU1899
 8425              	.LBB5602:
 8426              	.LBI5600:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8427              		.loc 23 978 7 view .LVU1900
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8428              		.loc 23 978 7 is_stmt 0 view .LVU1901
 8429              	.LBE5602:
 8430              	.LBE5628:
 8431              	.LBB5629:
 8432              	.LBI5629:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8433              		.loc 8 276 7 is_stmt 1 view .LVU1902
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8434              		.loc 8 276 7 is_stmt 0 view .LVU1903
 8435              	.LBE5629:
 8436              	.LBB5630:
 8437              	.LBI5603:
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 8438              		.loc 17 323 5 is_stmt 1 view .LVU1904
 8439              	.LBB5623:
 8440              	.LBI5604:
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 8441              		.loc 17 125 5 view .LVU1905
 8442              	.LBB5622:
 8443              	.LBB5621:
 8444              	.LBI5606:
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 435


 8445              		.loc 17 107 9 view .LVU1906
 8446              	.LBB5620:
 8447              	.LBI5607:
 8448              		.loc 18 560 5 view .LVU1907
 8449              	.LBB5619:
 8450              	.LBI5608:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 8451              		.loc 18 511 5 view .LVU1908
 8452              	.LBB5618:
 8453              	.LBI5609:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 8454              		.loc 18 505 5 view .LVU1909
 8455              	.LBB5617:
 8456              	.LBI5610:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 8457              		.loc 18 463 5 view .LVU1910
 8458              	.LBB5616:
 8459              	.LBB5615:
 8460              	.LBI5612:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 8461              		.loc 18 415 2 view .LVU1911
 8462              	.LBB5614:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 8463              		.loc 18 425 4 is_stmt 0 view .LVU1912
 8464 0280 9942     		cmp	r1, r3
 8465 0282 03D0     		beq	.L334
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 8466              		.loc 18 426 23 view .LVU1913
 8467 0284 0246     		mov	r2, r0
 8468 0286 3046     		mov	r0, r6
 8469 0288 FFF7FEFF 		bl	memmove
 8470              	.LVL420:
 8471              	.L334:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 8472              		.loc 18 426 23 view .LVU1914
 8473              	.LBE5614:
 8474              	.LBE5615:
 8475              	.LBE5616:
 8476              	.LBE5617:
 8477              	.LBE5618:
 8478              	.LBE5619:
 8479              	.LBE5620:
 8480              	.LBE5621:
 8481              	.LBE5622:
 8482              	.LBE5623:
 8483              	.LBE5630:
 8484              	.LBE5571:
 8485              	.LBB5633:
 8486              	.LBI5633:
 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 8487              		.loc 8 553 7 is_stmt 1 view .LVU1915
 8488              	.LBB5634:
 8489              	.LBI5634:
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8490              		.loc 8 918 7 view .LVU1916
 8491              	.LBB5635:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 436


 8492              		.loc 8 919 66 is_stmt 0 view .LVU1917
 8493 028c DDE90313 		ldrd	r1, r3, [sp, #12]
 8494              	.LVL421:
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 8495              		.loc 8 919 66 view .LVU1918
 8496              	.LBE5635:
 8497              	.LBE5634:
 8498              	.LBB5636:
 8499              	.LBI5636:
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8500              		.loc 8 280 7 is_stmt 1 view .LVU1919
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8501              		.loc 8 280 7 is_stmt 0 view .LVU1920
 8502              	.LBE5636:
 8503              	.LBB5637:
 8504              	.LBI5637:
 8505              		.loc 26 97 29 is_stmt 1 view .LVU1921
 8506              	.LBB5638:
 8507              	.LBI5638:
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 8508              		.loc 16 558 7 view .LVU1922
 8509              	.LBB5639:
 8510              	.LBI5639:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8511              		.loc 14 147 7 view .LVU1923
 8512              	.LBB5640:
 8513              	.LBI5640:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8514              		.loc 15 82 7 view .LVU1924
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8515              		.loc 15 82 7 is_stmt 0 view .LVU1925
 8516              	.LBE5640:
 8517              	.LBE5639:
 8518              	.LBE5638:
 8519              	.LBE5637:
 8520              	.LBB5641:
 8521              	.LBI5641:
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 8522              		.loc 8 303 7 is_stmt 1 view .LVU1926
 8523              	.LBB5642:
 8524              	.LBI5642:
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 8525              		.loc 8 136 2 view .LVU1927
 8526              	.LBB5643:
 8527              	.LBI5643:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8528              		.loc 14 147 7 view .LVU1928
 8529              	.LBB5644:
 8530              	.LBI5644:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8531              		.loc 15 82 7 view .LVU1929
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8532              		.loc 15 82 7 is_stmt 0 view .LVU1930
 8533              	.LBE5644:
 8534              	.LBE5643:
 8535              	.LBB5645:
 8536              	.LBI5645:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 437


  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8537              		.loc 8 97 2 is_stmt 1 view .LVU1931
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 8538              		.loc 8 97 2 is_stmt 0 view .LVU1932
 8539              	.LBE5645:
 8540              	.LBE5642:
 8541              	.LBB5646:
 8542              	.LBI5646:
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8543              		.loc 8 359 7 is_stmt 1 view .LVU1933
 8544              	.LBB5647:
 8545              	.LBI5647:
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8546              		.loc 8 343 7 view .LVU1934
 8547              	.LBB5648:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8548              		.loc 8 346 18 is_stmt 0 view .LVU1935
 8549 0290 581A     		subs	r0, r3, r1
 8550              	.LVL422:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8551              		.loc 8 346 18 view .LVU1936
 8552 0292 8046     		mov	r8, r0
 8553 0294 48D0     		beq	.L357
 8554              	.LVL423:
 8555              	.LBB5649:
 8556              	.LBI5649:
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 8557              		.loc 16 459 7 is_stmt 1 view .LVU1937
 8558              	.LBB5650:
 8559              	.LBI5650:
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8560              		.loc 15 103 7 view .LVU1938
 8561              	.LBB5651:
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 8562              		.loc 15 105 2 is_stmt 0 view .LVU1939
 8563 0296 294B     		ldr	r3, .L396+16
 8564 0298 9842     		cmp	r0, r3
 8565 029a 00F22A82 		bhi	.L336
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8566              		.loc 15 115 41 view .LVU1940
 8567 029e FFF7FEFF 		bl	_Znwj
 8568              	.LVL424:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8569              		.loc 15 115 41 view .LVU1941
 8570 02a2 8146     		mov	r9, r0
 8571              	.LVL425:
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8572              		.loc 15 115 41 view .LVU1942
 8573              	.LBE5651:
 8574              	.LBE5650:
 8575              	.LBE5649:
 8576              	.LBE5648:
 8577              	.LBE5647:
 8578              	.LBE5646:
 8579              	.LBE5641:
 8580              	.LBB5655:
 8581              	.LBB5656:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 438


 8582              	.LBB5657:
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 8583              		.loc 23 979 23 view .LVU1943
 8584 02a4 DDE90313 		ldrd	r1, r3, [sp, #12]
 8585              	.LVL426:
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 8586              		.loc 23 979 23 view .LVU1944
 8587              	.LBE5657:
 8588              	.LBE5656:
 8589              	.LBE5655:
 8590              	.LBB5659:
 8591              	.LBB5660:
 8592              	.LBB5661:
 8593              	.LBB5662:
 8594              	.LBB5663:
 8595              	.LBB5664:
 8596              	.LBB5665:
 8597              	.LBB5666:
 8598              	.LBB5667:
 8599              	.LBB5668:
 8600              	.LBB5669:
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 8601              		.loc 18 424 34 view .LVU1945
 8602 02a8 581A     		subs	r0, r3, r1
 8603              	.LVL427:
 8604              	.L335:
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  if (_Num)
 8605              		.loc 18 424 34 view .LVU1946
 8606              	.LBE5669:
 8607              	.LBE5668:
 8608              	.LBE5667:
 8609              	.LBE5666:
 8610              	.LBE5665:
 8611              	.LBE5664:
 8612              	.LBE5663:
 8613              	.LBE5662:
 8614              	.LBE5661:
 8615              	.LBE5660:
 8616              	.LBE5659:
 8617              	.LBB5680:
 8618              	.LBI5680:
 8619              		.loc 14 162 7 is_stmt 1 view .LVU1947
 8620              	.LBB5681:
 8621              	.LBI5681:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8622              		.loc 15 89 7 view .LVU1948
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8623              		.loc 15 89 7 is_stmt 0 view .LVU1949
 8624              	.LBE5681:
 8625              	.LBE5680:
 8626              	.LBB5682:
 8627              	.LBI5682:
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 8628              		.loc 8 820 7 is_stmt 1 view .LVU1950
 8629              	.LBB5683:
 8630              	.LBI5683:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 439


 8631              		.loc 23 978 7 view .LVU1951
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8632              		.loc 23 978 7 is_stmt 0 view .LVU1952
 8633              	.LBE5683:
 8634              	.LBE5682:
 8635              	.LBB5684:
 8636              	.LBI5655:
 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 8637              		.loc 8 838 7 is_stmt 1 view .LVU1953
 8638              	.LBB5658:
 8639              	.LBI5656:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8640              		.loc 23 978 7 view .LVU1954
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8641              		.loc 23 978 7 is_stmt 0 view .LVU1955
 8642              	.LBE5658:
 8643              	.LBE5684:
 8644              	.LBB5685:
 8645              	.LBI5685:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8646              		.loc 8 276 7 is_stmt 1 view .LVU1956
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8647              		.loc 8 276 7 is_stmt 0 view .LVU1957
 8648              	.LBE5685:
 8649              	.LBB5686:
 8650              	.LBI5659:
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 8651              		.loc 17 323 5 is_stmt 1 view .LVU1958
 8652              	.LBB5679:
 8653              	.LBI5660:
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 8654              		.loc 17 125 5 view .LVU1959
 8655              	.LBB5678:
 8656              	.LBB5677:
 8657              	.LBI5662:
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 8658              		.loc 17 107 9 view .LVU1960
 8659              	.LBB5676:
 8660              	.LBI5663:
 8661              		.loc 18 560 5 view .LVU1961
 8662              	.LBB5675:
 8663              	.LBI5664:
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 8664              		.loc 18 511 5 view .LVU1962
 8665              	.LBB5674:
 8666              	.LBI5665:
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 8667              		.loc 18 505 5 view .LVU1963
 8668              	.LBB5673:
 8669              	.LBI5666:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h ****     {
 8670              		.loc 18 463 5 view .LVU1964
 8671              	.LBB5672:
 8672              	.LBB5671:
 8673              	.LBI5668:
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	{
 8674              		.loc 18 415 2 view .LVU1965
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 440


 8675              	.LBB5670:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 8676              		.loc 18 425 4 is_stmt 0 view .LVU1966
 8677 02aa 9942     		cmp	r1, r3
 8678 02ac 03D0     		beq	.L337
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 8679              		.loc 18 426 23 view .LVU1967
 8680 02ae 0246     		mov	r2, r0
 8681 02b0 4846     		mov	r0, r9
 8682 02b2 FFF7FEFF 		bl	memmove
 8683              	.LVL428:
 8684              	.L337:
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algobase.h **** 	  return __result + _Num;
 8685              		.loc 18 426 23 view .LVU1968
 8686              	.LBE5670:
 8687              	.LBE5671:
 8688              	.LBE5672:
 8689              	.LBE5673:
 8690              	.LBE5674:
 8691              	.LBE5675:
 8692              	.LBE5676:
 8693              	.LBE5677:
 8694              	.LBE5678:
 8695              	.LBE5679:
 8696              	.LBE5686:
 8697              	.LBE5633:
 8698              	.LBB5688:
 8699              	.LBB5689:
  34:../../dsp_fv/biquad.h ****         {
 8700              		.loc 7 34 27 is_stmt 1 view .LVU1969
 8701 02b6 3346     		mov	r3, r6
 8702 02b8 E56F     		ldr	r5, [r4, #124]
 8703 02ba 4946     		mov	r1, r9
 8704 02bc D4F88820 		ldr	r2, [r4, #136]
 8705 02c0 06F10C0C 		add	ip, r6, #12
 8706              	.LVL429:
 8707              	.L338:
  36:../../dsp_fv/biquad.h ****             bCoeffVector[i] = bCoeff[i];
 8708              		.loc 7 36 13 view .LVU1970
 8709              	.LBB5690:
 8710              	.LBI5690:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8711              		.loc 8 1043 7 view .LVU1971
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8712              		.loc 8 1043 7 is_stmt 0 view .LVU1972
 8713              	.LBE5690:
  36:../../dsp_fv/biquad.h ****             bCoeffVector[i] = bCoeff[i];
 8714              		.loc 7 36 29 view .LVU1973
 8715 02c4 53F8040B 		ldr	r0, [r3], #4	@ float
 8716 02c8 45F8040B 		str	r0, [r5], #4	@ float
  37:../../dsp_fv/biquad.h ****         }
 8717              		.loc 7 37 13 is_stmt 1 view .LVU1974
 8718              	.LVL430:
 8719              	.LBB5691:
 8720              	.LBI5691:
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8721              		.loc 8 1043 7 view .LVU1975
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 441


1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8722              		.loc 8 1043 7 is_stmt 0 view .LVU1976
 8723              	.LBE5691:
  34:../../dsp_fv/biquad.h ****         {
 8724              		.loc 7 34 27 view .LVU1977
 8725 02cc 9C45     		cmp	ip, r3
  37:../../dsp_fv/biquad.h ****         }
 8726              		.loc 7 37 29 view .LVU1978
 8727 02ce 51F8040B 		ldr	r0, [r1], #4	@ float
 8728 02d2 42F8040B 		str	r0, [r2], #4	@ float
  34:../../dsp_fv/biquad.h ****         {
 8729              		.loc 7 34 9 is_stmt 1 view .LVU1979
  34:../../dsp_fv/biquad.h ****         {
 8730              		.loc 7 34 27 view .LVU1980
 8731 02d6 F5D1     		bne	.L338
 8732              	.LVL431:
  34:../../dsp_fv/biquad.h ****         {
 8733              		.loc 7 34 27 is_stmt 0 view .LVU1981
 8734              	.LBE5689:
 8735              	.LBE5688:
 8736              	.LBB5692:
 8737              	.LBI5692:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8738              		.loc 8 678 7 is_stmt 1 view .LVU1982
 8739              	.LBB5693:
 8740              	.LBI5693:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8741              		.loc 8 276 7 view .LVU1983
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8742              		.loc 8 276 7 is_stmt 0 view .LVU1984
 8743              	.LBE5693:
 8744              	.LBB5694:
 8745              	.LBI5694:
 8746              		.loc 16 735 5 is_stmt 1 view .LVU1985
 8747              		.loc 16 735 5 is_stmt 0 view .LVU1986
 8748              	.LBE5694:
 8749              	.LBB5695:
 8750              	.LBI5695:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8751              		.loc 8 333 7 is_stmt 1 view .LVU1987
 8752              	.LBB5696:
 8753              	.LBI5696:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8754              		.loc 8 350 7 view .LVU1988
 8755              	.LBB5697:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 8756              		.loc 8 353 2 is_stmt 0 view .LVU1989
 8757 02d8 B9F1000F 		cmp	r9, #0
 8758 02dc 03D0     		beq	.L339
 8759              	.LVL432:
 8760              	.LBB5698:
 8761              	.LBI5698:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8762              		.loc 16 491 7 is_stmt 1 view .LVU1990
 8763              	.LBB5699:
 8764              	.LBB5700:
 8765              	.LBI5700:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 442


 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8766              		.loc 15 120 7 view .LVU1991
 8767              	.LBB5701:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8768              		.loc 15 133 19 is_stmt 0 view .LVU1992
 8769 02de 4146     		mov	r1, r8
 8770 02e0 4846     		mov	r0, r9
 8771 02e2 FFF7FEFF 		bl	_ZdlPvj
 8772              	.LVL433:
 8773              	.L339:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8774              		.loc 15 133 19 view .LVU1993
 8775              	.LBE5701:
 8776              	.LBE5700:
 8777              	.LBE5699:
 8778              	.LBE5698:
 8779              	.LBE5697:
 8780              	.LBE5696:
 8781              	.LBB5702:
 8782              	.LBI5702:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 8783              		.loc 8 128 14 is_stmt 1 view .LVU1994
 8784              	.LBB5703:
 8785              	.LBI5703:
 8786              		.loc 14 162 7 view .LVU1995
 8787              	.LBB5704:
 8788              	.LBI5704:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8789              		.loc 15 89 7 view .LVU1996
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8790              		.loc 15 89 7 is_stmt 0 view .LVU1997
 8791              	.LBE5704:
 8792              	.LBE5703:
 8793              	.LBE5702:
 8794              	.LBE5695:
 8795              	.LBE5692:
 8796              	.LBB5705:
 8797              	.LBI5705:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8798              		.loc 8 678 7 is_stmt 1 view .LVU1998
 8799              	.LBB5706:
 8800              	.LBI5706:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8801              		.loc 8 276 7 view .LVU1999
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8802              		.loc 8 276 7 is_stmt 0 view .LVU2000
 8803              	.LBE5706:
 8804              	.LBB5707:
 8805              	.LBI5707:
 8806              		.loc 16 735 5 is_stmt 1 view .LVU2001
 8807              		.loc 16 735 5 is_stmt 0 view .LVU2002
 8808              	.LBE5707:
 8809              	.LBB5708:
 8810              	.LBI5708:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8811              		.loc 8 333 7 is_stmt 1 view .LVU2003
 8812              	.LBB5709:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 443


 8813              	.LBI5709:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8814              		.loc 8 350 7 view .LVU2004
 8815              	.LBB5710:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 8816              		.loc 8 353 2 is_stmt 0 view .LVU2005
 8817 02e6 1EB1     		cbz	r6, .L340
 8818              	.LVL434:
 8819              	.LBB5711:
 8820              	.LBI5711:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8821              		.loc 16 491 7 is_stmt 1 view .LVU2006
 8822              	.LBB5712:
 8823              	.LBB5713:
 8824              	.LBI5713:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8825              		.loc 15 120 7 view .LVU2007
 8826              	.LBB5714:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8827              		.loc 15 133 19 is_stmt 0 view .LVU2008
 8828 02e8 3946     		mov	r1, r7
 8829 02ea 3046     		mov	r0, r6
 8830 02ec FFF7FEFF 		bl	_ZdlPvj
 8831              	.LVL435:
 8832              	.L340:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8833              		.loc 15 133 19 view .LVU2009
 8834              	.LBE5714:
 8835              	.LBE5713:
 8836              	.LBE5712:
 8837              	.LBE5711:
 8838              	.LBE5710:
 8839              	.LBE5709:
 8840              	.LBB5715:
 8841              	.LBI5715:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 8842              		.loc 8 128 14 is_stmt 1 view .LVU2010
 8843              	.LBB5716:
 8844              	.LBI5716:
 8845              		.loc 14 162 7 view .LVU2011
 8846              	.LBB5717:
 8847              	.LBI5717:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8848              		.loc 15 89 7 view .LVU2012
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8849              		.loc 15 89 7 is_stmt 0 view .LVU2013
 8850              	.LBE5717:
 8851              	.LBE5716:
 8852              	.LBE5715:
 8853              	.LBE5708:
 8854              	.LBE5705:
 119:../../dsp_fv/classicFilters.h ****     }
 8855              		.loc 19 119 9 is_stmt 1 view .LVU2014
 8856              	.LBB5718:
 8857              	.LBI5718:
 127:../../dsp_fv/classicFilters.h ****     {
 8858              		.loc 19 127 10 view .LVU2015
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 444


 8859              	.LBB5719:
 129:../../dsp_fv/classicFilters.h ****     }
 8860              		.loc 19 129 9 view .LVU2016
 8861              	.LBB5720:
 8862              	.LBI5720:
  57:../../dsp_fv/biquad.h ****     {
 8863              		.loc 7 57 10 view .LVU2017
 8864              	.LBB5721:
  59:../../dsp_fv/biquad.h ****         processedCoeff = processed;
 8865              		.loc 7 59 9 view .LVU2018
 8866              	.LBE5721:
 8867              	.LBE5720:
 129:../../dsp_fv/classicFilters.h ****     }
 8868              		.loc 19 129 35 is_stmt 0 view .LVU2019
 8869 02f0 F7EE001A 		vmov.f32	s3, #1.0e+0
 8870              	.LBB5724:
 8871              	.LBB5722:
  60:../../dsp_fv/biquad.h ****     }
 8872              		.loc 7 60 24 view .LVU2020
 8873 02f4 84ED2F8A 		vstr.32	s16, [r4, #188]
 8874              	.LBE5722:
 8875              	.LBE5724:
 8876              	.LBE5719:
 8877              	.LBE5718:
 8878              	.LBB5727:
 8879              	.LBB5728:
 8880              	.LBB5729:
 8881              	.LBB5730:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8882              		.loc 8 335 15 view .LVU2021
 8883 02f8 0398     		ldr	r0, [sp, #12]
 8884              	.LBE5730:
 8885              	.LBE5729:
 8886              	.LBE5728:
 8887              	.LBE5727:
 8888              	.LBB5750:
 8889              	.LBB5726:
 129:../../dsp_fv/classicFilters.h ****     }
 8890              		.loc 19 129 35 view .LVU2022
 8891 02fa 31EEC88A 		vsub.f32	s16, s3, s16
 8892              	.LVL436:
 8893              	.LBB5725:
 8894              	.LBB5723:
  59:../../dsp_fv/biquad.h ****         processedCoeff = processed;
 8895              		.loc 7 59 18 view .LVU2023
 8896 02fe 84ED2E8A 		vstr.32	s16, [r4, #184]
  60:../../dsp_fv/biquad.h ****     }
 8897              		.loc 7 60 9 is_stmt 1 view .LVU2024
 8898              	.LVL437:
  60:../../dsp_fv/biquad.h ****     }
 8899              		.loc 7 60 9 is_stmt 0 view .LVU2025
 8900              	.LBE5723:
 8901              	.LBE5725:
 8902              	.LBE5726:
 8903              	.LBE5750:
 8904              	.LBB5751:
 8905              	.LBI5727:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 445


 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8906              		.loc 8 678 7 is_stmt 1 view .LVU2026
 8907              	.LBB5749:
 8908              	.LBB5746:
 8909              	.LBI5746:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8910              		.loc 8 276 7 view .LVU2027
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8911              		.loc 8 276 7 is_stmt 0 view .LVU2028
 8912              	.LBE5746:
 8913              	.LBB5747:
 8914              	.LBI5747:
 8915              		.loc 16 735 5 is_stmt 1 view .LVU2029
 8916              		.loc 16 735 5 is_stmt 0 view .LVU2030
 8917              	.LBE5747:
 8918              	.LBB5748:
 8919              	.LBI5729:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8920              		.loc 8 333 7 is_stmt 1 view .LVU2031
 8921              	.LBB5745:
 8922              	.LBB5731:
 8923              	.LBI5731:
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8924              		.loc 8 350 7 view .LVU2032
 8925              	.LBB5732:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 8926              		.loc 8 353 2 is_stmt 0 view .LVU2033
 8927 0302 18B1     		cbz	r0, .L341
 8928              	.LVL438:
 8929              	.LBB5733:
 8930              	.LBI5733:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8931              		.loc 16 491 7 is_stmt 1 view .LVU2034
 8932              	.LBB5734:
 8933              	.LBB5735:
 8934              	.LBI5735:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8935              		.loc 15 120 7 view .LVU2035
 8936              	.LBE5735:
 8937              	.LBE5734:
 8938              	.LBE5733:
 8939              	.LBE5732:
 8940              	.LBE5731:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8941              		.loc 8 336 35 is_stmt 0 view .LVU2036
 8942 0304 0599     		ldr	r1, [sp, #20]
 8943              	.LBB5741:
 8944              	.LBB5740:
 8945              	.LBB5739:
 8946              	.LBB5738:
 8947              	.LBB5737:
 8948              	.LBB5736:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8949              		.loc 15 133 19 view .LVU2037
 8950 0306 091A     		subs	r1, r1, r0
 8951 0308 FFF7FEFF 		bl	_ZdlPvj
 8952              	.LVL439:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 446


 8953              	.L341:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8954              		.loc 15 133 19 view .LVU2038
 8955              	.LBE5736:
 8956              	.LBE5737:
 8957              	.LBE5738:
 8958              	.LBE5739:
 8959              	.LBE5740:
 8960              	.LBE5741:
 8961              	.LBB5742:
 8962              	.LBI5742:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 8963              		.loc 8 128 14 is_stmt 1 view .LVU2039
 8964              	.LBB5743:
 8965              	.LBI5743:
 8966              		.loc 14 162 7 view .LVU2040
 8967              	.LBB5744:
 8968              	.LBI5744:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8969              		.loc 15 89 7 view .LVU2041
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8970              		.loc 15 89 7 is_stmt 0 view .LVU2042
 8971              	.LBE5744:
 8972              	.LBE5743:
 8973              	.LBE5742:
 8974              	.LBE5745:
 8975              	.LBE5748:
 8976              	.LBE5749:
 8977              	.LBE5751:
 8978              	.LBB5752:
 8979              	.LBI5752:
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8980              		.loc 8 678 7 is_stmt 1 view .LVU2043
 8981              	.LBB5753:
 8982              	.LBB5754:
 8983              	.LBI5754:
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8984              		.loc 8 276 7 view .LVU2044
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 8985              		.loc 8 276 7 is_stmt 0 view .LVU2045
 8986              	.LBE5754:
 8987              	.LBB5755:
 8988              	.LBI5755:
 8989              		.loc 16 735 5 is_stmt 1 view .LVU2046
 8990              		.loc 16 735 5 is_stmt 0 view .LVU2047
 8991              	.LBE5755:
 8992              	.LBB5756:
 8993              	.LBI5756:
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8994              		.loc 8 333 7 is_stmt 1 view .LVU2048
 8995              	.LBB5757:
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 8996              		.loc 8 335 15 is_stmt 0 view .LVU2049
 8997 030c 0098     		ldr	r0, [sp]
 8998              	.LVL440:
 8999              	.LBB5758:
 9000              	.LBI5758:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 447


 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 9001              		.loc 8 350 7 is_stmt 1 view .LVU2050
 9002              	.LBB5759:
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 9003              		.loc 8 353 2 is_stmt 0 view .LVU2051
 9004 030e 18B1     		cbz	r0, .L254
 9005              	.LVL441:
 9006              	.LBB5760:
 9007              	.LBI5760:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9008              		.loc 16 491 7 is_stmt 1 view .LVU2052
 9009              	.LBB5761:
 9010              	.LBB5762:
 9011              	.LBI5762:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 9012              		.loc 15 120 7 view .LVU2053
 9013              	.LBE5762:
 9014              	.LBE5761:
 9015              	.LBE5760:
 9016              	.LBE5759:
 9017              	.LBE5758:
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 9018              		.loc 8 336 35 is_stmt 0 view .LVU2054
 9019 0310 0299     		ldr	r1, [sp, #8]
 9020              	.LBB5768:
 9021              	.LBB5767:
 9022              	.LBB5766:
 9023              	.LBB5765:
 9024              	.LBB5764:
 9025              	.LBB5763:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9026              		.loc 15 133 19 view .LVU2055
 9027 0312 091A     		subs	r1, r1, r0
 9028 0314 FFF7FEFF 		bl	_ZdlPvj
 9029              	.LVL442:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9030              		.loc 15 133 19 view .LVU2056
 9031              	.LBE5763:
 9032              	.LBE5764:
 9033              	.LBE5765:
 9034              	.LBE5766:
 9035              	.LBE5767:
 9036              	.LBE5768:
 9037              	.LBB5769:
 9038              	.LBI5769:
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 9039              		.loc 8 128 14 is_stmt 1 view .LVU2057
 9040              	.LBB5770:
 9041              	.LBI5770:
 9042              		.loc 14 162 7 view .LVU2058
 9043              	.LBB5771:
 9044              	.LBI5771:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9045              		.loc 15 89 7 view .LVU2059
 9046              	.L254:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9047              		.loc 15 89 7 is_stmt 0 view .LVU2060
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 448


 9048              	.LBE5771:
 9049              	.LBE5770:
 9050              	.LBE5769:
 9051              	.LBE5757:
 9052              	.LBE5756:
 9053              	.LBE5753:
 9054              	.LBE5752:
 120:../../dsp_fv/classicFilters.h **** 
 9055              		.loc 19 120 5 view .LVU2061
 9056 0318 0DB0     		add	sp, sp, #52
 9057              		.cfi_remember_state
 9058              		.cfi_def_cfa_offset 68
 9059              	.LVL443:
 120:../../dsp_fv/classicFilters.h **** 
 9060              		.loc 19 120 5 view .LVU2062
 9061              		@ sp needed
 9062 031a BDEC0A8B 		vldm	sp!, {d8-d12}
 9063              		.cfi_restore 88
 9064              		.cfi_restore 89
 9065              		.cfi_restore 86
 9066              		.cfi_restore 87
 9067              		.cfi_restore 84
 9068              		.cfi_restore 85
 9069              		.cfi_restore 82
 9070              		.cfi_restore 83
 9071              		.cfi_restore 80
 9072              		.cfi_restore 81
 9073              		.cfi_def_cfa_offset 28
 9074 031e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 9075              	.LVL444:
 9076              	.L356:
 9077              		.cfi_restore_state
 9078              	.LBB5772:
 9079              	.LBB5631:
 9080              	.LBB5597:
 9081              	.LBB5595:
 9082              	.LBB5593:
 120:../../dsp_fv/classicFilters.h **** 
 9083              		.loc 19 120 5 view .LVU2063
 9084 0322 0746     		mov	r7, r0
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 9085              		.loc 8 346 18 view .LVU2064
 9086 0324 0646     		mov	r6, r0
 9087 0326 ABE7     		b	.L332
 9088              	.LVL445:
 9089              	.L357:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 9090              		.loc 8 346 18 view .LVU2065
 9091              	.LBE5593:
 9092              	.LBE5595:
 9093              	.LBE5597:
 9094              	.LBE5631:
 9095              	.LBE5772:
 9096              	.LBB5773:
 9097              	.LBB5687:
 9098              	.LBB5654:
 9099              	.LBB5653:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 449


 9100              	.LBB5652:
 9101 0328 8146     		mov	r9, r0
 9102 032a BEE7     		b	.L335
 9103              	.L397:
 9104              		.align	2
 9105              	.L396:
 9106 032c 04000000 		.word	.LC5+4
 9107 0330 04000000 		.word	.LC7+4
 9108 0334 04000000 		.word	.LC6+4
 9109 0338 18000000 		.word	.LC8
 9110 033c FCFFFF7F 		.word	2147483644
 9111 0340 DB0FC940 		.word	1086918619
 9112              	.LVL446:
 9113              	.L394:
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 9114              		.loc 8 346 18 view .LVU2066
 9115              	.LBE5652:
 9116              	.LBE5653:
 9117              	.LBE5654:
 9118              	.LBE5687:
 9119              	.LBE5773:
 9120              	.LBB5774:
 9121              	.LBB5520:
 9122              	.LBB5244:
 9123              	.LBB4639:
 9124              	.LBB4634:
 9125              	.LBI4634:
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
 9126              		.loc 11 2311 7 is_stmt 1 view .LVU2067
 9127              	.LBB4635:
 9128              	.LBI4635:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9129              		.loc 11 186 7 view .LVU2068
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9130              		.loc 11 186 7 is_stmt 0 view .LVU2069
 9131              	.LBE4635:
 9132              	.LBE4634:
 9133              	.LBB4636:
 9134              	.LBI4630:
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
 9135              		.loc 11 2311 7 is_stmt 1 view .LVU2070
 9136              	.LBB4633:
 9137              	.LBI4631:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9138              		.loc 11 186 7 view .LVU2071
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9139              		.loc 11 186 7 is_stmt 0 view .LVU2072
 9140              	.LBE4633:
 9141              	.LBE4636:
 9142              	.LBB4637:
 9143              	.LBI4637:
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 9144              		.loc 12 337 7 is_stmt 1 view .LVU2073
 9145              	.LBB4638:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 9146              		.loc 12 339 2 view .LVU2074
 9147 0344 32B1     		cbz	r2, .L274
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 450


 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 9148              		.loc 12 347 2 view .LVU2075
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 9149              		.loc 12 347 25 is_stmt 0 view .LVU2076
 9150 0346 3146     		mov	r1, r6
 9151 0348 206E     		ldr	r0, [r4, #96]
 9152 034a FFF7FEFF 		bl	memcmp
 9153              	.LVL447:
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 9154              		.loc 12 347 25 view .LVU2077
 9155              	.LBE4638:
 9156              	.LBE4637:
6174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 						    __lhs.size())); }
 9157              		.loc 11 6174 8 view .LVU2078
 9158 034e 0028     		cmp	r0, #0
 9159 0350 7FF48BAE 		bne	.L275
 9160              	.L274:
 9161              	.LVL448:
6174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 						    __lhs.size())); }
 9162              		.loc 11 6174 8 view .LVU2079
 9163              	.LBE4639:
 9164              	.LBE5244:
 9165              	.LBB5245:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 9166              		.loc 11 657 7 is_stmt 1 view .LVU2080
 9167              	.LBB4670:
 9168              	.LBB4668:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9169              		.loc 11 229 7 view .LVU2081
 9170              	.LBB4662:
 9171              	.LBB4660:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 9172              		.loc 11 221 7 view .LVU2082
 9173              	.LBB4646:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9174              		.loc 11 200 7 view .LVU2083
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9175              		.loc 11 200 7 is_stmt 0 view .LVU2084
 9176              	.LBE4646:
 9177              	.LBE4660:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9178              		.loc 11 231 2 view .LVU2085
 9179 0354 AE42     		cmp	r6, r5
 9180 0356 04D0     		beq	.L276
 9181              	.LVL449:
 9182              	.LBB4661:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9183              		.loc 11 236 7 is_stmt 1 view .LVU2086
 9184              	.LBB4659:
 9185              	.LBB4657:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9186              		.loc 16 491 7 view .LVU2087
 9187              	.LBB4654:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 9188              		.loc 15 120 7 view .LVU2088
 9189              	.LBE4654:
 9190              	.LBE4657:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 451


 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9191              		.loc 11 237 34 is_stmt 0 view .LVU2089
 9192 0358 0899     		ldr	r1, [sp, #32]
 9193              	.LBB4658:
 9194              	.LBB4655:
 9195              	.LBB4652:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9196              		.loc 15 133 19 view .LVU2090
 9197 035a 3046     		mov	r0, r6
 9198 035c 0131     		adds	r1, r1, #1
 9199              	.LVL450:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9200              		.loc 15 133 19 view .LVU2091
 9201 035e FFF7FEFF 		bl	_ZdlPvj
 9202              	.LVL451:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9203              		.loc 15 133 19 view .LVU2092
 9204              	.LBE4652:
 9205              	.LBE4655:
 9206              	.LBE4658:
 9207              	.LBE4659:
 9208              	.LBE4661:
 9209              	.LBE4662:
 9210              	.LBE4668:
 9211              	.LBB4669:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9212              		.loc 11 150 14 is_stmt 1 view .LVU2093
 9213              	.LBB4667:
 9214              		.loc 14 162 7 view .LVU2094
 9215              	.LBB4666:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9216              		.loc 15 89 7 view .LVU2095
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9217              		.loc 15 89 7 is_stmt 0 view .LVU2096
 9218              	.LBE4666:
 9219              	.LBE4667:
 9220              	.LBE4669:
 9221              	.LBE4670:
 9222              	.LBE5245:
 9223              	.LBB5246:
 9224              		.loc 14 162 7 is_stmt 1 view .LVU2097
 9225              	.LBB4673:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9226              		.loc 15 89 7 view .LVU2098
 9227              	.L276:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9228              		.loc 15 89 7 is_stmt 0 view .LVU2099
 9229              	.LBE4673:
 9230              	.LBE5246:
 9231              	.LBB5247:
  64:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) / (1 + std::sin(theta_c));
 9232              		.loc 19 64 13 is_stmt 1 view .LVU2100
  64:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) / (1 + std::sin(theta_c));
 9233              		.loc 19 64 35 is_stmt 0 view .LVU2101
 9234 0362 1FED090A 		vldr.32	s0, .L396+20
 9235 0366 29EE000A 		vmul.f32	s0, s18, s0
  64:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) / (1 + std::sin(theta_c));
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 452


 9236              		.loc 19 64 18 view .LVU2102
 9237 036a 80EE299A 		vdiv.f32	s18, s0, s19
 9238              	.LVL452:
  65:../../dsp_fv/classicFilters.h **** 
 9239              		.loc 19 65 13 is_stmt 1 view .LVU2103
 9240              	.LBB5248:
 9241              	.LBI5248:
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 9242              		.loc 25 184 3 view .LVU2104
 9243              	.LBB5249:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 9244              		.loc 25 185 5 view .LVU2105
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 9245              		.loc 25 185 26 is_stmt 0 view .LVU2106
 9246 036e B0EE490A 		vmov.f32	s0, s18
 9247 0372 FFF7FEFF 		bl	cosf
 9248              	.LVL453:
 9249 0376 F0EE408A 		vmov.f32	s17, s0
 9250              	.LVL454:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 9251              		.loc 25 185 26 view .LVU2107
 9252              	.LBE5249:
 9253              	.LBE5248:
 9254              	.LBB5250:
 9255              	.LBB5251:
 9256              		.loc 25 426 26 view .LVU2108
 9257 037a B0EE490A 		vmov.f32	s0, s18
 9258              	.LVL455:
 9259              		.loc 25 426 26 view .LVU2109
 9260              	.LBE5251:
 9261              	.LBI5250:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 9262              		.loc 25 425 3 is_stmt 1 view .LVU2110
 9263              	.LBB5252:
 9264              		.loc 25 426 5 view .LVU2111
 9265              		.loc 25 426 26 is_stmt 0 view .LVU2112
 9266 037e FFF7FEFF 		bl	sinf
 9267              	.LVL456:
 9268              		.loc 25 426 26 view .LVU2113
 9269              	.LBE5252:
 9270              	.LBE5250:
  65:../../dsp_fv/classicFilters.h **** 
 9271              		.loc 19 65 49 view .LVU2114
 9272 0382 F7EE007A 		vmov.f32	s15, #1.0e+0
  67:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(-(1 + gamma) / 2);
 9273              		.loc 19 67 42 view .LVU2115
 9274 0386 B6EE007A 		vmov.f32	s14, #5.0e-1
  65:../../dsp_fv/classicFilters.h **** 
 9275              		.loc 19 65 49 view .LVU2116
 9276 038a 70EE276A 		vadd.f32	s13, s0, s15
 9277              	.LBB5253:
 9278              	.LBB5254:
 9279              	.LBB5255:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9280              		.loc 13 112 47 view .LVU2117
 9281 038e DDE90131 		ldrd	r3, r1, [sp, #4]
 9282              	.LBE5255:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 453


 9283              	.LBE5254:
 9284              	.LBE5253:
  65:../../dsp_fv/classicFilters.h **** 
 9285              		.loc 19 65 68 view .LVU2118
 9286 0392 88EEA69A 		vdiv.f32	s18, s17, s13
 9287              	.LVL457:
  67:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(-(1 + gamma) / 2);
 9288              		.loc 19 67 13 is_stmt 1 view .LVU2119
 9289              	.LBB5271:
 9290              	.LBB5267:
 9291              	.LBB5263:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9292              		.loc 13 112 2 is_stmt 0 view .LVU2120
 9293 0396 8B42     		cmp	r3, r1
 9294              	.LBE5263:
 9295              	.LBE5267:
 9296              	.LBE5271:
  67:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(-(1 + gamma) / 2);
 9297              		.loc 19 67 33 view .LVU2121
 9298 0398 79EE278A 		vadd.f32	s17, s18, s15
  67:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(-(1 + gamma) / 2);
 9299              		.loc 19 67 42 view .LVU2122
 9300 039c 68EE877A 		vmul.f32	s15, s17, s14
 9301 03a0 CDED067A 		vstr.32	s15, [sp, #24]
 9302              	.LVL458:
 9303              	.LBB5272:
 9304              	.LBI5253:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 9305              		.loc 8 1203 7 is_stmt 1 view .LVU2123
 9306              	.LBB5268:
 9307              	.LBI5254:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 9308              		.loc 13 109 7 view .LVU2124
 9309              	.LBB5264:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9310              		.loc 13 112 2 is_stmt 0 view .LVU2125
 9311 03a4 00F04081 		beq	.L278
 9312              	.LVL459:
 9313              	.LBB5256:
 9314              	.LBI5256:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 9315              		.loc 16 507 2 is_stmt 1 view .LVU2126
 9316              	.LBB5257:
 9317              	.LBI5257:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9318              		.loc 15 148 2 view .LVU2127
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9319              		.loc 15 148 2 is_stmt 0 view .LVU2128
 9320              	.LBE5257:
 9321              	.LBE5256:
 9322              	.LBE5264:
 9323              	.LBE5268:
 9324              	.LBE5272:
 9325              	.LBE5247:
 9326              	.LBE5520:
 9327              	.LBE5774:
 9328              		.loc 24 175 3 is_stmt 1 view .LVU2129
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 454


 9329              	.LBB5775:
 9330              	.LBB5521:
 9331              	.LBB5355:
 9332              	.LBB5273:
 9333              	.LBB5269:
 9334              	.LBB5265:
 9335              	.LBB5260:
 9336              	.LBB5259:
 9337              	.LBB5258:
 9338              		.loc 15 150 4 is_stmt 0 view .LVU2130
 9339 03a8 E3EC017A 		vstmia.32	r3!, {s15}
 9340              	.LVL460:
 9341              		.loc 15 150 4 view .LVU2131
 9342              	.LBE5258:
 9343              	.LBE5259:
 9344              	.LBE5260:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 9345              		.loc 13 117 6 view .LVU2132
 9346 03ac 0193     		str	r3, [sp, #4]
 9347              	.L279:
 9348              	.LVL461:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 9349              		.loc 13 117 6 view .LVU2133
 9350              	.LBE5265:
 9351              	.LBE5269:
 9352              	.LBE5273:
  68:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(0.0f);
 9353              		.loc 19 68 13 is_stmt 1 view .LVU2134
  68:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(0.0f);
 9354              		.loc 19 68 43 is_stmt 0 view .LVU2135
 9355 03ae F6EE007A 		vmov.f32	s15, #5.0e-1
 9356              	.LBB5274:
 9357              	.LBB5275:
 9358              	.LBB5276:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9359              		.loc 13 112 2 view .LVU2136
 9360 03b2 9942     		cmp	r1, r3
 9361              	.LBE5276:
 9362              	.LBE5275:
 9363              	.LBE5274:
  68:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(0.0f);
 9364              		.loc 19 68 43 view .LVU2137
 9365 03b4 68EEE77A 		vnmul.f32	s15, s17, s15
 9366 03b8 CDED067A 		vstr.32	s15, [sp, #24]
 9367              	.LVL462:
 9368              	.LBB5292:
 9369              	.LBI5274:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 9370              		.loc 8 1203 7 is_stmt 1 view .LVU2138
 9371              	.LBB5288:
 9372              	.LBI5275:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 9373              		.loc 13 109 7 view .LVU2139
 9374              	.LBB5284:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9375              		.loc 13 112 2 is_stmt 0 view .LVU2140
 9376 03bc 00F02D81 		beq	.L280
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 455


 9377              	.LVL463:
 9378              	.LBB5277:
 9379              	.LBI5277:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 9380              		.loc 16 507 2 is_stmt 1 view .LVU2141
 9381              	.LBB5278:
 9382              	.LBI5278:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9383              		.loc 15 148 2 view .LVU2142
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9384              		.loc 15 148 2 is_stmt 0 view .LVU2143
 9385              	.LBE5278:
 9386              	.LBE5277:
 9387              	.LBE5284:
 9388              	.LBE5288:
 9389              	.LBE5292:
 9390              	.LBE5355:
 9391              	.LBE5521:
 9392              	.LBE5775:
 9393              		.loc 24 175 3 is_stmt 1 view .LVU2144
 9394              	.LBB5776:
 9395              	.LBB5522:
 9396              	.LBB5356:
 9397              	.LBB5293:
 9398              	.LBB5289:
 9399              	.LBB5285:
 9400              	.LBB5281:
 9401              	.LBB5280:
 9402              	.LBB5279:
 9403              		.loc 15 150 4 is_stmt 0 view .LVU2145
 9404 03c0 E3EC017A 		vstmia.32	r3!, {s15}
 9405              	.LVL464:
 9406              		.loc 15 150 4 view .LVU2146
 9407              	.LBE5279:
 9408              	.LBE5280:
 9409              	.LBE5281:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 9410              		.loc 13 117 6 view .LVU2147
 9411 03c4 0193     		str	r3, [sp, #4]
 9412              	.L281:
 9413              	.LVL465:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 9414              		.loc 13 117 6 view .LVU2148
 9415              	.LBE5285:
 9416              	.LBE5289:
 9417              	.LBE5293:
  69:../../dsp_fv/classicFilters.h **** 
 9418              		.loc 19 69 13 is_stmt 1 view .LVU2149
  69:../../dsp_fv/classicFilters.h **** 
 9419              		.loc 19 69 30 is_stmt 0 view .LVU2150
 9420 03c6 0022     		movs	r2, #0
 9421              	.LBB5294:
 9422              	.LBB5295:
 9423              	.LBB5296:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9424              		.loc 13 112 2 view .LVU2151
 9425 03c8 9942     		cmp	r1, r3
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 456


 9426              	.LBE5296:
 9427              	.LBE5295:
 9428              	.LBE5294:
  69:../../dsp_fv/classicFilters.h **** 
 9429              		.loc 19 69 30 view .LVU2152
 9430 03ca 0692     		str	r2, [sp, #24]	@ float
 9431              	.LVL466:
 9432              	.LBB5312:
 9433              	.LBI5294:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 9434              		.loc 8 1203 7 is_stmt 1 view .LVU2153
 9435              	.LBB5308:
 9436              	.LBI5295:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 9437              		.loc 13 109 7 view .LVU2154
 9438              	.LBB5304:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9439              		.loc 13 112 2 is_stmt 0 view .LVU2155
 9440 03cc 00F02081 		beq	.L282
 9441              	.LVL467:
 9442              	.LBB5297:
 9443              	.LBI5297:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 9444              		.loc 16 507 2 is_stmt 1 view .LVU2156
 9445              	.LBB5298:
 9446              	.LBI5298:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9447              		.loc 15 148 2 view .LVU2157
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9448              		.loc 15 148 2 is_stmt 0 view .LVU2158
 9449              	.LBE5298:
 9450              	.LBE5297:
 9451              	.LBE5304:
 9452              	.LBE5308:
 9453              	.LBE5312:
 9454              	.LBE5356:
 9455              	.LBE5522:
 9456              	.LBE5776:
 9457              		.loc 24 175 3 is_stmt 1 view .LVU2159
 9458              	.LBB5777:
 9459              	.LBB5523:
 9460              	.LBB5357:
 9461              	.LBB5313:
 9462              	.LBB5309:
 9463              	.LBB5305:
 9464              	.LBB5301:
 9465              	.LBB5300:
 9466              	.LBB5299:
 9467              		.loc 15 150 4 is_stmt 0 view .LVU2160
 9468 03d0 43F8042B 		str	r2, [r3], #4	@ float
 9469              	.LVL468:
 9470              		.loc 15 150 4 view .LVU2161
 9471              	.LBE5299:
 9472              	.LBE5300:
 9473              	.LBE5301:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 9474              		.loc 13 117 6 view .LVU2162
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 457


 9475 03d4 0193     		str	r3, [sp, #4]
 9476              	.L283:
 9477              	.LVL469:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 9478              		.loc 13 117 6 view .LVU2163
 9479              	.LBE5305:
 9480              	.LBE5309:
 9481              	.LBE5313:
  71:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(-gamma);
 9482              		.loc 19 71 13 is_stmt 1 view .LVU2164
  71:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(-gamma);
 9483              		.loc 19 71 29 is_stmt 0 view .LVU2165
 9484 03d6 0022     		movs	r2, #0
 9485              	.LBB5314:
 9486              	.LBB5315:
 9487              	.LBB5316:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9488              		.loc 13 112 47 view .LVU2166
 9489 03d8 DDE90431 		ldrd	r3, r1, [sp, #16]
 9490              	.LBE5316:
 9491              	.LBE5315:
 9492              	.LBE5314:
  71:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(-gamma);
 9493              		.loc 19 71 29 view .LVU2167
 9494 03dc 0692     		str	r2, [sp, #24]	@ float
 9495              	.LVL470:
 9496              	.LBB5330:
 9497              	.LBI5314:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 9498              		.loc 8 1203 7 is_stmt 1 view .LVU2168
 9499              	.LBB5327:
 9500              	.LBI5315:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 9501              		.loc 13 109 7 view .LVU2169
 9502              	.LBB5324:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9503              		.loc 13 112 2 is_stmt 0 view .LVU2170
 9504 03de 8B42     		cmp	r3, r1
 9505 03e0 00F00F81 		beq	.L284
 9506              	.LVL471:
 9507              	.LBB5317:
 9508              	.LBI5317:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 9509              		.loc 16 507 2 is_stmt 1 view .LVU2171
 9510              	.LBB5318:
 9511              	.LBI5318:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9512              		.loc 15 148 2 view .LVU2172
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9513              		.loc 15 148 2 is_stmt 0 view .LVU2173
 9514              	.LBE5318:
 9515              	.LBE5317:
 9516              	.LBE5324:
 9517              	.LBE5327:
 9518              	.LBE5330:
 9519              	.LBE5357:
 9520              	.LBE5523:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 458


 9521              	.LBE5777:
 9522              		.loc 24 175 3 is_stmt 1 view .LVU2174
 9523              	.LBB5778:
 9524              	.LBB5524:
 9525              	.LBB5358:
 9526              	.LBB5331:
 9527              	.LBB5328:
 9528              	.LBB5325:
 9529              	.LBB5321:
 9530              	.LBB5320:
 9531              	.LBB5319:
 9532              		.loc 15 150 4 is_stmt 0 view .LVU2175
 9533 03e4 43F8042B 		str	r2, [r3], #4	@ float
 9534              	.LVL472:
 9535              		.loc 15 150 4 view .LVU2176
 9536              	.LBE5319:
 9537              	.LBE5320:
 9538              	.LBE5321:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 9539              		.loc 13 117 6 view .LVU2177
 9540 03e8 0493     		str	r3, [sp, #16]
 9541              	.L285:
 9542              	.LVL473:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 9543              		.loc 13 117 6 view .LVU2178
 9544              	.LBE5325:
 9545              	.LBE5328:
 9546              	.LBE5331:
  72:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
 9547              		.loc 19 72 13 is_stmt 1 view .LVU2179
  72:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
 9548              		.loc 19 72 30 is_stmt 0 view .LVU2180
 9549 03ea B1EE499A 		vneg.f32	s18, s18
 9550              	.LVL474:
 9551              	.LBB5332:
 9552              	.LBB5333:
 9553              	.LBB5334:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9554              		.loc 13 112 2 view .LVU2181
 9555 03ee 9942     		cmp	r1, r3
 9556              	.LBE5334:
 9557              	.LBE5333:
 9558              	.LBE5332:
  72:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
 9559              		.loc 19 72 30 view .LVU2182
 9560 03f0 8DED069A 		vstr.32	s18, [sp, #24]
 9561              	.LVL475:
 9562              	.LBB5346:
 9563              	.LBI5332:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 9564              		.loc 8 1203 7 is_stmt 1 view .LVU2183
 9565              	.LBB5343:
 9566              	.LBI5333:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 9567              		.loc 13 109 7 view .LVU2184
 9568              	.LBB5340:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 459


 9569              		.loc 13 112 2 is_stmt 0 view .LVU2185
 9570 03f4 00F0FE80 		beq	.L328
 9571              	.LVL476:
 9572              	.LBB5335:
 9573              	.LBI5335:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 9574              		.loc 16 507 2 is_stmt 1 view .LVU2186
 9575              	.LBB5336:
 9576              	.LBI5336:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9577              		.loc 15 148 2 view .LVU2187
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9578              		.loc 15 148 2 is_stmt 0 view .LVU2188
 9579              	.LBE5336:
 9580              	.LBE5335:
 9581              	.LBE5340:
 9582              	.LBE5343:
 9583              	.LBE5346:
 9584              	.LBE5358:
 9585              	.LBE5524:
 9586              	.LBE5778:
 9587              		.loc 24 175 3 is_stmt 1 view .LVU2189
 9588              	.LBB5779:
 9589              	.LBB5525:
 9590              	.LBB5359:
 9591              	.LBB5347:
 9592              	.LBB5344:
 9593              	.LBB5341:
 9594              	.LBB5339:
 9595              	.LBB5338:
 9596              	.LBB5337:
 9597              		.loc 15 150 4 is_stmt 0 view .LVU2190
 9598 03f8 A3EC019A 		vstmia.32	r3!, {s18}
 9599              	.LVL477:
 9600              		.loc 15 150 4 view .LVU2191
 9601              	.LBE5337:
 9602              	.LBE5338:
 9603              	.LBE5339:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 9604              		.loc 13 117 6 view .LVU2192
 9605 03fc 0493     		str	r3, [sp, #16]
 9606              	.LVL478:
 9607              	.L329:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 9608              		.loc 13 117 6 view .LVU2193
 9609              	.LBE5341:
 9610              	.LBE5344:
 9611              	.LBE5347:
 9612              	.LBE5359:
 9613              	.LBB5360:
 9614              	.LBB5082:
 115:../../dsp_fv/classicFilters.h **** 
 9615              		.loc 19 115 13 is_stmt 1 view .LVU2194
 115:../../dsp_fv/classicFilters.h **** 
 9616              		.loc 19 115 29 is_stmt 0 view .LVU2195
 9617 03fe 0022     		movs	r2, #0
 9618              	.LBB4914:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 460


 9619              	.LBB4910:
 9620              	.LBB4906:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9621              		.loc 13 112 2 view .LVU2196
 9622 0400 8B42     		cmp	r3, r1
 9623              	.LBE4906:
 9624              	.LBE4910:
 9625              	.LBE4914:
 115:../../dsp_fv/classicFilters.h **** 
 9626              		.loc 19 115 29 view .LVU2197
 9627 0402 0692     		str	r2, [sp, #24]	@ float
 9628              	.LVL479:
 9629              	.LBB4915:
 9630              	.LBI4895:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 9631              		.loc 8 1203 7 is_stmt 1 view .LVU2198
 9632              	.LBB4911:
 9633              	.LBI4896:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 9634              		.loc 13 109 7 view .LVU2199
 9635              	.LBB4907:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9636              		.loc 13 112 2 is_stmt 0 view .LVU2200
 9637 0404 7FF42AAF 		bne	.L391
 9638              	.LVL480:
 9639              	.LBB4903:
 9640              	.LBI4903:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 9641              		.loc 8 829 7 is_stmt 1 view .LVU2201
 9642              	.LBB4904:
 9643              	.LBI4904:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 9644              		.loc 23 978 7 view .LVU2202
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 9645              		.loc 23 978 7 is_stmt 0 view .LVU2203
 9646              	.LBE4904:
 9647              	.LBE4903:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9648              		.loc 13 121 21 view .LVU2204
 9649 0408 06AA     		add	r2, sp, #24
 9650              	.LVL481:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9651              		.loc 13 121 21 view .LVU2205
 9652 040a 1946     		mov	r1, r3
 9653 040c 03A8     		add	r0, sp, #12
 9654              	.LVL482:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9655              		.loc 13 121 21 view .LVU2206
 9656 040e FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 9657              	.LVL483:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9658              		.loc 13 121 21 view .LVU2207
 9659 0412 26E7     		b	.L272
 9660              	.LVL484:
 9661              	.L395:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 9662              		.loc 13 121 21 view .LVU2208
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 461


 9663              	.LBE4907:
 9664              	.LBE4911:
 9665              	.LBE4915:
 9666              	.LBE5082:
 9667              	.LBB5083:
 9668              	.LBB4715:
 9669              	.LBB4710:
 9670              	.LBI4710:
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
 9671              		.loc 11 2311 7 is_stmt 1 view .LVU2209
 9672              	.LBB4711:
 9673              	.LBI4711:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9674              		.loc 11 186 7 view .LVU2210
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9675              		.loc 11 186 7 is_stmt 0 view .LVU2211
 9676              	.LBE4711:
 9677              	.LBE4710:
 9678              	.LBB4712:
 9679              	.LBI4706:
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data(); }
 9680              		.loc 11 2311 7 is_stmt 1 view .LVU2212
 9681              	.LBB4709:
 9682              	.LBI4707:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9683              		.loc 11 186 7 view .LVU2213
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 9684              		.loc 11 186 7 is_stmt 0 view .LVU2214
 9685              	.LBE4709:
 9686              	.LBE4712:
 9687              	.LBB4713:
 9688              	.LBI4713:
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 9689              		.loc 12 337 7 is_stmt 1 view .LVU2215
 9690              	.LBB4714:
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 9691              		.loc 12 339 2 view .LVU2216
 9692 0414 32B1     		cbz	r2, .L291
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 9693              		.loc 12 347 2 view .LVU2217
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 9694              		.loc 12 347 25 is_stmt 0 view .LVU2218
 9695 0416 3146     		mov	r1, r6
 9696 0418 206E     		ldr	r0, [r4, #96]
 9697 041a FFF7FEFF 		bl	memcmp
 9698              	.LVL485:
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 9699              		.loc 12 347 25 view .LVU2219
 9700              	.LBE4714:
 9701              	.LBE4713:
6174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 						    __lhs.size())); }
 9702              		.loc 11 6174 8 view .LVU2220
 9703 041e 0028     		cmp	r0, #0
 9704 0420 7FF436AE 		bne	.L292
 9705              	.L291:
 9706              	.LVL486:
6174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 						    __lhs.size())); }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 462


 9707              		.loc 11 6174 8 view .LVU2221
 9708              	.LBE4715:
 9709              	.LBE5083:
 9710              	.LBB5084:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 9711              		.loc 11 657 7 is_stmt 1 view .LVU2222
 9712              	.LBB4746:
 9713              	.LBB4744:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9714              		.loc 11 229 7 view .LVU2223
 9715              	.LBB4738:
 9716              	.LBB4736:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 9717              		.loc 11 221 7 view .LVU2224
 9718              	.LBB4722:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9719              		.loc 11 200 7 view .LVU2225
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9720              		.loc 11 200 7 is_stmt 0 view .LVU2226
 9721              	.LBE4722:
 9722              	.LBE4736:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9723              		.loc 11 231 2 view .LVU2227
 9724 0424 AE42     		cmp	r6, r5
 9725 0426 04D0     		beq	.L345
 9726              	.LVL487:
 9727              	.LBB4737:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9728              		.loc 11 236 7 is_stmt 1 view .LVU2228
 9729              	.LBB4735:
 9730              	.LBB4733:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9731              		.loc 16 491 7 view .LVU2229
 9732              	.LBB4730:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 9733              		.loc 15 120 7 view .LVU2230
 9734              	.LBE4730:
 9735              	.LBE4733:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9736              		.loc 11 237 34 is_stmt 0 view .LVU2231
 9737 0428 0899     		ldr	r1, [sp, #32]
 9738              	.LBB4734:
 9739              	.LBB4731:
 9740              	.LBB4728:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9741              		.loc 15 133 19 view .LVU2232
 9742 042a 3046     		mov	r0, r6
 9743 042c 0131     		adds	r1, r1, #1
 9744              	.LVL488:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9745              		.loc 15 133 19 view .LVU2233
 9746 042e FFF7FEFF 		bl	_ZdlPvj
 9747              	.LVL489:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9748              		.loc 15 133 19 view .LVU2234
 9749              	.LBE4728:
 9750              	.LBE4731:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 463


 9751              	.LBE4734:
 9752              	.LBE4735:
 9753              	.LBE4737:
 9754              	.LBE4738:
 9755              	.LBE4744:
 9756              	.LBB4745:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9757              		.loc 11 150 14 is_stmt 1 view .LVU2235
 9758              	.LBB4743:
 9759              		.loc 14 162 7 view .LVU2236
 9760              	.LBB4742:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9761              		.loc 15 89 7 view .LVU2237
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9762              		.loc 15 89 7 is_stmt 0 view .LVU2238
 9763              	.LBE4742:
 9764              	.LBE4743:
 9765              	.LBE4745:
 9766              	.LBE4746:
 9767              	.LBE5084:
 9768              	.LBB5085:
 9769              		.loc 14 162 7 is_stmt 1 view .LVU2239
 9770              	.LBB4749:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9771              		.loc 15 89 7 view .LVU2240
 9772              	.L345:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9773              		.loc 15 89 7 is_stmt 0 view .LVU2241
 9774              	.LBE4749:
 9775              	.LBE5085:
 9776              	.LBB5086:
  77:../../dsp_fv/classicFilters.h ****             auto d = 1 / qualityFactor;
 9777              		.loc 19 77 13 is_stmt 1 view .LVU2242
  77:../../dsp_fv/classicFilters.h ****             auto d = 1 / qualityFactor;
 9778              		.loc 19 77 35 is_stmt 0 view .LVU2243
 9779 0432 1FED3D0A 		vldr.32	s0, .L396+20
  78:../../dsp_fv/classicFilters.h ****             auto beta = 0.5 * (1 - d / 2 * std::sin(theta_c)) / (1 + d / 2 * std::sin(theta_c));
 9780              		.loc 19 78 18 view .LVU2244
 9781 0436 B7EE00BA 		vmov.f32	s22, #1.0e+0
  79:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 9782              		.loc 19 79 38 view .LVU2245
 9783 043a B6EE007A 		vmov.f32	s14, #5.0e-1
  77:../../dsp_fv/classicFilters.h ****             auto d = 1 / qualityFactor;
 9784              		.loc 19 77 35 view .LVU2246
 9785 043e 29EE000A 		vmul.f32	s0, s18, s0
  78:../../dsp_fv/classicFilters.h ****             auto beta = 0.5 * (1 - d / 2 * std::sin(theta_c)) / (1 + d / 2 * std::sin(theta_c));
 9786              		.loc 19 78 18 view .LVU2247
 9787 0442 CBEE287A 		vdiv.f32	s15, s22, s17
  77:../../dsp_fv/classicFilters.h ****             auto d = 1 / qualityFactor;
 9788              		.loc 19 77 18 view .LVU2248
 9789 0446 80EE299A 		vdiv.f32	s18, s0, s19
 9790              	.LVL490:
  78:../../dsp_fv/classicFilters.h ****             auto beta = 0.5 * (1 - d / 2 * std::sin(theta_c)) / (1 + d / 2 * std::sin(theta_c));
 9791              		.loc 19 78 13 is_stmt 1 view .LVU2249
  79:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 9792              		.loc 19 79 13 view .LVU2250
  79:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 464


 9793              		.loc 19 79 29 is_stmt 0 view .LVU2251
 9794 044a B6EE00AB 		vmov.f64	d10, #5.0e-1
  79:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 9795              		.loc 19 79 38 view .LVU2252
 9796 044e 67EE878A 		vmul.f32	s17, s15, s14
 9797              	.LVL491:
 9798              	.LBB5087:
 9799              	.LBI5087:
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 9800              		.loc 25 425 3 is_stmt 1 view .LVU2253
 9801              	.LBB5088:
 9802              		.loc 25 426 5 view .LVU2254
 9803              		.loc 25 426 26 is_stmt 0 view .LVU2255
 9804 0452 B0EE490A 		vmov.f32	s0, s18
 9805 0456 FFF7FEFF 		bl	sinf
 9806              	.LVL492:
 9807              	.LBE5088:
 9808              	.LBE5087:
  79:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 9809              		.loc 19 79 34 view .LVU2256
 9810 045a B0EE4B6A 		vmov.f32	s12, s22
 9811              	.LBB5090:
 9812              	.LBB5089:
 9813              		.loc 25 426 26 view .LVU2257
 9814 045e F0EE407A 		vmov.f32	s15, s0
 9815              	.LBE5089:
 9816              	.LBE5090:
 9817              	.LBB5091:
 9818              	.LBB5092:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 9819              		.loc 25 185 26 view .LVU2258
 9820 0462 B0EE490A 		vmov.f32	s0, s18
 9821              	.LVL493:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 9822              		.loc 25 185 26 view .LVU2259
 9823              	.LBE5092:
 9824              	.LBE5091:
  79:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 9825              		.loc 19 79 34 view .LVU2260
 9826 0466 A8EEE76A 		vfms.f32	s12, s17, s15
 9827              	.LVL494:
  79:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 9828              		.loc 19 79 34 view .LVU2261
 9829              	.LBE5086:
 9830              	.LBE5360:
 9831              	.LBE5525:
 9832              	.LBE5779:
 9833              		.loc 25 426 5 is_stmt 1 view .LVU2262
 9834              	.LBB5780:
 9835              	.LBB5526:
 9836              	.LBB5361:
 9837              	.LBB5216:
  79:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 9838              		.loc 19 79 68 is_stmt 0 view .LVU2263
 9839 046a A8EEA7BA 		vfma.f32	s22, s17, s15
  79:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 9840              		.loc 19 79 34 view .LVU2264
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 465


 9841 046e B7EEC66A 		vcvt.f64.f32	d6, s12
  79:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 9842              		.loc 19 79 68 view .LVU2265
 9843 0472 B7EECB7A 		vcvt.f64.f32	d7, s22
  79:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 9844              		.loc 19 79 29 view .LVU2266
 9845 0476 26EE0A6B 		vmul.f64	d6, d6, d10
  79:../../dsp_fv/classicFilters.h ****             auto gamma = std::cos(theta_c) * (0.5 + beta);
 9846              		.loc 19 79 95 view .LVU2267
 9847 047a 86EE07BB 		vdiv.f64	d11, d6, d7
 9848              	.LVL495:
  80:../../dsp_fv/classicFilters.h **** 
 9849              		.loc 19 80 13 is_stmt 1 view .LVU2268
 9850              	.LBB5094:
 9851              	.LBI5091:
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 9852              		.loc 25 184 3 view .LVU2269
 9853              	.LBB5093:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 9854              		.loc 25 185 5 view .LVU2270
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 9855              		.loc 25 185 26 is_stmt 0 view .LVU2271
 9856 047e FFF7FEFF 		bl	cosf
 9857              	.LVL496:
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 9858              		.loc 25 185 26 view .LVU2272
 9859              	.LBE5093:
 9860              	.LBE5094:
  80:../../dsp_fv/classicFilters.h **** 
 9861              		.loc 19 80 34 view .LVU2273
 9862 0482 B7EEC00A 		vcvt.f64.f32	d0, s0
 9863              	.LBB5095:
 9864              	.LBB5096:
 9865              	.LBB5097:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9866              		.loc 13 112 47 view .LVU2274
 9867 0486 DDE90131 		ldrd	r3, r1, [sp, #4]
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9868              		.loc 13 112 2 view .LVU2275
 9869 048a 8B42     		cmp	r3, r1
 9870              	.LBE5097:
 9871              	.LBE5096:
 9872              	.LBE5095:
  80:../../dsp_fv/classicFilters.h **** 
 9873              		.loc 19 80 51 view .LVU2276
 9874 048c 3BEE0ACB 		vadd.f64	d12, d11, d10
  80:../../dsp_fv/classicFilters.h **** 
 9875              		.loc 19 80 57 view .LVU2277
 9876 0490 20EE0C9B 		vmul.f64	d9, d0, d12
 9877              	.LVL497:
  82:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((0.5 + beta - gamma));
 9878              		.loc 19 82 13 is_stmt 1 view .LVU2278
  82:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((0.5 + beta - gamma));
 9879              		.loc 19 82 42 is_stmt 0 view .LVU2279
 9880 0494 3CEE49CB 		vsub.f64	d12, d12, d9
  82:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((0.5 + beta - gamma));
 9881              		.loc 19 82 51 view .LVU2280
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 466


 9882 0498 2CEE0AAB 		vmul.f64	d10, d12, d10
 9883 049c B7EECAAB 		vcvt.f32.f64	s20, d10
 9884 04a0 8DED06AA 		vstr.32	s20, [sp, #24]
 9885              	.LVL498:
 9886              	.LBB5111:
 9887              	.LBI5095:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 9888              		.loc 8 1203 7 is_stmt 1 view .LVU2281
 9889              	.LBB5108:
 9890              	.LBI5096:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 9891              		.loc 13 109 7 view .LVU2282
 9892              	.LBB5105:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9893              		.loc 13 112 2 is_stmt 0 view .LVU2283
 9894 04a4 00F0CE80 		beq	.L294
 9895              	.LVL499:
 9896              	.LBB5098:
 9897              	.LBI5098:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 9898              		.loc 16 507 2 is_stmt 1 view .LVU2284
 9899              	.LBB5099:
 9900              	.LBI5099:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9901              		.loc 15 148 2 view .LVU2285
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9902              		.loc 15 148 2 is_stmt 0 view .LVU2286
 9903              	.LBE5099:
 9904              	.LBE5098:
 9905              	.LBE5105:
 9906              	.LBE5108:
 9907              	.LBE5111:
 9908              	.LBE5216:
 9909              	.LBE5361:
 9910              	.LBE5526:
 9911              	.LBE5780:
 9912              		.loc 24 175 3 is_stmt 1 view .LVU2287
 9913              	.LBB5781:
 9914              	.LBB5527:
 9915              	.LBB5362:
 9916              	.LBB5217:
 9917              	.LBB5112:
 9918              	.LBB5109:
 9919              	.LBB5106:
 9920              	.LBB5102:
 9921              	.LBB5101:
 9922              	.LBB5100:
 9923              		.loc 15 150 4 is_stmt 0 view .LVU2288
 9924 04a8 A3EC01AA 		vstmia.32	r3!, {s20}
 9925              	.LVL500:
 9926              		.loc 15 150 4 view .LVU2289
 9927              	.LBE5100:
 9928              	.LBE5101:
 9929              	.LBE5102:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 9930              		.loc 13 117 6 view .LVU2290
 9931 04ac 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 467


 9932              	.L295:
 9933              	.LVL501:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 9934              		.loc 13 117 6 view .LVU2291
 9935              	.LBE5106:
 9936              	.LBE5109:
 9937              	.LBE5112:
  83:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((0.5 + beta - gamma) / 2);
 9938              		.loc 19 83 13 is_stmt 1 view .LVU2292
  83:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((0.5 + beta - gamma) / 2);
 9939              		.loc 19 83 42 is_stmt 0 view .LVU2293
 9940 04ae B7EECCCB 		vcvt.f32.f64	s24, d12
 9941              	.LBB5113:
 9942              	.LBB5114:
 9943              	.LBB5115:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9944              		.loc 13 112 2 view .LVU2294
 9945 04b2 8B42     		cmp	r3, r1
 9946              	.LBE5115:
 9947              	.LBE5114:
 9948              	.LBE5113:
  83:../../dsp_fv/classicFilters.h ****             aCoeff.push_back((0.5 + beta - gamma) / 2);
 9949              		.loc 19 83 42 view .LVU2295
 9950 04b4 8DED06CA 		vstr.32	s24, [sp, #24]
 9951              	.LVL502:
 9952              	.LBB5131:
 9953              	.LBI5113:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 9954              		.loc 8 1203 7 is_stmt 1 view .LVU2296
 9955              	.LBB5127:
 9956              	.LBI5114:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 9957              		.loc 13 109 7 view .LVU2297
 9958              	.LBB5123:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 9959              		.loc 13 112 2 is_stmt 0 view .LVU2298
 9960 04b8 00F0BD80 		beq	.L296
 9961              	.LVL503:
 9962              	.LBB5116:
 9963              	.LBI5116:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 9964              		.loc 16 507 2 is_stmt 1 view .LVU2299
 9965              	.LBB5117:
 9966              	.LBI5117:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9967              		.loc 15 148 2 view .LVU2300
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 9968              		.loc 15 148 2 is_stmt 0 view .LVU2301
 9969              	.LBE5117:
 9970              	.LBE5116:
 9971              	.LBE5123:
 9972              	.LBE5127:
 9973              	.LBE5131:
 9974              	.LBE5217:
 9975              	.LBE5362:
 9976              	.LBE5527:
 9977              	.LBE5781:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 468


 9978              		.loc 24 175 3 is_stmt 1 view .LVU2302
 9979              	.LBB5782:
 9980              	.LBB5528:
 9981              	.LBB5363:
 9982              	.LBB5218:
 9983              	.LBB5132:
 9984              	.LBB5128:
 9985              	.LBB5124:
 9986              	.LBB5120:
 9987              	.LBB5119:
 9988              	.LBB5118:
 9989              		.loc 15 150 4 is_stmt 0 view .LVU2303
 9990 04bc A3EC01CA 		vstmia.32	r3!, {s24}
 9991              	.LVL504:
 9992              		.loc 15 150 4 view .LVU2304
 9993              	.LBE5118:
 9994              	.LBE5119:
 9995              	.LBE5120:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 9996              		.loc 13 117 6 view .LVU2305
 9997 04c0 0193     		str	r3, [sp, #4]
 9998              	.L297:
 9999              	.LVL505:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10000              		.loc 13 117 6 view .LVU2306
 10001              	.LBE5124:
 10002              	.LBE5128:
 10003              	.LBE5132:
  84:../../dsp_fv/classicFilters.h **** 
 10004              		.loc 19 84 13 is_stmt 1 view .LVU2307
 10005              	.LBB5133:
 10006              	.LBB5134:
 10007              	.LBB5135:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10008              		.loc 13 112 2 is_stmt 0 view .LVU2308
 10009 04c2 8B42     		cmp	r3, r1
 10010              	.LBE5135:
 10011              	.LBE5134:
 10012              	.LBE5133:
  84:../../dsp_fv/classicFilters.h **** 
 10013              		.loc 19 84 51 view .LVU2309
 10014 04c4 8DED06AA 		vstr.32	s20, [sp, #24]
 10015              	.LVL506:
 10016              	.LBB5151:
 10017              	.LBI5133:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 10018              		.loc 8 1203 7 is_stmt 1 view .LVU2310
 10019              	.LBB5147:
 10020              	.LBI5134:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 10021              		.loc 13 109 7 view .LVU2311
 10022              	.LBB5143:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10023              		.loc 13 112 2 is_stmt 0 view .LVU2312
 10024 04c8 00F0D180 		beq	.L298
 10025              	.LVL507:
 10026              	.LBB5136:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 469


 10027              	.LBI5136:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 10028              		.loc 16 507 2 is_stmt 1 view .LVU2313
 10029              	.LBB5137:
 10030              	.LBI5137:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10031              		.loc 15 148 2 view .LVU2314
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10032              		.loc 15 148 2 is_stmt 0 view .LVU2315
 10033              	.LBE5137:
 10034              	.LBE5136:
 10035              	.LBE5143:
 10036              	.LBE5147:
 10037              	.LBE5151:
 10038              	.LBE5218:
 10039              	.LBE5363:
 10040              	.LBE5528:
 10041              	.LBE5782:
 10042              		.loc 24 175 3 is_stmt 1 view .LVU2316
 10043              	.LBB5783:
 10044              	.LBB5529:
 10045              	.LBB5364:
 10046              	.LBB5219:
 10047              	.LBB5152:
 10048              	.LBB5148:
 10049              	.LBB5144:
 10050              	.LBB5140:
 10051              	.LBB5139:
 10052              	.LBB5138:
 10053              		.loc 15 150 4 is_stmt 0 view .LVU2317
 10054 04cc A3EC01AA 		vstmia.32	r3!, {s20}
 10055              	.LVL508:
 10056              		.loc 15 150 4 view .LVU2318
 10057              	.LBE5138:
 10058              	.LBE5139:
 10059              	.LBE5140:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10060              		.loc 13 117 6 view .LVU2319
 10061 04d0 0193     		str	r3, [sp, #4]
 10062              	.L299:
 10063              	.LVL509:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10064              		.loc 13 117 6 view .LVU2320
 10065              	.LBE5144:
 10066              	.LBE5148:
 10067              	.LBE5152:
  86:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(-2 * gamma);
 10068              		.loc 19 86 13 is_stmt 1 view .LVU2321
  86:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(-2 * gamma);
 10069              		.loc 19 86 29 is_stmt 0 view .LVU2322
 10070 04d2 4FF07E52 		mov	r2, #1065353216
 10071              	.LBB5153:
 10072              	.LBB5154:
 10073              	.LBB5155:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10074              		.loc 13 112 47 view .LVU2323
 10075 04d6 DDE90431 		ldrd	r3, r1, [sp, #16]
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 470


 10076              	.LBE5155:
 10077              	.LBE5154:
 10078              	.LBE5153:
  86:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(-2 * gamma);
 10079              		.loc 19 86 29 view .LVU2324
 10080 04da 0692     		str	r2, [sp, #24]	@ float
 10081              	.LVL510:
 10082              	.LBB5169:
 10083              	.LBI5153:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 10084              		.loc 8 1203 7 is_stmt 1 view .LVU2325
 10085              	.LBB5166:
 10086              	.LBI5154:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 10087              		.loc 13 109 7 view .LVU2326
 10088              	.LBB5163:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10089              		.loc 13 112 2 is_stmt 0 view .LVU2327
 10090 04dc 8B42     		cmp	r3, r1
 10091 04de 00F0BF80 		beq	.L300
 10092              	.LVL511:
 10093              	.LBB5156:
 10094              	.LBI5156:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 10095              		.loc 16 507 2 is_stmt 1 view .LVU2328
 10096              	.LBB5157:
 10097              	.LBI5157:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10098              		.loc 15 148 2 view .LVU2329
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10099              		.loc 15 148 2 is_stmt 0 view .LVU2330
 10100              	.LBE5157:
 10101              	.LBE5156:
 10102              	.LBE5163:
 10103              	.LBE5166:
 10104              	.LBE5169:
 10105              	.LBE5219:
 10106              	.LBE5364:
 10107              	.LBE5529:
 10108              	.LBE5783:
 10109              		.loc 24 175 3 is_stmt 1 view .LVU2331
 10110              	.LBB5784:
 10111              	.LBB5530:
 10112              	.LBB5365:
 10113              	.LBB5220:
 10114              	.LBB5170:
 10115              	.LBB5167:
 10116              	.LBB5164:
 10117              	.LBB5160:
 10118              	.LBB5159:
 10119              	.LBB5158:
 10120              		.loc 15 150 4 is_stmt 0 view .LVU2332
 10121 04e2 43F8042B 		str	r2, [r3], #4	@ float
 10122              	.LVL512:
 10123              		.loc 15 150 4 view .LVU2333
 10124              	.LBE5158:
 10125              	.LBE5159:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 471


 10126              	.LBE5160:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10127              		.loc 13 117 6 view .LVU2334
 10128 04e6 0493     		str	r3, [sp, #16]
 10129              	.L301:
 10130              	.LVL513:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10131              		.loc 13 117 6 view .LVU2335
 10132              	.LBE5164:
 10133              	.LBE5167:
 10134              	.LBE5170:
  87:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(2 * beta);
 10135              		.loc 19 87 13 is_stmt 1 view .LVU2336
  87:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(2 * beta);
 10136              		.loc 19 87 33 is_stmt 0 view .LVU2337
 10137 04e8 B8EE007B 		vmov.f64	d7, #-2.0e+0
 10138              	.LBB5171:
 10139              	.LBB5172:
 10140              	.LBB5173:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10141              		.loc 13 112 2 view .LVU2338
 10142 04ec 8B42     		cmp	r3, r1
 10143              	.LBE5173:
 10144              	.LBE5172:
 10145              	.LBE5171:
  87:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(2 * beta);
 10146              		.loc 19 87 33 view .LVU2339
 10147 04ee 29EE079B 		vmul.f64	d9, d9, d7
 10148              	.LVL514:
  87:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(2 * beta);
 10149              		.loc 19 87 33 view .LVU2340
 10150 04f2 B7EEC99B 		vcvt.f32.f64	s18, d9
 10151 04f6 8DED069A 		vstr.32	s18, [sp, #24]
 10152              	.LVL515:
 10153              	.LBB5189:
 10154              	.LBI5171:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 10155              		.loc 8 1203 7 is_stmt 1 view .LVU2341
 10156              	.LBB5185:
 10157              	.LBI5172:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 10158              		.loc 13 109 7 view .LVU2342
 10159              	.LBB5181:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10160              		.loc 13 112 2 is_stmt 0 view .LVU2343
 10161 04fa 00F0AA80 		beq	.L302
 10162              	.LVL516:
 10163              	.LBB5174:
 10164              	.LBI5174:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 10165              		.loc 16 507 2 is_stmt 1 view .LVU2344
 10166              	.LBB5175:
 10167              	.LBI5175:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10168              		.loc 15 148 2 view .LVU2345
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10169              		.loc 15 148 2 is_stmt 0 view .LVU2346
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 472


 10170              	.LBE5175:
 10171              	.LBE5174:
 10172              	.LBE5181:
 10173              	.LBE5185:
 10174              	.LBE5189:
 10175              	.LBE5220:
 10176              	.LBE5365:
 10177              	.LBE5530:
 10178              	.LBE5784:
 10179              		.loc 24 175 3 is_stmt 1 view .LVU2347
 10180              	.LBB5785:
 10181              	.LBB5531:
 10182              	.LBB5366:
 10183              	.LBB5221:
 10184              	.LBB5190:
 10185              	.LBB5186:
 10186              	.LBB5182:
 10187              	.LBB5178:
 10188              	.LBB5177:
 10189              	.LBB5176:
 10190              		.loc 15 150 4 is_stmt 0 view .LVU2348
 10191 04fe A3EC019A 		vstmia.32	r3!, {s18}
 10192              	.LVL517:
 10193              		.loc 15 150 4 view .LVU2349
 10194              	.LBE5176:
 10195              	.LBE5177:
 10196              	.LBE5178:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10197              		.loc 13 117 6 view .LVU2350
 10198 0502 0493     		str	r3, [sp, #16]
 10199              	.L303:
 10200              	.LVL518:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10201              		.loc 13 117 6 view .LVU2351
 10202              	.LBE5182:
 10203              	.LBE5186:
 10204              	.LBE5190:
  88:../../dsp_fv/classicFilters.h **** 
 10205              		.loc 19 88 13 is_stmt 1 view .LVU2352
  88:../../dsp_fv/classicFilters.h **** 
 10206              		.loc 19 88 32 is_stmt 0 view .LVU2353
 10207 0504 3BEE0BBB 		vadd.f64	d11, d11, d11
 10208              	.LVL519:
 10209              	.LBB5191:
 10210              	.LBB5192:
 10211              	.LBB5193:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10212              		.loc 13 112 2 view .LVU2354
 10213 0508 9942     		cmp	r1, r3
 10214              	.LBE5193:
 10215              	.LBE5192:
 10216              	.LBE5191:
  88:../../dsp_fv/classicFilters.h **** 
 10217              		.loc 19 88 32 view .LVU2355
 10218 050a B7EECBBB 		vcvt.f32.f64	s22, d11
 10219 050e 8DED06BA 		vstr.32	s22, [sp, #24]
 10220              	.LVL520:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 473


 10221              	.LBB5205:
 10222              	.LBI5191:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 10223              		.loc 8 1203 7 is_stmt 1 view .LVU2356
 10224              	.LBB5202:
 10225              	.LBI5192:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 10226              		.loc 13 109 7 view .LVU2357
 10227              	.LBB5199:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10228              		.loc 13 112 2 is_stmt 0 view .LVU2358
 10229 0512 03D0     		beq	.L317
 10230              	.LVL521:
 10231              	.LBB5194:
 10232              	.LBI5194:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 10233              		.loc 16 507 2 is_stmt 1 view .LVU2359
 10234              	.LBB5195:
 10235              	.LBI5195:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10236              		.loc 15 148 2 view .LVU2360
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10237              		.loc 15 148 2 is_stmt 0 view .LVU2361
 10238              	.LBE5195:
 10239              	.LBE5194:
 10240              	.LBE5199:
 10241              	.LBE5202:
 10242              	.LBE5205:
 10243              	.LBE5221:
 10244              	.LBE5366:
 10245              	.LBE5531:
 10246              	.LBE5785:
 10247              		.loc 24 175 3 is_stmt 1 view .LVU2362
 10248              	.LBB5786:
 10249              	.LBB5532:
 10250              	.LBB5367:
 10251              	.LBB5222:
 10252              	.LBB5206:
 10253              	.LBB5203:
 10254              	.LBB5200:
 10255              	.LBB5198:
 10256              	.LBB5197:
 10257              	.LBB5196:
 10258              		.loc 15 150 4 is_stmt 0 view .LVU2363
 10259 0514 A3EC01BA 		vstmia.32	r3!, {s22}
 10260              	.LVL522:
 10261              		.loc 15 150 4 view .LVU2364
 10262              	.LBE5196:
 10263              	.LBE5197:
 10264              	.LBE5198:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10265              		.loc 13 117 6 view .LVU2365
 10266 0518 0493     		str	r3, [sp, #16]
 10267 051a A2E6     		b	.L272
 10268              	.LVL523:
 10269              	.L317:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 474


 10270              		.loc 13 117 6 view .LVU2366
 10271              	.LBE5200:
 10272              	.LBE5203:
 10273              	.LBE5206:
 10274              	.LBE5222:
 10275              	.LBB5223:
 10276              	.LBB4916:
 10277              	.LBB4878:
 10278              	.LBB4874:
 10279              	.LBB4870:
 10280              	.LBB4866:
 10281              	.LBI4866:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 10282              		.loc 8 829 7 is_stmt 1 view .LVU2367
 10283              	.LBB4867:
 10284              	.LBI4867:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10285              		.loc 23 978 7 view .LVU2368
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10286              		.loc 23 978 7 is_stmt 0 view .LVU2369
 10287              	.LBE4867:
 10288              	.LBE4866:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10289              		.loc 13 121 21 view .LVU2370
 10290 051c 06AA     		add	r2, sp, #24
 10291 051e 03A8     		add	r0, sp, #12
 10292 0520 FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 10293              	.LVL524:
 10294 0524 9DE6     		b	.L272
 10295              	.LVL525:
 10296              	.L268:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10297              		.loc 13 121 21 view .LVU2371
 10298              	.LBE4870:
 10299              	.LBE4874:
 10300              	.LBE4878:
 10301              	.LBE4916:
 10302              	.LBE5223:
 10303              	.LBE5367:
 10304              	.LBE5532:
 10305              	.LBB5533:
 10306              	.LBB5504:
 10307              	.LBB5492:
 10308              	.LBB5488:
 10309              	.LBB5484:
 10310              	.LBI5484:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 10311              		.loc 8 829 7 is_stmt 1 view .LVU2372
 10312              	.LBB5485:
 10313              	.LBI5485:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10314              		.loc 23 978 7 view .LVU2373
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10315              		.loc 23 978 7 is_stmt 0 view .LVU2374
 10316              	.LBE5485:
 10317              	.LBE5484:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 475


 10318              		.loc 13 121 21 view .LVU2375
 10319 0526 06AA     		add	r2, sp, #24
 10320              	.LVL526:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10321              		.loc 13 121 21 view .LVU2376
 10322 0528 03A8     		add	r0, sp, #12
 10323              	.LVL527:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10324              		.loc 13 121 21 view .LVU2377
 10325 052a FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 10326              	.LVL528:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10327              		.loc 13 121 21 view .LVU2378
 10328              	.LBE5488:
 10329              	.LBE5492:
 10330              	.LBE5504:
 10331              	.LBB5505:
 10332              	.LBB5502:
 10333              	.LBB5500:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10334              		.loc 13 112 47 view .LVU2379
 10335 052e DDE90431 		ldrd	r3, r1, [sp, #16]
 10336 0532 8EE6     		b	.L269
 10337              	.LVL529:
 10338              	.L266:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10339              		.loc 13 112 47 view .LVU2380
 10340              	.LBE5500:
 10341              	.LBE5502:
 10342              	.LBE5505:
 10343              	.LBB5506:
 10344              	.LBB5473:
 10345              	.LBB5470:
 10346              	.LBB5466:
 10347              	.LBI5466:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 10348              		.loc 8 829 7 is_stmt 1 view .LVU2381
 10349              	.LBB5467:
 10350              	.LBI5467:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10351              		.loc 23 978 7 view .LVU2382
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10352              		.loc 23 978 7 is_stmt 0 view .LVU2383
 10353              	.LBE5467:
 10354              	.LBE5466:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10355              		.loc 13 121 21 view .LVU2384
 10356 0534 06AA     		add	r2, sp, #24
 10357              	.LVL530:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10358              		.loc 13 121 21 view .LVU2385
 10359 0536 03A8     		add	r0, sp, #12
 10360              	.LVL531:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10361              		.loc 13 121 21 view .LVU2386
 10362 0538 FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 10363              	.LVL532:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 476


 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10364              		.loc 13 121 21 view .LVU2387
 10365              	.LBE5470:
 10366              	.LBE5473:
 10367              	.LBE5506:
 10368              	.LBB5507:
 10369              	.LBB5493:
 10370              	.LBB5489:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10371              		.loc 13 112 47 view .LVU2388
 10372 053c DDE90431 		ldrd	r3, r1, [sp, #16]
 10373 0540 7DE6     		b	.L267
 10374              	.LVL533:
 10375              	.L264:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10376              		.loc 13 112 47 view .LVU2389
 10377              	.LBE5489:
 10378              	.LBE5493:
 10379              	.LBE5507:
 10380              	.LBB5508:
 10381              	.LBB5454:
 10382              	.LBB5450:
 10383              	.LBB5446:
 10384              	.LBI5446:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 10385              		.loc 8 829 7 is_stmt 1 view .LVU2390
 10386              	.LBB5447:
 10387              	.LBI5447:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10388              		.loc 23 978 7 view .LVU2391
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10389              		.loc 23 978 7 is_stmt 0 view .LVU2392
 10390              	.LBE5447:
 10391              	.LBE5446:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10392              		.loc 13 121 21 view .LVU2393
 10393 0542 06AA     		add	r2, sp, #24
 10394              	.LVL534:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10395              		.loc 13 121 21 view .LVU2394
 10396 0544 6846     		mov	r0, sp
 10397 0546 FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 10398              	.LVL535:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10399              		.loc 13 121 21 view .LVU2395
 10400 054a 6EE6     		b	.L265
 10401              	.LVL536:
 10402              	.L262:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10403              		.loc 13 121 21 view .LVU2396
 10404              	.LBE5450:
 10405              	.LBE5454:
 10406              	.LBE5508:
 10407              	.LBB5509:
 10408              	.LBB5434:
 10409              	.LBB5430:
 10410              	.LBB5426:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 477


 10411              	.LBI5426:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 10412              		.loc 8 829 7 is_stmt 1 view .LVU2397
 10413              	.LBB5427:
 10414              	.LBI5427:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10415              		.loc 23 978 7 view .LVU2398
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10416              		.loc 23 978 7 is_stmt 0 view .LVU2399
 10417              	.LBE5427:
 10418              	.LBE5426:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10419              		.loc 13 121 21 view .LVU2400
 10420 054c 06AA     		add	r2, sp, #24
 10421              	.LVL537:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10422              		.loc 13 121 21 view .LVU2401
 10423 054e 6846     		mov	r0, sp
 10424 0550 FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 10425              	.LVL538:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10426              		.loc 13 121 21 view .LVU2402
 10427              	.LBE5430:
 10428              	.LBE5434:
 10429              	.LBE5509:
 10430              	.LBB5510:
 10431              	.LBB5455:
 10432              	.LBB5451:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10433              		.loc 13 112 47 view .LVU2403
 10434 0554 DDE90131 		ldrd	r3, r1, [sp, #4]
 10435 0558 5FE6     		b	.L263
 10436              	.LVL539:
 10437              	.L260:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10438              		.loc 13 112 47 view .LVU2404
 10439              	.LBE5451:
 10440              	.LBE5455:
 10441              	.LBE5510:
 10442              	.LBB5511:
 10443              	.LBB5414:
 10444              	.LBB5410:
 10445              	.LBB5405:
 10446              	.LBI5405:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 10447              		.loc 8 829 7 is_stmt 1 view .LVU2405
 10448              	.LBB5406:
 10449              	.LBI5406:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10450              		.loc 23 978 7 view .LVU2406
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10451              		.loc 23 978 7 is_stmt 0 view .LVU2407
 10452              	.LBE5406:
 10453              	.LBE5405:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10454              		.loc 13 121 21 view .LVU2408
 10455 055a 06AA     		add	r2, sp, #24
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 478


 10456              	.LVL540:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10457              		.loc 13 121 21 view .LVU2409
 10458 055c 6846     		mov	r0, sp
 10459 055e FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 10460              	.LVL541:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 10461              		.loc 13 121 21 view .LVU2410
 10462              	.LBE5410:
 10463              	.LBE5414:
 10464              	.LBE5511:
 10465              	.LBB5512:
 10466              	.LBB5435:
 10467              	.LBB5431:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10468              		.loc 13 112 47 view .LVU2411
 10469 0562 DDE90131 		ldrd	r3, r1, [sp, #4]
 10470 0566 50E6     		b	.L261
 10471              	.LVL542:
 10472              	.L306:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10473              		.loc 13 112 47 view .LVU2412
 10474              	.LBE5431:
 10475              	.LBE5435:
 10476              	.LBE5512:
 10477              	.LBE5533:
 10478              	.LBB5534:
 10479              	.LBB5368:
 10480              	.LBB5224:
 106:../../dsp_fv/classicFilters.h ****         {
 10481              		.loc 19 106 14 is_stmt 1 view .LVU2413
 10482              	.LBB4917:
 10483              	.LBI4917:
6185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       const _CharT* __rhs)
 10484              		.loc 11 6185 5 view .LVU2414
 10485              	.LBB4918:
 10486              		.loc 11 6187 27 is_stmt 0 view .LVU2415
 10487 0568 6349     		ldr	r1, .L398
 10488 056a 3046     		mov	r0, r6
 10489 056c FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
 10490              	.LVL543:
 10491              		.loc 11 6187 27 view .LVU2416
 10492              	.LBE4918:
 10493              	.LBE4917:
 106:../../dsp_fv/classicFilters.h ****         {
 10494              		.loc 19 106 14 view .LVU2417
 10495 0570 0028     		cmp	r0, #0
 10496 0572 7FF476AE 		bne	.L272
 108:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(1);
 10497              		.loc 19 108 13 is_stmt 1 view .LVU2418
 10498              	.LVL544:
 10499              	.LBB4919:
 10500              	.LBI4919:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 10501              		.loc 14 144 7 view .LVU2419
 10502              	.LBB4920:
 10503              	.LBI4920:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 479


  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10504              		.loc 15 79 7 view .LVU2420
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10505              		.loc 15 79 7 is_stmt 0 view .LVU2421
 10506              	.LBE4920:
 10507              	.LBE4919:
 10508              	.LBB4921:
 10509              	.LBI4921:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 10510              		.loc 11 525 7 is_stmt 1 view .LVU2422
 10511              	.LBB4922:
 10512              	.LBB4923:
 10513              	.LBB4924:
 10514              	.LBI4924:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10515              		.loc 11 190 7 view .LVU2423
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10516              		.loc 11 190 7 is_stmt 0 view .LVU2424
 10517              	.LBE4924:
 10518              	.LBB4925:
 10519              	.LBI4925:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 10520              		.loc 11 156 2 is_stmt 1 view .LVU2425
 10521              	.LBB4926:
 10522              	.LBB4927:
 10523              	.LBB4928:
 10524              	.LBI4928:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10525              		.loc 14 147 7 view .LVU2426
 10526              	.LBB4929:
 10527              	.LBI4929:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10528              		.loc 15 82 7 view .LVU2427
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10529              		.loc 15 82 7 is_stmt 0 view .LVU2428
 10530              	.LBE4929:
 10531              	.LBE4928:
 10532              	.LBE4927:
 10533              	.LBE4926:
 10534              	.LBE4925:
 10535              	.LBB4932:
 10536              	.LBB4933:
 10537              	.LBB4934:
 10538              	.LBB4935:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 10539              		.loc 11 247 23 view .LVU2429
 10540 0576 614A     		ldr	r2, .L398+4
 10541 0578 06A8     		add	r0, sp, #24
 10542              	.LVL545:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 10543              		.loc 11 247 23 view .LVU2430
 10544              	.LBE4935:
 10545              	.LBE4934:
 10546              	.LBE4933:
 10547              	.LBE4932:
 10548              	.LBB4939:
 10549              	.LBB4931:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 480


 10550              	.LBB4930:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10551              		.loc 11 157 35 view .LVU2431
 10552 057a 0695     		str	r5, [sp, #24]
 10553              	.LVL546:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10554              		.loc 11 157 35 view .LVU2432
 10555              	.LBE4930:
 10556              	.LBE4931:
 10557              	.LBE4939:
 10558              	.LBB4940:
 10559              	.LBI4940:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 10560              		.loc 12 351 7 is_stmt 1 view .LVU2433
 10561              	.LBE4940:
 10562              	.LBE4923:
 10563              	.LBE4922:
 10564              	.LBE4921:
 10565              	.LBE5224:
 10566              	.LBE5368:
 10567              	.LBE5534:
 10568              	.LBE5786:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 10569              		.loc 12 357 2 view .LVU2434
 10570              	.LBB5787:
 10571              	.LBB5535:
 10572              	.LBB5369:
 10573              	.LBB5225:
 10574              	.LBB4944:
 10575              	.LBB4943:
 10576              	.LBB4942:
 10577              	.LBB4941:
 10578              	.LBI4932:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 10579              		.loc 11 263 9 view .LVU2435
 10580              	.LBB4938:
 10581              	.LBB4937:
 10582              	.LBI4934:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 10583              		.loc 11 243 9 view .LVU2436
 10584              	.LBB4936:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 10585              		.loc 11 247 23 is_stmt 0 view .LVU2437
 10586 057c 111F     		subs	r1, r2, #4
 10587 057e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 10588              	.LVL547:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 10589              		.loc 11 247 23 view .LVU2438
 10590              	.LBE4936:
 10591              	.LBE4937:
 10592              	.LBE4938:
 10593              	.LBE4941:
 10594              	.LBE4942:
 10595              	.LBE4943:
 10596              	.LBE4944:
 10597              	.LBB4945:
 10598              	.LBI4945:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 481


 103:../../dsp_fv/biquad.h **** 
 104:../../dsp_fv/biquad.h ****     void setType(string type)
 10599              		.loc 7 104 10 is_stmt 1 view .LVU2439
 10600              	.LBB4946:
 105:../../dsp_fv/biquad.h ****     {
 106:../../dsp_fv/biquad.h ****         form = type;
 10601              		.loc 7 106 9 view .LVU2440
 10602              	.LBB4947:
 10603              	.LBI4947:
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10604              		.loc 11 665 7 view .LVU2441
 10605              	.LBB4948:
 10606              	.LBI4948:
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10607              		.loc 11 1335 7 view .LVU2442
 10608              	.LBB4949:
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 10609              		.loc 11 1366 17 is_stmt 0 view .LVU2443
 10610 0582 04F1C000 		add	r0, r4, #192
 10611              	.LVL548:
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 10612              		.loc 11 1366 17 view .LVU2444
 10613 0586 06A9     		add	r1, sp, #24
 10614              	.LVL549:
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 10615              		.loc 11 1366 17 view .LVU2445
 10616 0588 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 10617              	.LVL550:
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 10618              		.loc 11 1366 17 view .LVU2446
 10619              	.LBE4949:
 10620              	.LBE4948:
 10621              	.LBE4947:
 10622              	.LBE4946:
 10623              	.LBE4945:
 10624              	.LBB4950:
 10625              	.LBI4950:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 10626              		.loc 11 657 7 is_stmt 1 view .LVU2447
 10627              	.LBB4951:
 10628              	.LBB4952:
 10629              	.LBI4952:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10630              		.loc 11 229 7 view .LVU2448
 10631              	.LBB4953:
 10632              	.LBB4954:
 10633              	.LBI4954:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 10634              		.loc 11 221 7 view .LVU2449
 10635              	.LBB4955:
 10636              	.LBI4955:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 10637              		.loc 11 186 7 view .LVU2450
 10638              	.LBB4956:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10639              		.loc 11 187 28 is_stmt 0 view .LVU2451
 10640 058c 0698     		ldr	r0, [sp, #24]
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 482


 10641              	.LVL551:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10642              		.loc 11 187 28 view .LVU2452
 10643              	.LBE4956:
 10644              	.LBE4955:
 10645              	.LBB4957:
 10646              	.LBI4957:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10647              		.loc 11 200 7 is_stmt 1 view .LVU2453
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10648              		.loc 11 200 7 is_stmt 0 view .LVU2454
 10649              	.LBE4957:
 10650              	.LBE4954:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10651              		.loc 11 231 2 view .LVU2455
 10652 058e A842     		cmp	r0, r5
 10653 0590 03D0     		beq	.L319
 10654              	.LVL552:
 10655              	.LBB4958:
 10656              	.LBI4958:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10657              		.loc 11 236 7 is_stmt 1 view .LVU2456
 10658              	.LBB4959:
 10659              	.LBB4960:
 10660              	.LBI4960:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10661              		.loc 16 491 7 view .LVU2457
 10662              	.LBB4961:
 10663              	.LBI4961:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10664              		.loc 15 120 7 view .LVU2458
 10665              	.LBE4961:
 10666              	.LBE4960:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 10667              		.loc 11 237 34 is_stmt 0 view .LVU2459
 10668 0592 0899     		ldr	r1, [sp, #32]
 10669              	.LBB4964:
 10670              	.LBB4963:
 10671              	.LBB4962:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10672              		.loc 15 133 19 view .LVU2460
 10673 0594 0131     		adds	r1, r1, #1
 10674              	.LVL553:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10675              		.loc 15 133 19 view .LVU2461
 10676 0596 FFF7FEFF 		bl	_ZdlPvj
 10677              	.LVL554:
 10678              	.L319:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10679              		.loc 15 133 19 view .LVU2462
 10680              	.LBE4962:
 10681              	.LBE4963:
 10682              	.LBE4964:
 10683              	.LBE4959:
 10684              	.LBE4958:
 10685              	.LBE4953:
 10686              	.LBE4952:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 483


 10687              	.LBB4965:
 10688              	.LBI4965:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 10689              		.loc 11 150 14 is_stmt 1 view .LVU2463
 10690              	.LBB4966:
 10691              	.LBI4966:
 10692              		.loc 14 162 7 view .LVU2464
 10693              	.LBB4967:
 10694              	.LBI4967:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10695              		.loc 15 89 7 view .LVU2465
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10696              		.loc 15 89 7 is_stmt 0 view .LVU2466
 10697              	.LBE4967:
 10698              	.LBE4966:
 10699              	.LBE4965:
 10700              	.LBE4951:
 10701              	.LBE4950:
 10702              	.LBB4968:
 10703              	.LBI4968:
 10704              		.loc 14 162 7 is_stmt 1 view .LVU2467
 10705              	.LBB4969:
 10706              	.LBI4969:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10707              		.loc 15 89 7 view .LVU2468
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10708              		.loc 15 89 7 is_stmt 0 view .LVU2469
 10709              	.LBE4969:
 10710              	.LBE4968:
 109:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(0);
 10711              		.loc 19 109 13 is_stmt 1 view .LVU2470
 109:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(0);
 10712              		.loc 19 109 29 is_stmt 0 view .LVU2471
 10713 059a 4FF07E52 		mov	r2, #1065353216
 10714              	.LBB4970:
 10715              	.LBB4971:
 10716              	.LBB4972:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10717              		.loc 13 112 47 view .LVU2472
 10718 059e DDE90131 		ldrd	r3, r1, [sp, #4]
 10719              	.LBE4972:
 10720              	.LBE4971:
 10721              	.LBE4970:
 109:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(0);
 10722              		.loc 19 109 29 view .LVU2473
 10723 05a2 0692     		str	r2, [sp, #24]	@ float
 10724              	.LVL555:
 10725              	.LBB4986:
 10726              	.LBI4970:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 10727              		.loc 8 1203 7 is_stmt 1 view .LVU2474
 10728              	.LBB4983:
 10729              	.LBI4971:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 10730              		.loc 13 109 7 view .LVU2475
 10731              	.LBB4980:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 484


 10732              		.loc 13 112 2 is_stmt 0 view .LVU2476
 10733 05a4 8B42     		cmp	r3, r1
 10734 05a6 00F09D80 		beq	.L320
 10735              	.LVL556:
 10736              	.LBB4973:
 10737              	.LBI4973:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 10738              		.loc 16 507 2 is_stmt 1 view .LVU2477
 10739              	.LBB4974:
 10740              	.LBI4974:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10741              		.loc 15 148 2 view .LVU2478
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10742              		.loc 15 148 2 is_stmt 0 view .LVU2479
 10743              	.LBE4974:
 10744              	.LBE4973:
 10745              	.LBE4980:
 10746              	.LBE4983:
 10747              	.LBE4986:
 10748              	.LBE5225:
 10749              	.LBE5369:
 10750              	.LBE5535:
 10751              	.LBE5787:
 10752              		.loc 24 175 3 is_stmt 1 view .LVU2480
 10753              	.LBB5788:
 10754              	.LBB5536:
 10755              	.LBB5370:
 10756              	.LBB5226:
 10757              	.LBB4987:
 10758              	.LBB4984:
 10759              	.LBB4981:
 10760              	.LBB4977:
 10761              	.LBB4976:
 10762              	.LBB4975:
 10763              		.loc 15 150 4 is_stmt 0 view .LVU2481
 10764 05aa 43F8042B 		str	r2, [r3], #4	@ float
 10765              	.LVL557:
 10766              		.loc 15 150 4 view .LVU2482
 10767              	.LBE4975:
 10768              	.LBE4976:
 10769              	.LBE4977:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10770              		.loc 13 117 6 view .LVU2483
 10771 05ae 0193     		str	r3, [sp, #4]
 10772              	.L321:
 10773              	.LVL558:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10774              		.loc 13 117 6 view .LVU2484
 10775              	.LBE4981:
 10776              	.LBE4984:
 10777              	.LBE4987:
 110:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(0);
 10778              		.loc 19 110 13 is_stmt 1 view .LVU2485
 110:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(0);
 10779              		.loc 19 110 29 is_stmt 0 view .LVU2486
 10780 05b0 0022     		movs	r2, #0
 10781              	.LBB4988:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 485


 10782              	.LBB4989:
 10783              	.LBB4990:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10784              		.loc 13 112 2 view .LVU2487
 10785 05b2 9942     		cmp	r1, r3
 10786              	.LBE4990:
 10787              	.LBE4989:
 10788              	.LBE4988:
 110:../../dsp_fv/classicFilters.h ****             aCoeff.push_back(0);
 10789              		.loc 19 110 29 view .LVU2488
 10790 05b4 0692     		str	r2, [sp, #24]	@ float
 10791              	.LVL559:
 10792              	.LBB5006:
 10793              	.LBI4988:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 10794              		.loc 8 1203 7 is_stmt 1 view .LVU2489
 10795              	.LBB5002:
 10796              	.LBI4989:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 10797              		.loc 13 109 7 view .LVU2490
 10798              	.LBB4998:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10799              		.loc 13 112 2 is_stmt 0 view .LVU2491
 10800 05b6 00F08E80 		beq	.L322
 10801              	.LVL560:
 10802              	.LBB4991:
 10803              	.LBI4991:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 10804              		.loc 16 507 2 is_stmt 1 view .LVU2492
 10805              	.LBB4992:
 10806              	.LBI4992:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10807              		.loc 15 148 2 view .LVU2493
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10808              		.loc 15 148 2 is_stmt 0 view .LVU2494
 10809              	.LBE4992:
 10810              	.LBE4991:
 10811              	.LBE4998:
 10812              	.LBE5002:
 10813              	.LBE5006:
 10814              	.LBE5226:
 10815              	.LBE5370:
 10816              	.LBE5536:
 10817              	.LBE5788:
 10818              		.loc 24 175 3 is_stmt 1 view .LVU2495
 10819              	.LBB5789:
 10820              	.LBB5537:
 10821              	.LBB5371:
 10822              	.LBB5227:
 10823              	.LBB5007:
 10824              	.LBB5003:
 10825              	.LBB4999:
 10826              	.LBB4995:
 10827              	.LBB4994:
 10828              	.LBB4993:
 10829              		.loc 15 150 4 is_stmt 0 view .LVU2496
 10830 05ba 43F8042B 		str	r2, [r3], #4	@ float
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 486


 10831              	.LVL561:
 10832              		.loc 15 150 4 view .LVU2497
 10833              	.LBE4993:
 10834              	.LBE4994:
 10835              	.LBE4995:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10836              		.loc 13 117 6 view .LVU2498
 10837 05be 0193     		str	r3, [sp, #4]
 10838              	.L323:
 10839              	.LVL562:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10840              		.loc 13 117 6 view .LVU2499
 10841              	.LBE4999:
 10842              	.LBE5003:
 10843              	.LBE5007:
 111:../../dsp_fv/classicFilters.h **** 
 10844              		.loc 19 111 13 is_stmt 1 view .LVU2500
 111:../../dsp_fv/classicFilters.h **** 
 10845              		.loc 19 111 29 is_stmt 0 view .LVU2501
 10846 05c0 0022     		movs	r2, #0
 10847              	.LBB5008:
 10848              	.LBB5009:
 10849              	.LBB5010:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10850              		.loc 13 112 2 view .LVU2502
 10851 05c2 9942     		cmp	r1, r3
 10852              	.LBE5010:
 10853              	.LBE5009:
 10854              	.LBE5008:
 111:../../dsp_fv/classicFilters.h **** 
 10855              		.loc 19 111 29 view .LVU2503
 10856 05c4 0692     		str	r2, [sp, #24]	@ float
 10857              	.LVL563:
 10858              	.LBB5026:
 10859              	.LBI5008:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 10860              		.loc 8 1203 7 is_stmt 1 view .LVU2504
 10861              	.LBB5022:
 10862              	.LBI5009:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 10863              		.loc 13 109 7 view .LVU2505
 10864              	.LBB5018:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10865              		.loc 13 112 2 is_stmt 0 view .LVU2506
 10866 05c6 00F08180 		beq	.L324
 10867              	.LVL564:
 10868              	.LBB5011:
 10869              	.LBI5011:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 10870              		.loc 16 507 2 is_stmt 1 view .LVU2507
 10871              	.LBB5012:
 10872              	.LBI5012:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10873              		.loc 15 148 2 view .LVU2508
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10874              		.loc 15 148 2 is_stmt 0 view .LVU2509
 10875              	.LBE5012:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 487


 10876              	.LBE5011:
 10877              	.LBE5018:
 10878              	.LBE5022:
 10879              	.LBE5026:
 10880              	.LBE5227:
 10881              	.LBE5371:
 10882              	.LBE5537:
 10883              	.LBE5789:
 10884              		.loc 24 175 3 is_stmt 1 view .LVU2510
 10885              	.LBB5790:
 10886              	.LBB5538:
 10887              	.LBB5372:
 10888              	.LBB5228:
 10889              	.LBB5027:
 10890              	.LBB5023:
 10891              	.LBB5019:
 10892              	.LBB5015:
 10893              	.LBB5014:
 10894              	.LBB5013:
 10895              		.loc 15 150 4 is_stmt 0 view .LVU2511
 10896 05ca 43F8042B 		str	r2, [r3], #4	@ float
 10897              	.LVL565:
 10898              		.loc 15 150 4 view .LVU2512
 10899              	.LBE5013:
 10900              	.LBE5014:
 10901              	.LBE5015:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10902              		.loc 13 117 6 view .LVU2513
 10903 05ce 0193     		str	r3, [sp, #4]
 10904              	.L325:
 10905              	.LVL566:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10906              		.loc 13 117 6 view .LVU2514
 10907              	.LBE5019:
 10908              	.LBE5023:
 10909              	.LBE5027:
 113:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
 10910              		.loc 19 113 13 is_stmt 1 view .LVU2515
 113:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
 10911              		.loc 19 113 29 is_stmt 0 view .LVU2516
 10912 05d0 4FF07E52 		mov	r2, #1065353216
 10913              	.LBB5028:
 10914              	.LBB5029:
 10915              	.LBB5030:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10916              		.loc 13 112 47 view .LVU2517
 10917 05d4 DDE90431 		ldrd	r3, r1, [sp, #16]
 10918              	.LBE5030:
 10919              	.LBE5029:
 10920              	.LBE5028:
 113:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
 10921              		.loc 19 113 29 view .LVU2518
 10922 05d8 0692     		str	r2, [sp, #24]	@ float
 10923              	.LVL567:
 10924              	.LBB5044:
 10925              	.LBI5028:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 488


 10926              		.loc 8 1203 7 is_stmt 1 view .LVU2519
 10927              	.LBB5041:
 10928              	.LBI5029:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 10929              		.loc 13 109 7 view .LVU2520
 10930              	.LBB5038:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10931              		.loc 13 112 2 is_stmt 0 view .LVU2521
 10932 05da 8B42     		cmp	r3, r1
 10933 05dc 6FD0     		beq	.L326
 10934              	.LVL568:
 10935              	.LBB5031:
 10936              	.LBI5031:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 10937              		.loc 16 507 2 is_stmt 1 view .LVU2522
 10938              	.LBB5032:
 10939              	.LBI5032:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10940              		.loc 15 148 2 view .LVU2523
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10941              		.loc 15 148 2 is_stmt 0 view .LVU2524
 10942              	.LBE5032:
 10943              	.LBE5031:
 10944              	.LBE5038:
 10945              	.LBE5041:
 10946              	.LBE5044:
 10947              	.LBE5228:
 10948              	.LBE5372:
 10949              	.LBE5538:
 10950              	.LBE5790:
 10951              		.loc 24 175 3 is_stmt 1 view .LVU2525
 10952              	.LBB5791:
 10953              	.LBB5539:
 10954              	.LBB5373:
 10955              	.LBB5229:
 10956              	.LBB5045:
 10957              	.LBB5042:
 10958              	.LBB5039:
 10959              	.LBB5035:
 10960              	.LBB5034:
 10961              	.LBB5033:
 10962              		.loc 15 150 4 is_stmt 0 view .LVU2526
 10963 05de 43F8042B 		str	r2, [r3], #4	@ float
 10964              	.LVL569:
 10965              		.loc 15 150 4 view .LVU2527
 10966              	.LBE5033:
 10967              	.LBE5034:
 10968              	.LBE5035:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10969              		.loc 13 117 6 view .LVU2528
 10970 05e2 0493     		str	r3, [sp, #16]
 10971              	.L327:
 10972              	.LVL570:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 10973              		.loc 13 117 6 view .LVU2529
 10974              	.LBE5039:
 10975              	.LBE5042:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 489


 10976              	.LBE5045:
 114:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
 10977              		.loc 19 114 13 is_stmt 1 view .LVU2530
 114:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
 10978              		.loc 19 114 29 is_stmt 0 view .LVU2531
 10979 05e4 0022     		movs	r2, #0
 10980              	.LBB5046:
 10981              	.LBB5047:
 10982              	.LBB5048:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10983              		.loc 13 112 2 view .LVU2532
 10984 05e6 8B42     		cmp	r3, r1
 10985              	.LBE5048:
 10986              	.LBE5047:
 10987              	.LBE5046:
 114:../../dsp_fv/classicFilters.h ****             bCoeff.push_back(0);
 10988              		.loc 19 114 29 view .LVU2533
 10989 05e8 0692     		str	r2, [sp, #24]	@ float
 10990              	.LVL571:
 10991              	.LBB5062:
 10992              	.LBI5046:
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
 10993              		.loc 8 1203 7 is_stmt 1 view .LVU2534
 10994              	.LBB5059:
 10995              	.LBI5047:
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 10996              		.loc 13 109 7 view .LVU2535
 10997              	.LBB5056:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 10998              		.loc 13 112 2 is_stmt 0 view .LVU2536
 10999 05ea 03D0     		beq	.L328
 11000              	.LVL572:
 11001              	.LBB5049:
 11002              	.LBI5049:
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 11003              		.loc 16 507 2 is_stmt 1 view .LVU2537
 11004              	.LBB5050:
 11005              	.LBI5050:
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 11006              		.loc 15 148 2 view .LVU2538
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 11007              		.loc 15 148 2 is_stmt 0 view .LVU2539
 11008              	.LBE5050:
 11009              	.LBE5049:
 11010              	.LBE5056:
 11011              	.LBE5059:
 11012              	.LBE5062:
 11013              	.LBE5229:
 11014              	.LBE5373:
 11015              	.LBE5539:
 11016              	.LBE5791:
 11017              		.loc 24 175 3 is_stmt 1 view .LVU2540
 11018              	.LBB5792:
 11019              	.LBB5540:
 11020              	.LBB5374:
 11021              	.LBB5230:
 11022              	.LBB5063:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 490


 11023              	.LBB5060:
 11024              	.LBB5057:
 11025              	.LBB5053:
 11026              	.LBB5052:
 11027              	.LBB5051:
 11028              		.loc 15 150 4 is_stmt 0 view .LVU2541
 11029 05ec 43F8042B 		str	r2, [r3], #4	@ float
 11030              	.LVL573:
 11031              		.loc 15 150 4 view .LVU2542
 11032              	.LBE5051:
 11033              	.LBE5052:
 11034              	.LBE5053:
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 11035              		.loc 13 117 6 view .LVU2543
 11036 05f0 0493     		str	r3, [sp, #16]
 11037 05f2 04E7     		b	.L329
 11038              	.LVL574:
 11039              	.L328:
 11040              	.LBB5054:
 11041              	.LBI5054:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11042              		.loc 8 829 7 is_stmt 1 view .LVU2544
 11043              	.LBB5055:
 11044              	.LBI5055:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11045              		.loc 23 978 7 view .LVU2545
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11046              		.loc 23 978 7 is_stmt 0 view .LVU2546
 11047              	.LBE5055:
 11048              	.LBE5054:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11049              		.loc 13 121 21 view .LVU2547
 11050 05f4 06AA     		add	r2, sp, #24
 11051 05f6 03A8     		add	r0, sp, #12
 11052 05f8 FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11053              	.LVL575:
 11054              	.LBE5057:
 11055              	.LBE5060:
 11056              	.LBE5063:
 11057              	.LBB5064:
 11058              	.LBB4912:
 11059              	.LBB4908:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11060              		.loc 13 112 47 view .LVU2548
 11061 05fc DDE90431 		ldrd	r3, r1, [sp, #16]
 11062 0600 FDE6     		b	.L329
 11063              	.LVL576:
 11064              	.L284:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11065              		.loc 13 112 47 view .LVU2549
 11066              	.LBE4908:
 11067              	.LBE4912:
 11068              	.LBE5064:
 11069              	.LBE5230:
 11070              	.LBE5374:
 11071              	.LBB5375:
 11072              	.LBB5348:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 491


 11073              	.LBB5329:
 11074              	.LBB5326:
 11075              	.LBB5322:
 11076              	.LBI5322:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11077              		.loc 8 829 7 is_stmt 1 view .LVU2550
 11078              	.LBB5323:
 11079              	.LBI5323:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11080              		.loc 23 978 7 view .LVU2551
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11081              		.loc 23 978 7 is_stmt 0 view .LVU2552
 11082              	.LBE5323:
 11083              	.LBE5322:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11084              		.loc 13 121 21 view .LVU2553
 11085 0602 06AA     		add	r2, sp, #24
 11086              	.LVL577:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11087              		.loc 13 121 21 view .LVU2554
 11088 0604 03A8     		add	r0, sp, #12
 11089              	.LVL578:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11090              		.loc 13 121 21 view .LVU2555
 11091 0606 FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11092              	.LVL579:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11093              		.loc 13 121 21 view .LVU2556
 11094              	.LBE5326:
 11095              	.LBE5329:
 11096              	.LBE5348:
 11097              	.LBB5349:
 11098              	.LBB5345:
 11099              	.LBB5342:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11100              		.loc 13 112 47 view .LVU2557
 11101 060a DDE90431 		ldrd	r3, r1, [sp, #16]
 11102 060e ECE6     		b	.L285
 11103              	.LVL580:
 11104              	.L282:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11105              		.loc 13 112 47 view .LVU2558
 11106              	.LBE5342:
 11107              	.LBE5345:
 11108              	.LBE5349:
 11109              	.LBB5350:
 11110              	.LBB5310:
 11111              	.LBB5306:
 11112              	.LBB5302:
 11113              	.LBI5302:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11114              		.loc 8 829 7 is_stmt 1 view .LVU2559
 11115              	.LBB5303:
 11116              	.LBI5303:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11117              		.loc 23 978 7 view .LVU2560
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 492


 11118              		.loc 23 978 7 is_stmt 0 view .LVU2561
 11119              	.LBE5303:
 11120              	.LBE5302:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11121              		.loc 13 121 21 view .LVU2562
 11122 0610 06AA     		add	r2, sp, #24
 11123              	.LVL581:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11124              		.loc 13 121 21 view .LVU2563
 11125 0612 6846     		mov	r0, sp
 11126 0614 FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11127              	.LVL582:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11128              		.loc 13 121 21 view .LVU2564
 11129 0618 DDE6     		b	.L283
 11130              	.LVL583:
 11131              	.L280:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11132              		.loc 13 121 21 view .LVU2565
 11133              	.LBE5306:
 11134              	.LBE5310:
 11135              	.LBE5350:
 11136              	.LBB5351:
 11137              	.LBB5290:
 11138              	.LBB5286:
 11139              	.LBB5282:
 11140              	.LBI5282:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11141              		.loc 8 829 7 is_stmt 1 view .LVU2566
 11142              	.LBB5283:
 11143              	.LBI5283:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11144              		.loc 23 978 7 view .LVU2567
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11145              		.loc 23 978 7 is_stmt 0 view .LVU2568
 11146              	.LBE5283:
 11147              	.LBE5282:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11148              		.loc 13 121 21 view .LVU2569
 11149 061a 06AA     		add	r2, sp, #24
 11150              	.LVL584:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11151              		.loc 13 121 21 view .LVU2570
 11152 061c 6846     		mov	r0, sp
 11153 061e FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11154              	.LVL585:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11155              		.loc 13 121 21 view .LVU2571
 11156              	.LBE5286:
 11157              	.LBE5290:
 11158              	.LBE5351:
 11159              	.LBB5352:
 11160              	.LBB5311:
 11161              	.LBB5307:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11162              		.loc 13 112 47 view .LVU2572
 11163 0622 DDE90131 		ldrd	r3, r1, [sp, #4]
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 493


 11164 0626 CEE6     		b	.L281
 11165              	.LVL586:
 11166              	.L278:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11167              		.loc 13 112 47 view .LVU2573
 11168              	.LBE5307:
 11169              	.LBE5311:
 11170              	.LBE5352:
 11171              	.LBB5353:
 11172              	.LBB5270:
 11173              	.LBB5266:
 11174              	.LBB5261:
 11175              	.LBI5261:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11176              		.loc 8 829 7 is_stmt 1 view .LVU2574
 11177              	.LBB5262:
 11178              	.LBI5262:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11179              		.loc 23 978 7 view .LVU2575
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11180              		.loc 23 978 7 is_stmt 0 view .LVU2576
 11181              	.LBE5262:
 11182              	.LBE5261:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11183              		.loc 13 121 21 view .LVU2577
 11184 0628 06AA     		add	r2, sp, #24
 11185              	.LVL587:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11186              		.loc 13 121 21 view .LVU2578
 11187 062a 6846     		mov	r0, sp
 11188 062c FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11189              	.LVL588:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11190              		.loc 13 121 21 view .LVU2579
 11191              	.LBE5266:
 11192              	.LBE5270:
 11193              	.LBE5353:
 11194              	.LBB5354:
 11195              	.LBB5291:
 11196              	.LBB5287:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11197              		.loc 13 112 47 view .LVU2580
 11198 0630 DDE90131 		ldrd	r3, r1, [sp, #4]
 11199 0634 BBE6     		b	.L279
 11200              	.LVL589:
 11201              	.L296:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11202              		.loc 13 112 47 view .LVU2581
 11203              	.LBE5287:
 11204              	.LBE5291:
 11205              	.LBE5354:
 11206              	.LBE5375:
 11207              	.LBB5376:
 11208              	.LBB5231:
 11209              	.LBB5207:
 11210              	.LBB5129:
 11211              	.LBB5125:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 494


 11212              	.LBB5121:
 11213              	.LBI5121:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11214              		.loc 8 829 7 is_stmt 1 view .LVU2582
 11215              	.LBB5122:
 11216              	.LBI5122:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11217              		.loc 23 978 7 view .LVU2583
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11218              		.loc 23 978 7 is_stmt 0 view .LVU2584
 11219              	.LBE5122:
 11220              	.LBE5121:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11221              		.loc 13 121 21 view .LVU2585
 11222 0636 06AA     		add	r2, sp, #24
 11223              	.LVL590:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11224              		.loc 13 121 21 view .LVU2586
 11225 0638 6846     		mov	r0, sp
 11226 063a FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11227              	.LVL591:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11228              		.loc 13 121 21 view .LVU2587
 11229              	.LBE5125:
 11230              	.LBE5129:
 11231              	.LBE5207:
 11232              	.LBB5208:
 11233              	.LBB5149:
 11234              	.LBB5145:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11235              		.loc 13 112 47 view .LVU2588
 11236 063e DDE90131 		ldrd	r3, r1, [sp, #4]
 11237 0642 3EE7     		b	.L297
 11238              	.LVL592:
 11239              	.L294:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11240              		.loc 13 112 47 view .LVU2589
 11241              	.LBE5145:
 11242              	.LBE5149:
 11243              	.LBE5208:
 11244              	.LBB5209:
 11245              	.LBB5110:
 11246              	.LBB5107:
 11247              	.LBB5103:
 11248              	.LBI5103:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11249              		.loc 8 829 7 is_stmt 1 view .LVU2590
 11250              	.LBB5104:
 11251              	.LBI5104:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11252              		.loc 23 978 7 view .LVU2591
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11253              		.loc 23 978 7 is_stmt 0 view .LVU2592
 11254              	.LBE5104:
 11255              	.LBE5103:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11256              		.loc 13 121 21 view .LVU2593
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 495


 11257 0644 06AA     		add	r2, sp, #24
 11258              	.LVL593:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11259              		.loc 13 121 21 view .LVU2594
 11260 0646 6846     		mov	r0, sp
 11261 0648 FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11262              	.LVL594:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11263              		.loc 13 121 21 view .LVU2595
 11264              	.LBE5107:
 11265              	.LBE5110:
 11266              	.LBE5209:
 11267              	.LBB5210:
 11268              	.LBB5130:
 11269              	.LBB5126:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11270              		.loc 13 112 47 view .LVU2596
 11271 064c DDE90131 		ldrd	r3, r1, [sp, #4]
 11272 0650 2DE7     		b	.L295
 11273              	.LVL595:
 11274              	.L302:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11275              		.loc 13 112 47 view .LVU2597
 11276              	.LBE5126:
 11277              	.LBE5130:
 11278              	.LBE5210:
 11279              	.LBB5211:
 11280              	.LBB5187:
 11281              	.LBB5183:
 11282              	.LBB5179:
 11283              	.LBI5179:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11284              		.loc 8 829 7 is_stmt 1 view .LVU2598
 11285              	.LBB5180:
 11286              	.LBI5180:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11287              		.loc 23 978 7 view .LVU2599
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11288              		.loc 23 978 7 is_stmt 0 view .LVU2600
 11289              	.LBE5180:
 11290              	.LBE5179:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11291              		.loc 13 121 21 view .LVU2601
 11292 0652 06AA     		add	r2, sp, #24
 11293              	.LVL596:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11294              		.loc 13 121 21 view .LVU2602
 11295 0654 03A8     		add	r0, sp, #12
 11296              	.LVL597:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11297              		.loc 13 121 21 view .LVU2603
 11298 0656 FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11299              	.LVL598:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11300              		.loc 13 121 21 view .LVU2604
 11301              	.LBE5183:
 11302              	.LBE5187:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 496


 11303              	.LBE5211:
 11304              	.LBB5212:
 11305              	.LBB5204:
 11306              	.LBB5201:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11307              		.loc 13 112 47 view .LVU2605
 11308 065a DDE90431 		ldrd	r3, r1, [sp, #16]
 11309 065e 51E7     		b	.L303
 11310              	.LVL599:
 11311              	.L300:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11312              		.loc 13 112 47 view .LVU2606
 11313              	.LBE5201:
 11314              	.LBE5204:
 11315              	.LBE5212:
 11316              	.LBB5213:
 11317              	.LBB5168:
 11318              	.LBB5165:
 11319              	.LBB5161:
 11320              	.LBI5161:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11321              		.loc 8 829 7 is_stmt 1 view .LVU2607
 11322              	.LBB5162:
 11323              	.LBI5162:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11324              		.loc 23 978 7 view .LVU2608
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11325              		.loc 23 978 7 is_stmt 0 view .LVU2609
 11326              	.LBE5162:
 11327              	.LBE5161:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11328              		.loc 13 121 21 view .LVU2610
 11329 0660 06AA     		add	r2, sp, #24
 11330              	.LVL600:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11331              		.loc 13 121 21 view .LVU2611
 11332 0662 03A8     		add	r0, sp, #12
 11333              	.LVL601:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11334              		.loc 13 121 21 view .LVU2612
 11335 0664 FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11336              	.LVL602:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11337              		.loc 13 121 21 view .LVU2613
 11338              	.LBE5165:
 11339              	.LBE5168:
 11340              	.LBE5213:
 11341              	.LBB5214:
 11342              	.LBB5188:
 11343              	.LBB5184:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11344              		.loc 13 112 47 view .LVU2614
 11345 0668 DDE90431 		ldrd	r3, r1, [sp, #16]
 11346 066c 3CE7     		b	.L301
 11347              	.LVL603:
 11348              	.L298:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 497


 11349              		.loc 13 112 47 view .LVU2615
 11350              	.LBE5184:
 11351              	.LBE5188:
 11352              	.LBE5214:
 11353              	.LBB5215:
 11354              	.LBB5150:
 11355              	.LBB5146:
 11356              	.LBB5141:
 11357              	.LBI5141:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11358              		.loc 8 829 7 is_stmt 1 view .LVU2616
 11359              	.LBB5142:
 11360              	.LBI5142:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11361              		.loc 23 978 7 view .LVU2617
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11362              		.loc 23 978 7 is_stmt 0 view .LVU2618
 11363              	.LBE5142:
 11364              	.LBE5141:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11365              		.loc 13 121 21 view .LVU2619
 11366 066e 06AA     		add	r2, sp, #24
 11367              	.LVL604:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11368              		.loc 13 121 21 view .LVU2620
 11369 0670 1946     		mov	r1, r3
 11370 0672 6846     		mov	r0, sp
 11371 0674 FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11372              	.LVL605:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11373              		.loc 13 121 21 view .LVU2621
 11374 0678 2BE7     		b	.L299
 11375              	.LVL606:
 11376              	.L315:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11377              		.loc 13 121 21 view .LVU2622
 11378              	.LBE5146:
 11379              	.LBE5150:
 11380              	.LBE5215:
 11381              	.LBE5231:
 11382              	.LBB5232:
 11383              	.LBB5065:
 11384              	.LBB4879:
 11385              	.LBB4854:
 11386              	.LBB4850:
 11387              	.LBB4846:
 11388              	.LBI4846:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11389              		.loc 8 829 7 is_stmt 1 view .LVU2623
 11390              	.LBB4847:
 11391              	.LBI4847:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11392              		.loc 23 978 7 view .LVU2624
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11393              		.loc 23 978 7 is_stmt 0 view .LVU2625
 11394              	.LBE4847:
 11395              	.LBE4846:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 498


 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11396              		.loc 13 121 21 view .LVU2626
 11397 067a 06AA     		add	r2, sp, #24
 11398              	.LVL607:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11399              		.loc 13 121 21 view .LVU2627
 11400 067c 03A8     		add	r0, sp, #12
 11401              	.LVL608:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11402              		.loc 13 121 21 view .LVU2628
 11403 067e FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11404              	.LVL609:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11405              		.loc 13 121 21 view .LVU2629
 11406              	.LBE4850:
 11407              	.LBE4854:
 11408              	.LBE4879:
 11409              	.LBB4880:
 11410              	.LBB4875:
 11411              	.LBB4871:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11412              		.loc 13 112 47 view .LVU2630
 11413 0682 DDE90431 		ldrd	r3, r1, [sp, #16]
 11414 0686 7EE5     		b	.L316
 11415              	.LVL610:
 11416              	.L313:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11417              		.loc 13 112 47 view .LVU2631
 11418              	.LBE4871:
 11419              	.LBE4875:
 11420              	.LBE4880:
 11421              	.LBB4881:
 11422              	.LBB4835:
 11423              	.LBB4832:
 11424              	.LBB4828:
 11425              	.LBI4828:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11426              		.loc 8 829 7 is_stmt 1 view .LVU2632
 11427              	.LBB4829:
 11428              	.LBI4829:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11429              		.loc 23 978 7 view .LVU2633
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11430              		.loc 23 978 7 is_stmt 0 view .LVU2634
 11431              	.LBE4829:
 11432              	.LBE4828:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11433              		.loc 13 121 21 view .LVU2635
 11434 0688 06AA     		add	r2, sp, #24
 11435              	.LVL611:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11436              		.loc 13 121 21 view .LVU2636
 11437 068a 03A8     		add	r0, sp, #12
 11438              	.LVL612:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11439              		.loc 13 121 21 view .LVU2637
 11440 068c FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 499


 11441              	.LVL613:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11442              		.loc 13 121 21 view .LVU2638
 11443              	.LBE4832:
 11444              	.LBE4835:
 11445              	.LBE4881:
 11446              	.LBB4882:
 11447              	.LBB4855:
 11448              	.LBB4851:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11449              		.loc 13 112 47 view .LVU2639
 11450 0690 DDE90431 		ldrd	r3, r1, [sp, #16]
 11451 0694 69E5     		b	.L314
 11452              	.LVL614:
 11453              	.L311:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11454              		.loc 13 112 47 view .LVU2640
 11455              	.LBE4851:
 11456              	.LBE4855:
 11457              	.LBE4882:
 11458              	.LBB4883:
 11459              	.LBB4816:
 11460              	.LBB4812:
 11461              	.LBB4808:
 11462              	.LBI4808:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11463              		.loc 8 829 7 is_stmt 1 view .LVU2641
 11464              	.LBB4809:
 11465              	.LBI4809:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11466              		.loc 23 978 7 view .LVU2642
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11467              		.loc 23 978 7 is_stmt 0 view .LVU2643
 11468              	.LBE4809:
 11469              	.LBE4808:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11470              		.loc 13 121 21 view .LVU2644
 11471 0696 06AA     		add	r2, sp, #24
 11472              	.LVL615:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11473              		.loc 13 121 21 view .LVU2645
 11474 0698 1946     		mov	r1, r3
 11475 069a 6846     		mov	r0, sp
 11476 069c FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11477              	.LVL616:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11478              		.loc 13 121 21 view .LVU2646
 11479 06a0 58E5     		b	.L312
 11480              	.LVL617:
 11481              	.L309:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11482              		.loc 13 121 21 view .LVU2647
 11483              	.LBE4812:
 11484              	.LBE4816:
 11485              	.LBE4883:
 11486              	.LBB4884:
 11487              	.LBB4796:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 500


 11488              	.LBB4792:
 11489              	.LBB4788:
 11490              	.LBI4788:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11491              		.loc 8 829 7 is_stmt 1 view .LVU2648
 11492              	.LBB4789:
 11493              	.LBI4789:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11494              		.loc 23 978 7 view .LVU2649
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11495              		.loc 23 978 7 is_stmt 0 view .LVU2650
 11496              	.LBE4789:
 11497              	.LBE4788:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11498              		.loc 13 121 21 view .LVU2651
 11499 06a2 06AA     		add	r2, sp, #24
 11500              	.LVL618:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11501              		.loc 13 121 21 view .LVU2652
 11502 06a4 6846     		mov	r0, sp
 11503 06a6 FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11504              	.LVL619:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11505              		.loc 13 121 21 view .LVU2653
 11506              	.LBE4792:
 11507              	.LBE4796:
 11508              	.LBE4884:
 11509              	.LBB4885:
 11510              	.LBB4817:
 11511              	.LBB4813:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11512              		.loc 13 112 47 view .LVU2654
 11513 06aa DDE90131 		ldrd	r3, r1, [sp, #4]
 11514 06ae 49E5     		b	.L310
 11515              	.LVL620:
 11516              	.L307:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11517              		.loc 13 112 47 view .LVU2655
 11518              	.LBE4813:
 11519              	.LBE4817:
 11520              	.LBE4885:
 11521              	.LBB4886:
 11522              	.LBB4777:
 11523              	.LBB4774:
 11524              	.LBB4770:
 11525              	.LBI4770:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11526              		.loc 8 829 7 is_stmt 1 view .LVU2656
 11527              	.LBB4771:
 11528              	.LBI4771:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11529              		.loc 23 978 7 view .LVU2657
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11530              		.loc 23 978 7 is_stmt 0 view .LVU2658
 11531              	.LBE4771:
 11532              	.LBE4770:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 501


 11533              		.loc 13 121 21 view .LVU2659
 11534 06b0 06AA     		add	r2, sp, #24
 11535              	.LVL621:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11536              		.loc 13 121 21 view .LVU2660
 11537 06b2 6846     		mov	r0, sp
 11538 06b4 FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11539              	.LVL622:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11540              		.loc 13 121 21 view .LVU2661
 11541              	.LBE4774:
 11542              	.LBE4777:
 11543              	.LBE4886:
 11544              	.LBB4887:
 11545              	.LBB4797:
 11546              	.LBB4793:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11547              		.loc 13 112 47 view .LVU2662
 11548 06b8 DDE90131 		ldrd	r3, r1, [sp, #4]
 11549 06bc 36E5     		b	.L308
 11550              	.LVL623:
 11551              	.L326:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11552              		.loc 13 112 47 view .LVU2663
 11553              	.LBE4793:
 11554              	.LBE4797:
 11555              	.LBE4887:
 11556              	.LBE5065:
 11557              	.LBB5066:
 11558              	.LBB5043:
 11559              	.LBB5040:
 11560              	.LBB5036:
 11561              	.LBI5036:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11562              		.loc 8 829 7 is_stmt 1 view .LVU2664
 11563              	.LBB5037:
 11564              	.LBI5037:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11565              		.loc 23 978 7 view .LVU2665
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11566              		.loc 23 978 7 is_stmt 0 view .LVU2666
 11567              	.LBE5037:
 11568              	.LBE5036:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11569              		.loc 13 121 21 view .LVU2667
 11570 06be 06AA     		add	r2, sp, #24
 11571              	.LVL624:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11572              		.loc 13 121 21 view .LVU2668
 11573 06c0 03A8     		add	r0, sp, #12
 11574              	.LVL625:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11575              		.loc 13 121 21 view .LVU2669
 11576 06c2 FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11577              	.LVL626:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11578              		.loc 13 121 21 view .LVU2670
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 502


 11579              	.LBE5040:
 11580              	.LBE5043:
 11581              	.LBE5066:
 11582              	.LBB5067:
 11583              	.LBB5061:
 11584              	.LBB5058:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11585              		.loc 13 112 47 view .LVU2671
 11586 06c6 DDE90431 		ldrd	r3, r1, [sp, #16]
 11587 06ca 8BE7     		b	.L327
 11588              	.LVL627:
 11589              	.L324:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11590              		.loc 13 112 47 view .LVU2672
 11591              	.LBE5058:
 11592              	.LBE5061:
 11593              	.LBE5067:
 11594              	.LBB5068:
 11595              	.LBB5024:
 11596              	.LBB5020:
 11597              	.LBB5016:
 11598              	.LBI5016:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11599              		.loc 8 829 7 is_stmt 1 view .LVU2673
 11600              	.LBB5017:
 11601              	.LBI5017:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11602              		.loc 23 978 7 view .LVU2674
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11603              		.loc 23 978 7 is_stmt 0 view .LVU2675
 11604              	.LBE5017:
 11605              	.LBE5016:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11606              		.loc 13 121 21 view .LVU2676
 11607 06cc 06AA     		add	r2, sp, #24
 11608              	.LVL628:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11609              		.loc 13 121 21 view .LVU2677
 11610 06ce 6846     		mov	r0, sp
 11611 06d0 FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11612              	.LVL629:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11613              		.loc 13 121 21 view .LVU2678
 11614 06d4 7CE7     		b	.L325
 11615              	.LVL630:
 11616              	.L322:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11617              		.loc 13 121 21 view .LVU2679
 11618              	.LBE5020:
 11619              	.LBE5024:
 11620              	.LBE5068:
 11621              	.LBB5069:
 11622              	.LBB5004:
 11623              	.LBB5000:
 11624              	.LBB4996:
 11625              	.LBI4996:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 503


 11626              		.loc 8 829 7 is_stmt 1 view .LVU2680
 11627              	.LBB4997:
 11628              	.LBI4997:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11629              		.loc 23 978 7 view .LVU2681
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11630              		.loc 23 978 7 is_stmt 0 view .LVU2682
 11631              	.LBE4997:
 11632              	.LBE4996:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11633              		.loc 13 121 21 view .LVU2683
 11634 06d6 06AA     		add	r2, sp, #24
 11635              	.LVL631:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11636              		.loc 13 121 21 view .LVU2684
 11637 06d8 6846     		mov	r0, sp
 11638 06da FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11639              	.LVL632:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11640              		.loc 13 121 21 view .LVU2685
 11641              	.LBE5000:
 11642              	.LBE5004:
 11643              	.LBE5069:
 11644              	.LBB5070:
 11645              	.LBB5025:
 11646              	.LBB5021:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11647              		.loc 13 112 47 view .LVU2686
 11648 06de DDE90131 		ldrd	r3, r1, [sp, #4]
 11649 06e2 6DE7     		b	.L323
 11650              	.LVL633:
 11651              	.L320:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11652              		.loc 13 112 47 view .LVU2687
 11653              	.LBE5021:
 11654              	.LBE5025:
 11655              	.LBE5070:
 11656              	.LBB5071:
 11657              	.LBB4985:
 11658              	.LBB4982:
 11659              	.LBB4978:
 11660              	.LBI4978:
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11661              		.loc 8 829 7 is_stmt 1 view .LVU2688
 11662              	.LBB4979:
 11663              	.LBI4979:
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11664              		.loc 23 978 7 view .LVU2689
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11665              		.loc 23 978 7 is_stmt 0 view .LVU2690
 11666              	.LBE4979:
 11667              	.LBE4978:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11668              		.loc 13 121 21 view .LVU2691
 11669 06e4 06AA     		add	r2, sp, #24
 11670              	.LVL634:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 504


 11671              		.loc 13 121 21 view .LVU2692
 11672 06e6 6846     		mov	r0, sp
 11673 06e8 FFF7FEFF 		bl	_ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
 11674              	.LVL635:
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 11675              		.loc 13 121 21 view .LVU2693
 11676              	.LBE4982:
 11677              	.LBE4985:
 11678              	.LBE5071:
 11679              	.LBB5072:
 11680              	.LBB5005:
 11681              	.LBB5001:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11682              		.loc 13 112 47 view .LVU2694
 11683 06ec DDE90131 		ldrd	r3, r1, [sp, #4]
 11684 06f0 5EE7     		b	.L321
 11685              	.LVL636:
 11686              	.L336:
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 11687              		.loc 13 112 47 view .LVU2695
 11688              	.LBE5001:
 11689              	.LBE5005:
 11690              	.LBE5072:
 11691              	.LBE5232:
 11692              	.LBE5376:
 11693              	.LBE5540:
 11694              	.LBE5792:
 11695              	.LBB5793:
 11696              	.LBB5632:
 11697              	.LBB5598:
 11698              	.LBB5596:
 11699              	.LBB5594:
 11700              	.LBB5592:
 11701              	.LBB5591:
 11702              	.LBB5590:
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11703              		.loc 15 106 26 view .LVU2696
 11704 06f2 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 11705              	.LVL637:
 11706              	.L399:
 11707 06f6 00BF     		.align	2
 11708              	.L398:
 11709 06f8 14000000 		.word	.LC4
 11710 06fc 04000000 		.word	.LC4+4
 11711              	.LBE5590:
 11712              	.LBE5591:
 11713              	.LBE5592:
 11714              	.LBE5594:
 11715              	.LBE5596:
 11716              	.LBE5598:
 11717              	.LBE5632:
 11718              	.LBE5793:
 11719              		.cfi_endproc
 11720              	.LFE4756:
 11722              		.section	.text._Z13prepareToPlayf,"ax",%progbits
 11723              		.align	1
 11724              		.p2align 2,,3
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 505


 11725              		.global	_Z13prepareToPlayf
 11726              		.syntax unified
 11727              		.thumb
 11728              		.thumb_func
 11729              		.fpu fpv5-d16
 11731              	_Z13prepareToPlayf:
 11732              	.LVL638:
 11733              	.LFB4762:
  68:NewExampleProject.cpp **** 
  69:NewExampleProject.cpp **** void prepareToPlay(float samplerate)
  70:NewExampleProject.cpp **** {
 11734              		.loc 22 70 1 is_stmt 1 view -0
 11735              		.cfi_startproc
 11736              		@ args = 0, pretend = 0, frame = 24
 11737              		@ frame_needed = 0, uses_anonymous_args = 0
  71:NewExampleProject.cpp **** 	float initalFrequency = 10.0f;
 11738              		.loc 22 71 2 view .LVU2698
  72:NewExampleProject.cpp **** 	filter.setFilterType(filterState);
 11739              		.loc 22 72 2 view .LVU2699
 11740              	.LBB5842:
 11741              	.LBB5843:
 11742              	.LBB5844:
 11743              	.LBB5845:
 11744              	.LBB5846:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11745              		.loc 11 187 28 is_stmt 0 view .LVU2700
 11746 0000 144B     		ldr	r3, .L403
 11747              	.LBE5846:
 11748              	.LBE5845:
 11749              	.LBE5844:
 11750              	.LBE5843:
 11751              	.LBE5842:
  70:NewExampleProject.cpp **** 	float initalFrequency = 10.0f;
 11752              		.loc 22 70 1 view .LVU2701
 11753 0002 10B5     		push	{r4, lr}
 11754              		.cfi_def_cfa_offset 8
 11755              		.cfi_offset 4, -8
 11756              		.cfi_offset 14, -4
 11757 0004 2DED028B 		vpush.64	{d8}
 11758              		.cfi_def_cfa_offset 16
 11759              		.cfi_offset 80, -16
 11760              		.cfi_offset 81, -12
 11761 0008 86B0     		sub	sp, sp, #24
 11762              		.cfi_def_cfa_offset 40
 11763              	.LVL639:
 11764              	.LBB5882:
 11765              	.LBI5842:
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 11766              		.loc 11 448 7 is_stmt 1 view .LVU2702
 11767              	.LBB5880:
 11768              	.LBB5878:
 11769              	.LBB5847:
 11770              	.LBI5847:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11771              		.loc 11 190 7 view .LVU2703
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11772              		.loc 11 190 7 is_stmt 0 view .LVU2704
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 506


 11773              	.LBE5847:
 11774              	.LBB5848:
 11775              	.LBI5848:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 11776              		.loc 11 290 7 is_stmt 1 view .LVU2705
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 11777              		.loc 11 290 7 is_stmt 0 view .LVU2706
 11778              	.LBE5848:
 11779              	.LBB5849:
 11780              	.LBI5849:
 11781              		.loc 26 97 29 is_stmt 1 view .LVU2707
 11782              	.LBB5850:
 11783              	.LBI5850:
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 11784              		.loc 16 558 7 view .LVU2708
 11785              	.LBB5851:
 11786              	.LBI5851:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11787              		.loc 14 147 7 view .LVU2709
 11788              	.LBB5852:
 11789              	.LBI5852:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11790              		.loc 15 82 7 view .LVU2710
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11791              		.loc 15 82 7 is_stmt 0 view .LVU2711
 11792              	.LBE5852:
 11793              	.LBE5851:
 11794              	.LBE5850:
 11795              	.LBE5849:
 11796              	.LBB5853:
 11797              	.LBI5853:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 11798              		.loc 11 159 2 is_stmt 1 view .LVU2712
 11799              	.LBB5854:
 11800              	.LBB5855:
 11801              	.LBB5856:
 11802              	.LBI5856:
 11803              		.loc 21 101 5 view .LVU2713
 11804              		.loc 21 101 5 is_stmt 0 view .LVU2714
 11805              	.LBE5856:
 11806              	.LBB5857:
 11807              	.LBI5857:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11808              		.loc 14 147 7 is_stmt 1 view .LVU2715
 11809              	.LBB5858:
 11810              	.LBI5858:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11811              		.loc 15 82 7 view .LVU2716
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11812              		.loc 15 82 7 is_stmt 0 view .LVU2717
 11813              	.LBE5858:
 11814              	.LBE5857:
 11815              	.LBE5855:
 11816              	.LBE5854:
 11817              	.LBE5853:
 11818              	.LBE5878:
 11819              	.LBE5880:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 507


 11820              	.LBE5882:
  70:NewExampleProject.cpp **** 	float initalFrequency = 10.0f;
 11821              		.loc 22 70 1 view .LVU2718
 11822 000a B0EE408A 		vmov.f32	s16, s0
 11823              	.LBB5883:
 11824              	.LBB5881:
 11825              	.LBB5879:
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11826              		.loc 11 451 21 view .LVU2719
 11827 000e D3E90012 		ldrd	r1, r2, [r3]
 11828              	.LBB5863:
 11829              	.LBB5861:
 11830              	.LBB5859:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 11831              		.loc 11 160 46 view .LVU2720
 11832 0012 02AC     		add	r4, sp, #8
 11833              	.LVL640:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 11834              		.loc 11 160 46 view .LVU2721
 11835              	.LBE5859:
 11836              	.LBE5861:
 11837              	.LBE5863:
 11838              	.LBB5864:
 11839              	.LBB5865:
 11840              	.LBB5866:
 11841              	.LBB5867:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 11842              		.loc 11 247 23 view .LVU2722
 11843 0014 6846     		mov	r0, sp
 11844 0016 0A44     		add	r2, r2, r1
 11845              	.LBE5867:
 11846              	.LBE5866:
 11847              	.LBE5865:
 11848              	.LBE5864:
 11849              	.LBB5871:
 11850              	.LBB5862:
 11851              	.LBB5860:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 11852              		.loc 11 160 46 view .LVU2723
 11853 0018 0094     		str	r4, [sp]
 11854              	.LVL641:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 11855              		.loc 11 160 46 view .LVU2724
 11856              	.LBE5860:
 11857              	.LBE5862:
 11858              	.LBE5871:
 11859              	.LBB5872:
 11860              	.LBI5872:
 11861              		.loc 14 162 7 is_stmt 1 view .LVU2725
 11862              	.LBB5873:
 11863              	.LBI5873:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11864              		.loc 15 89 7 view .LVU2726
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11865              		.loc 15 89 7 is_stmt 0 view .LVU2727
 11866              	.LBE5873:
 11867              	.LBE5872:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 508


 11868              	.LBB5874:
 11869              	.LBI5845:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11870              		.loc 11 186 7 is_stmt 1 view .LVU2728
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11871              		.loc 11 186 7 is_stmt 0 view .LVU2729
 11872              	.LBE5874:
 11873              	.LBB5875:
 11874              	.LBI5875:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11875              		.loc 11 186 7 is_stmt 1 view .LVU2730
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11876              		.loc 11 186 7 is_stmt 0 view .LVU2731
 11877              	.LBE5875:
 11878              	.LBB5876:
 11879              	.LBI5876:
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11880              		.loc 11 907 7 is_stmt 1 view .LVU2732
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 11881              		.loc 11 907 7 is_stmt 0 view .LVU2733
 11882              	.LBE5876:
 11883              	.LBB5877:
 11884              	.LBI5864:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 11885              		.loc 11 263 9 is_stmt 1 view .LVU2734
 11886              	.LBB5870:
 11887              	.LBB5869:
 11888              	.LBI5866:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 11889              		.loc 11 243 9 view .LVU2735
 11890              	.LBB5868:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 11891              		.loc 11 247 23 is_stmt 0 view .LVU2736
 11892 001a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 11893              	.LVL642:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 11894              		.loc 11 247 23 view .LVU2737
 11895              	.LBE5868:
 11896              	.LBE5869:
 11897              	.LBE5870:
 11898              	.LBE5877:
 11899              	.LBE5879:
 11900              	.LBE5881:
 11901              	.LBE5883:
 11902              	.LBB5884:
 11903              	.LBI5884:
 136:../../dsp_fv/classicFilters.h ****     {
 11904              		.loc 19 136 10 is_stmt 1 view .LVU2738
 11905              	.LBE5884:
 138:../../dsp_fv/classicFilters.h ****     }
 11906              		.loc 19 138 9 view .LVU2739
 11907              	.LBB5888:
 11908              	.LBB5885:
 11909              	.LBI5885:
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11910              		.loc 11 665 7 view .LVU2740
 11911              	.LBB5886:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 509


 11912              	.LBI5886:
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11913              		.loc 11 1335 7 view .LVU2741
 11914              	.LBB5887:
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 11915              		.loc 11 1366 17 is_stmt 0 view .LVU2742
 11916 001e 0E48     		ldr	r0, .L403+4
 11917 0020 6946     		mov	r1, sp
 11918 0022 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 11919              	.LVL643:
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 11920              		.loc 11 1366 17 view .LVU2743
 11921              	.LBE5887:
 11922              	.LBE5886:
 11923              	.LBE5885:
 11924              	.LBE5888:
 11925              	.LBB5889:
 11926              	.LBI5889:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 11927              		.loc 11 657 7 is_stmt 1 view .LVU2744
 11928              	.LBB5890:
 11929              	.LBB5891:
 11930              	.LBI5891:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11931              		.loc 11 229 7 view .LVU2745
 11932              	.LBB5892:
 11933              	.LBB5893:
 11934              	.LBI5893:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 11935              		.loc 11 221 7 view .LVU2746
 11936              	.LBB5894:
 11937              	.LBI5894:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 11938              		.loc 11 186 7 view .LVU2747
 11939              	.LBB5895:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11940              		.loc 11 187 28 is_stmt 0 view .LVU2748
 11941 0026 0098     		ldr	r0, [sp]
 11942              	.LVL644:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11943              		.loc 11 187 28 view .LVU2749
 11944              	.LBE5895:
 11945              	.LBE5894:
 11946              	.LBB5896:
 11947              	.LBI5896:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11948              		.loc 11 200 7 is_stmt 1 view .LVU2750
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11949              		.loc 11 200 7 is_stmt 0 view .LVU2751
 11950              	.LBE5896:
 11951              	.LBE5893:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11952              		.loc 11 231 2 view .LVU2752
 11953 0028 A042     		cmp	r0, r4
 11954 002a 03D0     		beq	.L401
 11955              	.LVL645:
 11956              	.LBB5897:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 510


 11957              	.LBI5897:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11958              		.loc 11 236 7 is_stmt 1 view .LVU2753
 11959              	.LBB5898:
 11960              	.LBB5899:
 11961              	.LBI5899:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11962              		.loc 16 491 7 view .LVU2754
 11963              	.LBB5900:
 11964              	.LBI5900:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 11965              		.loc 15 120 7 view .LVU2755
 11966              	.LBE5900:
 11967              	.LBE5899:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 11968              		.loc 11 237 34 is_stmt 0 view .LVU2756
 11969 002c 0299     		ldr	r1, [sp, #8]
 11970              	.LBB5903:
 11971              	.LBB5902:
 11972              	.LBB5901:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11973              		.loc 15 133 19 view .LVU2757
 11974 002e 0131     		adds	r1, r1, #1
 11975              	.LVL646:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11976              		.loc 15 133 19 view .LVU2758
 11977 0030 FFF7FEFF 		bl	_ZdlPvj
 11978              	.LVL647:
 11979              	.L401:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 11980              		.loc 15 133 19 view .LVU2759
 11981              	.LBE5901:
 11982              	.LBE5902:
 11983              	.LBE5903:
 11984              	.LBE5898:
 11985              	.LBE5897:
 11986              	.LBE5892:
 11987              	.LBE5891:
 11988              	.LBB5904:
 11989              	.LBI5904:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11990              		.loc 11 150 14 is_stmt 1 view .LVU2760
 11991              	.LBB5905:
 11992              	.LBI5905:
 11993              		.loc 14 162 7 view .LVU2761
 11994              	.LBB5906:
 11995              	.LBI5906:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11996              		.loc 15 89 7 view .LVU2762
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11997              		.loc 15 89 7 is_stmt 0 view .LVU2763
 11998              	.LBE5906:
 11999              	.LBE5905:
 12000              	.LBE5904:
 12001              	.LBE5890:
 12002              	.LBE5889:
  73:NewExampleProject.cpp **** 	filter.setCoefficients(initalFrequency,1.0,samplerate);
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 511


 12003              		.loc 22 73 2 is_stmt 1 view .LVU2764
 12004              		.loc 22 73 24 is_stmt 0 view .LVU2765
 12005 0034 F7EE001A 		vmov.f32	s3, #1.0e+0
 12006 0038 0848     		ldr	r0, .L403+8
 12007 003a B2EE040A 		vmov.f32	s0, #1.0e+1
 12008 003e B0EE481A 		vmov.f32	s2, s16
 12009 0042 F0EE610A 		vmov.f32	s1, s3
 12010 0046 FFF7FEFF 		bl	_ZN14ClassicFilters15setCoefficientsEffff
 12011              	.LVL648:
  74:NewExampleProject.cpp **** }
 12012              		.loc 22 74 1 view .LVU2766
 12013 004a 06B0     		add	sp, sp, #24
 12014              		.cfi_def_cfa_offset 16
 12015              		@ sp needed
 12016 004c BDEC028B 		vldm	sp!, {d8}
 12017              		.cfi_restore 80
 12018              		.cfi_restore 81
 12019              		.cfi_def_cfa_offset 8
 12020              	.LVL649:
 12021              		.loc 22 74 1 view .LVU2767
 12022 0050 10BD     		pop	{r4, pc}
 12023              	.L404:
 12024 0052 00BF     		.align	2
 12025              	.L403:
 12026 0054 00000000 		.word	.LANCHOR4
 12027 0058 60000000 		.word	.LANCHOR5+96
 12028 005c 00000000 		.word	.LANCHOR5
 12029              		.cfi_endproc
 12030              	.LFE4762:
 12032              		.section	.text.startup.main,"ax",%progbits
 12033              		.align	1
 12034              		.p2align 2,,3
 12035              		.global	main
 12036              		.syntax unified
 12037              		.thumb
 12038              		.thumb_func
 12039              		.fpu fpv5-d16
 12041              	main:
 12042              	.LFB4764:
  75:NewExampleProject.cpp **** 
  76:NewExampleProject.cpp **** 
  77:NewExampleProject.cpp **** /// @brief processes the audio block
  78:NewExampleProject.cpp **** /// @param in 
  79:NewExampleProject.cpp **** /// @param out 
  80:NewExampleProject.cpp **** /// @param size 
  81:NewExampleProject.cpp **** void processAudioBlock(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  82:NewExampleProject.cpp **** {
  83:NewExampleProject.cpp **** 	processFilterSelectButton();
  84:NewExampleProject.cpp **** 	filter.setFilterType(filterState);
  85:NewExampleProject.cpp **** 	filter.setCoefficients(hardware.adc.GetFloat(0)*20000 + 50 , hardware.adc.GetFloat(1)*20+0.5, samp
  86:NewExampleProject.cpp **** 
  87:NewExampleProject.cpp **** 	for (size_t i = 0; i < size; i++)
  88:NewExampleProject.cpp **** 	{
  89:NewExampleProject.cpp **** 		out[0][i] = filter.processAudioSample( in[0][i]);
  90:NewExampleProject.cpp **** 		out[1][i] = filter.processAudioSample( in[1][i]);
  91:NewExampleProject.cpp **** 	}
  92:NewExampleProject.cpp **** }
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 512


  93:NewExampleProject.cpp **** 
  94:NewExampleProject.cpp **** 
  95:NewExampleProject.cpp **** int main(void)
  96:NewExampleProject.cpp **** {
 12043              		.loc 22 96 1 is_stmt 1 view -0
 12044              		.cfi_startproc
 12045              		@ Volatile: function does not return.
 12046              		@ args = 0, pretend = 0, frame = 0
 12047              		@ frame_needed = 0, uses_anonymous_args = 0
  97:NewExampleProject.cpp **** 	prepareHardware();
 12048              		.loc 22 97 2 view .LVU2769
  96:NewExampleProject.cpp **** 	prepareHardware();
 12049              		.loc 22 96 1 is_stmt 0 view .LVU2770
 12050 0000 08B5     		push	{r3, lr}
 12051              		.cfi_def_cfa_offset 8
 12052              		.cfi_offset 3, -8
 12053              		.cfi_offset 14, -4
 12054              		.loc 22 97 17 view .LVU2771
 12055 0002 FFF7FEFF 		bl	_Z15prepareHardwarev
 12056              	.LVL650:
  98:NewExampleProject.cpp **** 	prepareToPlay(samplerate);
 12057              		.loc 22 98 2 is_stmt 1 view .LVU2772
 12058              		.loc 22 98 15 is_stmt 0 view .LVU2773
 12059 0006 064B     		ldr	r3, .L408
 12060 0008 93ED000A 		vldr.32	s0, [r3]
 12061 000c FFF7FEFF 		bl	_Z13prepareToPlayf
 12062              	.LVL651:
  99:NewExampleProject.cpp **** 	
 100:NewExampleProject.cpp **** 	hardware.adc.Start();
 12063              		.loc 22 100 2 is_stmt 1 view .LVU2774
 12064              		.loc 22 100 20 is_stmt 0 view .LVU2775
 12065 0010 0448     		ldr	r0, .L408+4
 12066 0012 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 12067              	.LVL652:
 101:NewExampleProject.cpp **** 	hardware.StartAudio(processAudioBlock);
 12068              		.loc 22 101 2 is_stmt 1 view .LVU2776
 12069              		.loc 22 101 21 is_stmt 0 view .LVU2777
 12070 0016 0449     		ldr	r1, .L408+8
 12071 0018 0448     		ldr	r0, .L408+12
 12072 001a FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 12073              	.LVL653:
 12074              	.L406:
 102:NewExampleProject.cpp **** 
 103:NewExampleProject.cpp **** 
 104:NewExampleProject.cpp **** 	while(1) {}
 12075              		.loc 22 104 2 is_stmt 1 discriminator 1 view .LVU2778
 12076              		.loc 22 104 2 discriminator 1 view .LVU2779
 12077              		.loc 22 104 2 discriminator 1 view .LVU2780
 12078              		.loc 22 104 2 discriminator 1 view .LVU2781
 12079 001e FEE7     		b	.L406
 12080              	.L409:
 12081              		.align	2
 12082              	.L408:
 12083 0020 00000000 		.word	.LANCHOR1
 12084 0024 18000000 		.word	.LANCHOR0+24
 12085 0028 00000000 		.word	_Z17processAudioBlockPKPKfPPfj
 12086 002c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 513


 12087              		.cfi_endproc
 12088              	.LFE4764:
 12090              		.section	.text._Z17processAudioBlockPKPKfPPfj,"ax",%progbits
 12091              		.align	1
 12092              		.p2align 2,,3
 12093              		.global	_Z17processAudioBlockPKPKfPPfj
 12094              		.syntax unified
 12095              		.thumb
 12096              		.thumb_func
 12097              		.fpu fpv5-d16
 12099              	_Z17processAudioBlockPKPKfPPfj:
 12100              	.LVL654:
 12101              	.LFB4763:
  82:NewExampleProject.cpp **** 	processFilterSelectButton();
 12102              		.loc 22 82 1 view -0
 12103              		.cfi_startproc
 12104              		@ args = 0, pretend = 0, frame = 24
 12105              		@ frame_needed = 0, uses_anonymous_args = 0
  83:NewExampleProject.cpp **** 	filter.setFilterType(filterState);
 12106              		.loc 22 83 2 view .LVU2783
  82:NewExampleProject.cpp **** 	processFilterSelectButton();
 12107              		.loc 22 82 1 is_stmt 0 view .LVU2784
 12108 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 12109              		.cfi_def_cfa_offset 32
 12110              		.cfi_offset 4, -32
 12111              		.cfi_offset 5, -28
 12112              		.cfi_offset 6, -24
 12113              		.cfi_offset 7, -20
 12114              		.cfi_offset 8, -16
 12115              		.cfi_offset 9, -12
 12116              		.cfi_offset 10, -8
 12117              		.cfi_offset 14, -4
 12118 0004 2DED028B 		vpush.64	{d8}
 12119              		.cfi_def_cfa_offset 40
 12120              		.cfi_offset 80, -40
 12121              		.cfi_offset 81, -36
 12122 0008 86B0     		sub	sp, sp, #24
 12123              		.cfi_def_cfa_offset 64
  82:NewExampleProject.cpp **** 	processFilterSelectButton();
 12124              		.loc 22 82 1 view .LVU2785
 12125 000a 0646     		mov	r6, r0
 12126 000c 0F46     		mov	r7, r1
 12127 000e 9046     		mov	r8, r2
  83:NewExampleProject.cpp **** 	filter.setFilterType(filterState);
 12128              		.loc 22 83 27 view .LVU2786
 12129 0010 FFF7FEFF 		bl	_Z25processFilterSelectButtonv
 12130              	.LVL655:
  84:NewExampleProject.cpp **** 	filter.setCoefficients(hardware.adc.GetFloat(0)*20000 + 50 , hardware.adc.GetFloat(1)*20+0.5, samp
 12131              		.loc 22 84 2 is_stmt 1 view .LVU2787
 12132              	.LBB5960:
 12133              	.LBI5960:
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 12134              		.loc 11 448 7 view .LVU2788
 12135              	.LBB5961:
 12136              	.LBB5962:
 12137              	.LBB5963:
 12138              	.LBI5963:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 514


 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12139              		.loc 11 190 7 view .LVU2789
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12140              		.loc 11 190 7 is_stmt 0 view .LVU2790
 12141              	.LBE5963:
 12142              	.LBB5964:
 12143              	.LBI5964:
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 12144              		.loc 11 290 7 is_stmt 1 view .LVU2791
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 12145              		.loc 11 290 7 is_stmt 0 view .LVU2792
 12146              	.LBE5964:
 12147              	.LBB5965:
 12148              	.LBI5965:
 12149              		.loc 26 97 29 is_stmt 1 view .LVU2793
 12150              	.LBB5966:
 12151              	.LBI5966:
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __rhs; }
 12152              		.loc 16 558 7 view .LVU2794
 12153              	.LBB5967:
 12154              	.LBI5967:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12155              		.loc 14 147 7 view .LVU2795
 12156              	.LBB5968:
 12157              	.LBI5968:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12158              		.loc 15 82 7 view .LVU2796
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12159              		.loc 15 82 7 is_stmt 0 view .LVU2797
 12160              	.LBE5968:
 12161              	.LBE5967:
 12162              	.LBE5966:
 12163              	.LBE5965:
 12164              	.LBB5969:
 12165              	.LBI5969:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 12166              		.loc 11 159 2 is_stmt 1 view .LVU2798
 12167              	.LBB5970:
 12168              	.LBB5971:
 12169              	.LBB5972:
 12170              	.LBI5972:
 12171              		.loc 21 101 5 view .LVU2799
 12172              		.loc 21 101 5 is_stmt 0 view .LVU2800
 12173              	.LBE5972:
 12174              	.LBB5973:
 12175              	.LBI5973:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12176              		.loc 14 147 7 is_stmt 1 view .LVU2801
 12177              	.LBB5974:
 12178              	.LBI5974:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12179              		.loc 15 82 7 view .LVU2802
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12180              		.loc 15 82 7 is_stmt 0 view .LVU2803
 12181              	.LBE5974:
 12182              	.LBE5973:
 12183              	.LBE5971:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 515


 12184              	.LBE5970:
 12185              	.LBE5969:
 12186              	.LBB5979:
 12187              	.LBB5980:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12188              		.loc 11 187 28 view .LVU2804
 12189 0014 2C4B     		ldr	r3, .L419
 12190              	.LBE5980:
 12191              	.LBE5979:
 12192              	.LBB5981:
 12193              	.LBB5977:
 12194              	.LBB5975:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12195              		.loc 11 160 46 view .LVU2805
 12196 0016 02AC     		add	r4, sp, #8
 12197              	.LVL656:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12198              		.loc 11 160 46 view .LVU2806
 12199              	.LBE5975:
 12200              	.LBE5977:
 12201              	.LBE5981:
 12202              	.LBB5982:
 12203              	.LBB5983:
 12204              	.LBB5984:
 12205              	.LBB5985:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 12206              		.loc 11 247 23 view .LVU2807
 12207 0018 6846     		mov	r0, sp
 12208              	.LBE5985:
 12209              	.LBE5984:
 12210              	.LBE5983:
 12211              	.LBE5982:
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12212              		.loc 11 451 21 view .LVU2808
 12213 001a D3E90012 		ldrd	r1, r2, [r3]
 12214              	.LBB5989:
 12215              	.LBB5978:
 12216              	.LBB5976:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12217              		.loc 11 160 46 view .LVU2809
 12218 001e 0094     		str	r4, [sp]
 12219              	.LVL657:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12220              		.loc 11 160 46 view .LVU2810
 12221              	.LBE5976:
 12222              	.LBE5978:
 12223              	.LBE5989:
 12224              	.LBB5990:
 12225              	.LBI5990:
 12226              		.loc 14 162 7 is_stmt 1 view .LVU2811
 12227              	.LBB5991:
 12228              	.LBI5991:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12229              		.loc 15 89 7 view .LVU2812
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12230              		.loc 15 89 7 is_stmt 0 view .LVU2813
 12231              	.LBE5991:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 516


 12232              	.LBE5990:
 12233              	.LBB5992:
 12234              	.LBI5979:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12235              		.loc 11 186 7 is_stmt 1 view .LVU2814
 12236              	.LBE5992:
 12237              	.LBB5993:
 12238              	.LBB5988:
 12239              	.LBB5987:
 12240              	.LBB5986:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 12241              		.loc 11 247 23 is_stmt 0 view .LVU2815
 12242 0020 0A44     		add	r2, r2, r1
 12243 0022 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 12244              	.LVL658:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 12245              		.loc 11 247 23 view .LVU2816
 12246              	.LBE5986:
 12247              	.LBE5987:
 12248              	.LBE5988:
 12249              	.LBE5993:
 12250              	.LBE5962:
 12251              	.LBE5961:
 12252              	.LBE5960:
 12253              	.LBB5994:
 12254              	.LBI5994:
 136:../../dsp_fv/classicFilters.h ****     {
 12255              		.loc 19 136 10 is_stmt 1 view .LVU2817
 12256              	.LBE5994:
 138:../../dsp_fv/classicFilters.h ****     }
 12257              		.loc 19 138 9 view .LVU2818
 12258              	.LBB5998:
 12259              	.LBB5995:
 12260              	.LBI5995:
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12261              		.loc 11 665 7 view .LVU2819
 12262              	.LBB5996:
 12263              	.LBI5996:
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12264              		.loc 11 1335 7 view .LVU2820
 12265              	.LBB5997:
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 12266              		.loc 11 1366 17 is_stmt 0 view .LVU2821
 12267 0026 2948     		ldr	r0, .L419+4
 12268 0028 6946     		mov	r1, sp
 12269 002a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 12270              	.LVL659:
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 12271              		.loc 11 1366 17 view .LVU2822
 12272              	.LBE5997:
 12273              	.LBE5996:
 12274              	.LBE5995:
 12275              	.LBE5998:
 12276              	.LBB5999:
 12277              	.LBI5999:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 12278              		.loc 11 657 7 is_stmt 1 view .LVU2823
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 517


 12279              	.LBB6000:
 12280              	.LBB6001:
 12281              	.LBI6001:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12282              		.loc 11 229 7 view .LVU2824
 12283              	.LBB6002:
 12284              	.LBB6003:
 12285              	.LBI6003:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 12286              		.loc 11 221 7 view .LVU2825
 12287              	.LBB6004:
 12288              	.LBI6004:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12289              		.loc 11 186 7 view .LVU2826
 12290              	.LBB6005:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12291              		.loc 11 187 28 is_stmt 0 view .LVU2827
 12292 002e 0098     		ldr	r0, [sp]
 12293              	.LVL660:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12294              		.loc 11 187 28 view .LVU2828
 12295              	.LBE6005:
 12296              	.LBE6004:
 12297              	.LBB6006:
 12298              	.LBI6006:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12299              		.loc 11 200 7 is_stmt 1 view .LVU2829
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12300              		.loc 11 200 7 is_stmt 0 view .LVU2830
 12301              	.LBE6006:
 12302              	.LBE6003:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 12303              		.loc 11 231 2 view .LVU2831
 12304 0030 A042     		cmp	r0, r4
 12305 0032 03D0     		beq	.L411
 12306              	.LVL661:
 12307              	.LBB6007:
 12308              	.LBI6007:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 12309              		.loc 11 236 7 is_stmt 1 view .LVU2832
 12310              	.LBB6008:
 12311              	.LBB6009:
 12312              	.LBI6009:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 12313              		.loc 16 491 7 view .LVU2833
 12314              	.LBB6010:
 12315              	.LBI6010:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 12316              		.loc 15 120 7 view .LVU2834
 12317              	.LBE6010:
 12318              	.LBE6009:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12319              		.loc 11 237 34 is_stmt 0 view .LVU2835
 12320 0034 0299     		ldr	r1, [sp, #8]
 12321              	.LBB6013:
 12322              	.LBB6012:
 12323              	.LBB6011:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 518


 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12324              		.loc 15 133 19 view .LVU2836
 12325 0036 0131     		adds	r1, r1, #1
 12326              	.LVL662:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12327              		.loc 15 133 19 view .LVU2837
 12328 0038 FFF7FEFF 		bl	_ZdlPvj
 12329              	.LVL663:
 12330              	.L411:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12331              		.loc 15 133 19 view .LVU2838
 12332              	.LBE6011:
 12333              	.LBE6012:
 12334              	.LBE6013:
 12335              	.LBE6008:
 12336              	.LBE6007:
 12337              	.LBE6002:
 12338              	.LBE6001:
 12339              	.LBB6014:
 12340              	.LBI6014:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12341              		.loc 11 150 14 is_stmt 1 view .LVU2839
 12342              	.LBB6015:
 12343              	.LBI6015:
 12344              		.loc 14 162 7 view .LVU2840
 12345              	.LBB6016:
 12346              	.LBI6016:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12347              		.loc 15 89 7 view .LVU2841
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12348              		.loc 15 89 7 is_stmt 0 view .LVU2842
 12349              	.LBE6016:
 12350              	.LBE6015:
 12351              	.LBE6014:
 12352              	.LBE6000:
 12353              	.LBE5999:
  85:NewExampleProject.cpp **** 
 12354              		.loc 22 85 2 is_stmt 1 view .LVU2843
  85:NewExampleProject.cpp **** 
 12355              		.loc 22 85 46 is_stmt 0 view .LVU2844
 12356 003c 0021     		movs	r1, #0
 12357 003e 2448     		ldr	r0, .L419+8
 12358 0040 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12359              	.LVL664:
  85:NewExampleProject.cpp **** 
 12360              		.loc 22 85 24 view .LVU2845
 12361 0044 9FED238A 		vldr.32	s16, .L419+12
 12362 0048 DFED237A 		vldr.32	s15, .L419+16
  85:NewExampleProject.cpp **** 
 12363              		.loc 22 85 84 view .LVU2846
 12364 004c 0121     		movs	r1, #1
 12365 004e 2048     		ldr	r0, .L419+8
  85:NewExampleProject.cpp **** 
 12366              		.loc 22 85 24 view .LVU2847
 12367 0050 A0EE278A 		vfma.f32	s16, s0, s15
  85:NewExampleProject.cpp **** 
 12368              		.loc 22 85 84 view .LVU2848
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 519


 12369 0054 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12370              	.LVL665:
 12371 0058 F3EE047A 		vmov.f32	s15, #2.0e+1
  85:NewExampleProject.cpp **** 
 12372              		.loc 22 85 24 view .LVU2849
 12373 005c 1F4B     		ldr	r3, .L419+20
  85:NewExampleProject.cpp **** 
 12374              		.loc 22 85 84 view .LVU2850
 12375 005e B0EE407A 		vmov.f32	s14, s0
  85:NewExampleProject.cpp **** 
 12376              		.loc 22 85 24 view .LVU2851
 12377 0062 1F48     		ldr	r0, .L419+24
 12378 0064 F6EE000A 		vmov.f32	s1, #5.0e-1
 12379 0068 93ED001A 		vldr.32	s2, [r3]
 12380 006c F7EE001A 		vmov.f32	s3, #1.0e+0
 12381 0070 E7EE270A 		vfma.f32	s1, s14, s15
 12382 0074 B0EE480A 		vmov.f32	s0, s16
 12383 0078 FFF7FEFF 		bl	_ZN14ClassicFilters15setCoefficientsEffff
 12384              	.LVL666:
  87:NewExampleProject.cpp **** 	{
 12385              		.loc 22 87 2 is_stmt 1 view .LVU2852
 12386              	.LBB6017:
  87:NewExampleProject.cpp **** 	{
 12387              		.loc 22 87 23 view .LVU2853
 12388 007c B8F1000F 		cmp	r8, #0
 12389 0080 1DD0     		beq	.L410
  87:NewExampleProject.cpp **** 	{
 12390              		.loc 22 87 14 is_stmt 0 view .LVU2854
 12391 0082 0024     		movs	r4, #0
 12392              	.LVL667:
 12393              	.L413:
  89:NewExampleProject.cpp **** 		out[1][i] = filter.processAudioSample( in[1][i]);
 12394              		.loc 22 89 3 is_stmt 1 discriminator 2 view .LVU2855
  89:NewExampleProject.cpp **** 		out[1][i] = filter.processAudioSample( in[1][i]);
 12395              		.loc 22 89 40 is_stmt 0 discriminator 2 view .LVU2856
 12396 0084 3268     		ldr	r2, [r6]
 12397 0086 4FEA840A 		lsl	r10, r4, #2
  89:NewExampleProject.cpp **** 		out[1][i] = filter.processAudioSample( in[1][i]);
 12398              		.loc 22 89 11 discriminator 2 view .LVU2857
 12399 008a 3B68     		ldr	r3, [r7]
  89:NewExampleProject.cpp **** 		out[1][i] = filter.processAudioSample( in[1][i]);
 12400              		.loc 22 89 40 discriminator 2 view .LVU2858
 12401 008c 02EB8402 		add	r2, r2, r4, lsl #2
 12402              	.LBB6018:
 12403              	.LBB6019:
 149:../../dsp_fv/classicFilters.h ****         return yn;
 12404              		.loc 19 149 57 discriminator 2 view .LVU2859
 12405 0090 1448     		ldr	r0, .L419+28
 12406              	.LBE6019:
 12407              	.LBE6018:
  89:NewExampleProject.cpp **** 		out[1][i] = filter.processAudioSample( in[1][i]);
 12408              		.loc 22 89 11 discriminator 2 view .LVU2860
 12409 0092 03EB8409 		add	r9, r3, r4, lsl #2
 12410              	.LVL668:
 12411              	.LBB6022:
 12412              	.LBI6018:
 147:../../dsp_fv/classicFilters.h ****     {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 520


 12413              		.loc 19 147 11 is_stmt 1 discriminator 2 view .LVU2861
 12414              	.LBB6020:
 149:../../dsp_fv/classicFilters.h ****         return yn;
 12415              		.loc 19 149 9 discriminator 2 view .LVU2862
 12416              	.LBE6020:
 12417              	.LBE6022:
  87:NewExampleProject.cpp **** 	{
 12418              		.loc 22 87 2 is_stmt 0 discriminator 2 view .LVU2863
 12419 0096 0134     		adds	r4, r4, #1
 12420              	.LVL669:
 12421              	.LBB6023:
 12422              	.LBB6021:
 149:../../dsp_fv/classicFilters.h ****         return yn;
 12423              		.loc 19 149 57 discriminator 2 view .LVU2864
 12424 0098 92ED000A 		vldr.32	s0, [r2]
 12425 009c FFF7FEFF 		bl	_ZN6Biquad18processAudioSampleEf
 12426              	.LVL670:
 150:../../dsp_fv/classicFilters.h ****     }
 12427              		.loc 19 150 9 is_stmt 1 discriminator 2 view .LVU2865
 150:../../dsp_fv/classicFilters.h ****     }
 12428              		.loc 19 150 9 is_stmt 0 discriminator 2 view .LVU2866
 12429              	.LBE6021:
 12430              	.LBE6023:
  90:NewExampleProject.cpp **** 	}
 12431              		.loc 22 90 40 discriminator 2 view .LVU2867
 12432 00a0 7368     		ldr	r3, [r6, #4]
  90:NewExampleProject.cpp **** 	}
 12433              		.loc 22 90 11 discriminator 2 view .LVU2868
 12434 00a2 7D68     		ldr	r5, [r7, #4]
  90:NewExampleProject.cpp **** 	}
 12435              		.loc 22 90 40 discriminator 2 view .LVU2869
 12436 00a4 5344     		add	r3, r3, r10
  89:NewExampleProject.cpp **** 		out[1][i] = filter.processAudioSample( in[1][i]);
 12437              		.loc 22 89 13 discriminator 2 view .LVU2870
 12438 00a6 89ED000A 		vstr.32	s0, [r9]
  90:NewExampleProject.cpp **** 	}
 12439              		.loc 22 90 3 is_stmt 1 discriminator 2 view .LVU2871
 12440              	.LBB6024:
 12441              	.LBB6025:
 149:../../dsp_fv/classicFilters.h ****         return yn;
 12442              		.loc 19 149 57 is_stmt 0 discriminator 2 view .LVU2872
 12443 00aa 0E48     		ldr	r0, .L419+28
 12444              	.LBE6025:
 12445              	.LBE6024:
  90:NewExampleProject.cpp **** 	}
 12446              		.loc 22 90 11 discriminator 2 view .LVU2873
 12447 00ac 5544     		add	r5, r5, r10
 12448              	.LVL671:
 12449              	.LBB6027:
 12450              	.LBI6024:
 147:../../dsp_fv/classicFilters.h ****     {
 12451              		.loc 19 147 11 is_stmt 1 discriminator 2 view .LVU2874
 12452              	.LBB6026:
 149:../../dsp_fv/classicFilters.h ****         return yn;
 12453              		.loc 19 149 9 discriminator 2 view .LVU2875
 149:../../dsp_fv/classicFilters.h ****         return yn;
 12454              		.loc 19 149 57 is_stmt 0 discriminator 2 view .LVU2876
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 521


 12455 00ae 93ED000A 		vldr.32	s0, [r3]
 12456 00b2 FFF7FEFF 		bl	_ZN6Biquad18processAudioSampleEf
 12457              	.LVL672:
 150:../../dsp_fv/classicFilters.h ****     }
 12458              		.loc 19 150 9 is_stmt 1 discriminator 2 view .LVU2877
 150:../../dsp_fv/classicFilters.h ****     }
 12459              		.loc 19 150 9 is_stmt 0 discriminator 2 view .LVU2878
 12460              	.LBE6026:
 12461              	.LBE6027:
  87:NewExampleProject.cpp **** 	{
 12462              		.loc 22 87 23 discriminator 2 view .LVU2879
 12463 00b6 A045     		cmp	r8, r4
  90:NewExampleProject.cpp **** 	}
 12464              		.loc 22 90 13 discriminator 2 view .LVU2880
 12465 00b8 85ED000A 		vstr.32	s0, [r5]
  87:NewExampleProject.cpp **** 	{
 12466              		.loc 22 87 2 is_stmt 1 discriminator 2 view .LVU2881
 12467              	.LVL673:
  87:NewExampleProject.cpp **** 	{
 12468              		.loc 22 87 23 discriminator 2 view .LVU2882
 12469 00bc E2D1     		bne	.L413
 12470              	.LVL674:
 12471              	.L410:
  87:NewExampleProject.cpp **** 	{
 12472              		.loc 22 87 23 is_stmt 0 discriminator 2 view .LVU2883
 12473              	.LBE6017:
  92:NewExampleProject.cpp **** 
 12474              		.loc 22 92 1 view .LVU2884
 12475 00be 06B0     		add	sp, sp, #24
 12476              		.cfi_def_cfa_offset 40
 12477              		@ sp needed
 12478 00c0 BDEC028B 		vldm	sp!, {d8}
 12479              		.cfi_restore 80
 12480              		.cfi_restore 81
 12481              		.cfi_def_cfa_offset 32
 12482 00c4 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 12483              	.LVL675:
 12484              	.L420:
  92:NewExampleProject.cpp **** 
 12485              		.loc 22 92 1 view .LVU2885
 12486              		.align	2
 12487              	.L419:
 12488 00c8 00000000 		.word	.LANCHOR4
 12489 00cc 60000000 		.word	.LANCHOR5+96
 12490 00d0 18000000 		.word	.LANCHOR0+24
 12491 00d4 00004842 		.word	1112014848
 12492 00d8 00409C46 		.word	1184645120
 12493 00dc 00000000 		.word	.LANCHOR1
 12494 00e0 00000000 		.word	.LANCHOR5
 12495 00e4 78000000 		.word	.LANCHOR5+120
 12496              		.cfi_endproc
 12497              	.LFE4763:
 12499              		.section	.text.startup._GLOBAL__sub_I_hardware,"ax",%progbits
 12500              		.align	1
 12501              		.p2align 2,,3
 12502              		.syntax unified
 12503              		.thumb
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 522


 12504              		.thumb_func
 12505              		.fpu fpv5-d16
 12507              	_GLOBAL__sub_I_hardware:
 12508              	.LFB5505:
 105:NewExampleProject.cpp **** }
 12509              		.loc 22 105 1 is_stmt 1 view -0
 12510              		.cfi_startproc
 12511              		@ args = 0, pretend = 0, frame = 24
 12512              		@ frame_needed = 0, uses_anonymous_args = 0
 12513              	.LBB6133:
 12514              	.LBI6133:
 12515              		.loc 22 105 1 view .LVU2887
 12516              	.LVL676:
 12517              	.LBB6134:
 12518              	.LBB6135:
 12519              	.LBI6135:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 12520              		.loc 2 21 5 view .LVU2888
 12521              	.LBB6136:
 12522              	.LBB6137:
 12523              	.LBI6137:
 12524              		.file 27 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 523


  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 524


  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 525


 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 12525              		.loc 27 166 5 view .LVU2889
 12526              	.LBE6137:
 12527              	.LBE6136:
 12528              	.LBE6135:
 12529              	.LBE6134:
 12530              	.LBE6133:
 12531              		.loc 22 105 1 is_stmt 0 view .LVU2890
 12532 0000 70B5     		push	{r4, r5, r6, lr}
 12533              		.cfi_def_cfa_offset 16
 12534              		.cfi_offset 4, -16
 12535              		.cfi_offset 5, -12
 12536              		.cfi_offset 6, -8
 12537              		.cfi_offset 14, -4
 12538              	.LBB6301:
 12539              	.LBB6296:
 12540              	.LBB6158:
 12541              	.LBB6156:
 12542              	.LBB6142:
 12543              	.LBB6138:
 12544              	.LBB6139:
 12545              		.loc 27 166 34 view .LVU2891
 12546 0002 2348     		ldr	r0, .L424
 12547 0004 0025     		movs	r5, #0
 12548              	.LBE6139:
 12549              	.LBE6138:
 12550              	.LBE6142:
 12551              	.LBE6156:
 12552              	.LBE6158:
 12553              	.LBB6159:
 12554              	.LBB6160:
 12555              	.LBB6161:
  24:../../dsp_fv/classicFilters.h ****         biquadStruct.setType("direct");
 12556              		.loc 19 24 5 view .LVU2892
 12557 0006 234C     		ldr	r4, .L424+4
 12558              	.LBE6161:
 12559              	.LBE6160:
 12560              	.LBE6159:
 12561              	.LBE6296:
 12562              	.LBE6301:
 12563              		.loc 22 105 1 view .LVU2893
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 526


 12564 0008 86B0     		sub	sp, sp, #24
 12565              		.cfi_def_cfa_offset 40
 12566              	.LBB6302:
 12567              	.LBB6297:
   7:NewExampleProject.cpp **** ClassicFilters filter;
 12568              		.loc 22 7 11 view .LVU2894
 12569 000a 2349     		ldr	r1, .L424+8
 12570 000c 234A     		ldr	r2, .L424+12
 12571              	.LBB6255:
 12572              	.LBB6251:
 12573              	.LBB6247:
 12574              	.LBB6162:
 12575              	.LBB6163:
 12576              	.LBB6164:
 12577              	.LBB6165:
 12578              	.LBB6166:
 12579              	.LBB6167:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12580              		.loc 11 157 35 view .LVU2895
 12581 000e 02AE     		add	r6, sp, #8
 12582              	.LBE6167:
 12583              	.LBE6166:
 12584              	.LBE6165:
 12585              	.LBE6164:
 12586              	.LBE6163:
 12587              	.LBE6162:
 12588              	.LBE6247:
 12589              	.LBE6251:
 12590              	.LBE6255:
 12591              	.LBB6256:
 12592              	.LBB6157:
 12593              	.LBB6143:
 12594              	.LBB6141:
 12595              	.LBB6140:
 12596              		.loc 27 166 34 view .LVU2896
 12597 0010 0560     		str	r5, [r0]
 12598              	.LVL677:
 12599              		.loc 27 166 34 view .LVU2897
 12600              	.LBE6140:
 12601              	.LBE6141:
 12602              	.LBE6143:
 12603              	.LBB6144:
 12604              	.LBI6144:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 12605              		.loc 6 95 5 is_stmt 1 view .LVU2898
 12606              	.LBB6145:
 12607              	.LBB6146:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 12608              		.loc 6 95 35 is_stmt 0 view .LVU2899
 12609 0012 4561     		str	r5, [r0, #20]
 12610              	.LVL678:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 12611              		.loc 6 95 35 view .LVU2900
 12612              	.LBE6146:
 12613              	.LBE6145:
 12614              	.LBE6144:
 12615              	.LBB6147:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 527


 12616              	.LBI6147:
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 12617              		.loc 5 109 5 is_stmt 1 view .LVU2901
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 12618              		.loc 5 109 5 is_stmt 0 view .LVU2902
 12619              	.LBE6147:
 12620              	.LBB6148:
 12621              	.LBI6148:
 12622              		.file 28 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 528


  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 12623              		.loc 28 84 5 is_stmt 1 view .LVU2903
 12624              	.LBB6149:
 12625              	.LBB6150:
 12626              		.loc 28 84 33 is_stmt 0 view .LVU2904
 12627 0014 0562     		str	r5, [r0, #32]
 12628              	.LVL679:
 12629              		.loc 28 84 33 view .LVU2905
 12630              	.LBE6150:
 12631              	.LBE6149:
 12632              	.LBE6148:
 12633              	.LBB6151:
 12634              	.LBI6151:
  40:../../libDaisy//src/hid/usb.h **** 
 12635              		.loc 4 40 5 is_stmt 1 view .LVU2906
  40:../../libDaisy//src/hid/usb.h **** 
 12636              		.loc 4 40 5 is_stmt 0 view .LVU2907
 12637              	.LBE6151:
 12638              	.LBB6152:
 12639              	.LBI6152:
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 12640              		.loc 3 96 5 is_stmt 1 view .LVU2908
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 529


  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 12641              		.loc 3 96 5 is_stmt 0 view .LVU2909
 12642              	.LBE6152:
 12643              	.LBB6153:
 12644              	.LBI6153:
 12645              		.file 29 "../../libDaisy//src/per/sai.h"
   1:../../libDaisy//src/per/sai.h **** #pragma once
   2:../../libDaisy//src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../libDaisy//src/per/sai.h **** #define DSY_SAI_H
   4:../../libDaisy//src/per/sai.h **** 
   5:../../libDaisy//src/per/sai.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/sai.h **** 
   7:../../libDaisy//src/per/sai.h **** namespace daisy
   8:../../libDaisy//src/per/sai.h **** {
   9:../../libDaisy//src/per/sai.h **** /** 
  10:../../libDaisy//src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../libDaisy//src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../libDaisy//src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../libDaisy//src/per/sai.h ****  * 
  14:../../libDaisy//src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../libDaisy//src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../libDaisy//src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../libDaisy//src/per/sai.h ****  *
  18:../../libDaisy//src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../libDaisy//src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../libDaisy//src/per/sai.h ****  * 
  21:../../libDaisy//src/per/sai.h ****  * Use SAI Handle like this:
  22:../../libDaisy//src/per/sai.h ****  * 
  23:../../libDaisy//src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../libDaisy//src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../libDaisy//src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../libDaisy//src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../libDaisy//src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../libDaisy//src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../libDaisy//src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../libDaisy//src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../libDaisy//src/per/sai.h ****  *  // Then Initialize
  37:../../libDaisy//src/per/sai.h ****  *  SaiHandle sai;
  38:../../libDaisy//src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../libDaisy//src/per/sai.h ****  *  // Now you can use it:
  40:../../libDaisy//src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../libDaisy//src/per/sai.h ****  */
  42:../../libDaisy//src/per/sai.h **** class SaiHandle
  43:../../libDaisy//src/per/sai.h **** {
  44:../../libDaisy//src/per/sai.h ****   public:
  45:../../libDaisy//src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../libDaisy//src/per/sai.h ****     struct Config
  47:../../libDaisy//src/per/sai.h ****     {
  48:../../libDaisy//src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../libDaisy//src/per/sai.h ****         enum class Peripheral
  50:../../libDaisy//src/per/sai.h ****         {
  51:../../libDaisy//src/per/sai.h ****             SAI_1,
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 530


  52:../../libDaisy//src/per/sai.h ****             SAI_2,
  53:../../libDaisy//src/per/sai.h ****         };
  54:../../libDaisy//src/per/sai.h **** 
  55:../../libDaisy//src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../libDaisy//src/per/sai.h ****         enum class SampleRate
  57:../../libDaisy//src/per/sai.h ****         {
  58:../../libDaisy//src/per/sai.h ****             SAI_8KHZ,
  59:../../libDaisy//src/per/sai.h ****             SAI_16KHZ,
  60:../../libDaisy//src/per/sai.h ****             SAI_32KHZ,
  61:../../libDaisy//src/per/sai.h ****             SAI_48KHZ,
  62:../../libDaisy//src/per/sai.h ****             SAI_96KHZ,
  63:../../libDaisy//src/per/sai.h ****         };
  64:../../libDaisy//src/per/sai.h **** 
  65:../../libDaisy//src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../libDaisy//src/per/sai.h ****         enum class BitDepth
  67:../../libDaisy//src/per/sai.h ****         {
  68:../../libDaisy//src/per/sai.h ****             SAI_16BIT,
  69:../../libDaisy//src/per/sai.h ****             SAI_24BIT,
  70:../../libDaisy//src/per/sai.h ****             SAI_32BIT,
  71:../../libDaisy//src/per/sai.h ****         };
  72:../../libDaisy//src/per/sai.h **** 
  73:../../libDaisy//src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../libDaisy//src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../libDaisy//src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../libDaisy//src/per/sai.h ****          */
  77:../../libDaisy//src/per/sai.h ****         enum class Sync
  78:../../libDaisy//src/per/sai.h ****         {
  79:../../libDaisy//src/per/sai.h ****             MASTER,
  80:../../libDaisy//src/per/sai.h ****             SLAVE,
  81:../../libDaisy//src/per/sai.h ****         };
  82:../../libDaisy//src/per/sai.h **** 
  83:../../libDaisy//src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../libDaisy//src/per/sai.h ****         enum class Direction
  85:../../libDaisy//src/per/sai.h ****         {
  86:../../libDaisy//src/per/sai.h ****             TRANSMIT,
  87:../../libDaisy//src/per/sai.h ****             RECEIVE,
  88:../../libDaisy//src/per/sai.h ****         };
  89:../../libDaisy//src/per/sai.h **** 
  90:../../libDaisy//src/per/sai.h ****         Peripheral periph;
  91:../../libDaisy//src/per/sai.h ****         struct
  92:../../libDaisy//src/per/sai.h ****         {
  93:../../libDaisy//src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../libDaisy//src/per/sai.h ****         } pin_config;
  95:../../libDaisy//src/per/sai.h ****         SampleRate sr;
  96:../../libDaisy//src/per/sai.h ****         BitDepth   bit_depth;
  97:../../libDaisy//src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../libDaisy//src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../libDaisy//src/per/sai.h ****     };
 100:../../libDaisy//src/per/sai.h **** 
 101:../../libDaisy//src/per/sai.h ****     /** Return values for SAI functions */
 102:../../libDaisy//src/per/sai.h ****     enum class Result
 103:../../libDaisy//src/per/sai.h ****     {
 104:../../libDaisy//src/per/sai.h ****         OK,
 105:../../libDaisy//src/per/sai.h ****         ERR,
 106:../../libDaisy//src/per/sai.h ****     };
 107:../../libDaisy//src/per/sai.h **** 
 108:../../libDaisy//src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 531


 12646              		.loc 29 108 5 is_stmt 1 view .LVU2910
 12647              	.LBB6154:
 12648              	.LBB6155:
 12649              		.loc 29 108 33 is_stmt 0 view .LVU2911
 12650 0016 C563     		str	r5, [r0, #60]
 12651              	.LVL680:
 12652              		.loc 29 108 33 view .LVU2912
 12653              	.LBE6155:
 12654              	.LBE6154:
 12655              	.LBE6153:
 12656              	.LBE6157:
 12657              	.LBE6256:
   7:NewExampleProject.cpp **** ClassicFilters filter;
 12658              		.loc 22 7 11 view .LVU2913
 12659 0018 FFF7FEFF 		bl	__aeabi_atexit
 12660              	.LVL681:
 12661              	.LBB6257:
 12662              	.LBI6159:
  23:../../dsp_fv/classicFilters.h ****     {
 12663              		.loc 19 23 5 is_stmt 1 view .LVU2914
 12664              	.LBB6252:
 12665              	.LBB6248:
  24:../../dsp_fv/classicFilters.h ****         biquadStruct.setType("direct");
 12666              		.loc 19 24 5 is_stmt 0 view .LVU2915
 12667 001c 2046     		mov	r0, r4
 12668 001e FFF7FEFF 		bl	_ZN6BiquadC2Ev
 12669              	.LVL682:
 12670 0022 2346     		mov	r3, r4
 12671 0024 1E4A     		ldr	r2, .L424+16
 12672 0026 04F17800 		add	r0, r4, #120
 12673              	.LBB6190:
 12674              	.LBB6191:
 12675              	.LBB6192:
 12676              	.LBB6193:
 12677              	.LBB6194:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12678              		.loc 11 183 26 view .LVU2916
 12679 002a 6566     		str	r5, [r4, #100]
 12680              	.LBE6194:
 12681              	.LBE6193:
 12682              	.LBE6192:
 12683              	.LBE6191:
 12684              	.LBE6190:
  24:../../dsp_fv/classicFilters.h ****         biquadStruct.setType("direct");
 12685              		.loc 19 24 5 view .LVU2917
 12686 002c 43F8682B 		str	r2, [r3], #104
 12687              	.LVL683:
 12688              	.LBB6217:
 12689              	.LBI6190:
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 12690              		.loc 11 431 7 is_stmt 1 view .LVU2918
 12691              	.LBB6216:
 12692              	.LBB6200:
 12693              	.LBI6200:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12694              		.loc 11 190 7 view .LVU2919
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 532


 12695              		.loc 11 190 7 is_stmt 0 view .LVU2920
 12696              	.LBE6200:
 12697              	.LBB6201:
 12698              	.LBI6201:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 12699              		.loc 14 144 7 is_stmt 1 view .LVU2921
 12700              	.LBB6202:
 12701              	.LBI6202:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12702              		.loc 15 79 7 view .LVU2922
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12703              		.loc 15 79 7 is_stmt 0 view .LVU2923
 12704              	.LBE6202:
 12705              	.LBE6201:
 12706              	.LBB6203:
 12707              	.LBI6203:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 12708              		.loc 11 159 2 is_stmt 1 view .LVU2924
 12709              	.LBB6204:
 12710              	.LBB6205:
 12711              	.LBB6206:
 12712              	.LBI6206:
 12713              		.loc 21 101 5 view .LVU2925
 12714              		.loc 21 101 5 is_stmt 0 view .LVU2926
 12715              	.LBE6206:
 12716              	.LBB6207:
 12717              	.LBI6207:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12718              		.loc 14 147 7 is_stmt 1 view .LVU2927
 12719              	.LBB6208:
 12720              	.LBI6208:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12721              		.loc 15 82 7 view .LVU2928
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12722              		.loc 15 82 7 is_stmt 0 view .LVU2929
 12723              	.LBE6208:
 12724              	.LBE6207:
 12725              	.LBE6205:
 12726              	.LBE6204:
 12727              	.LBE6203:
 12728              	.LBB6211:
 12729              	.LBB6195:
 12730              	.LBB6196:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12731              		.loc 12 322 14 view .LVU2930
 12732 0030 84F86850 		strb	r5, [r4, #104]
 12733              	.LBE6196:
 12734              	.LBE6195:
 12735              	.LBE6211:
 12736              	.LBB6212:
 12737              	.LBB6210:
 12738              	.LBB6209:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12739              		.loc 11 160 46 view .LVU2931
 12740 0034 2366     		str	r3, [r4, #96]
 12741              	.LVL684:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 533


 12742              		.loc 11 160 46 view .LVU2932
 12743              	.LBE6209:
 12744              	.LBE6210:
 12745              	.LBE6212:
 12746              	.LBB6213:
 12747              	.LBI6213:
 12748              		.loc 14 162 7 is_stmt 1 view .LVU2933
 12749              	.LBB6214:
 12750              	.LBI6214:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12751              		.loc 15 89 7 view .LVU2934
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12752              		.loc 15 89 7 is_stmt 0 view .LVU2935
 12753              	.LBE6214:
 12754              	.LBE6213:
 12755              	.LBB6215:
 12756              	.LBI6192:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12757              		.loc 11 214 7 is_stmt 1 view .LVU2936
 12758              	.LBB6198:
 12759              	.LBI6193:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 12760              		.loc 11 182 7 view .LVU2937
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 12761              		.loc 11 182 7 is_stmt 0 view .LVU2938
 12762              	.LBE6198:
 12763              	.LBB6199:
 12764              	.LBI6195:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12765              		.loc 12 321 7 is_stmt 1 view .LVU2939
 12766              	.LBB6197:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12767              		.loc 12 322 9 view .LVU2940
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12768              		.loc 12 322 9 is_stmt 0 view .LVU2941
 12769              	.LBE6197:
 12770              	.LBE6199:
 12771              	.LBE6215:
 12772              	.LBE6216:
 12773              	.LBE6217:
  24:../../dsp_fv/classicFilters.h ****         biquadStruct.setType("direct");
 12774              		.loc 19 24 5 view .LVU2942
 12775 0036 FFF7FEFF 		bl	_ZN6BiquadC1Ev
 12776              	.LVL685:
  25:../../dsp_fv/classicFilters.h **** 
 12777              		.loc 19 25 9 is_stmt 1 view .LVU2943
 12778              	.LBB6218:
 12779              	.LBI6218:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 12780              		.loc 14 144 7 view .LVU2944
 12781              	.LBB6219:
 12782              	.LBI6219:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12783              		.loc 15 79 7 view .LVU2945
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12784              		.loc 15 79 7 is_stmt 0 view .LVU2946
 12785              	.LBE6219:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 534


 12786              	.LBE6218:
 12787              	.LBB6220:
 12788              	.LBI6162:
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 12789              		.loc 11 525 7 is_stmt 1 view .LVU2947
 12790              	.LBB6188:
 12791              	.LBB6186:
 12792              	.LBB6174:
 12793              	.LBI6174:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12794              		.loc 11 190 7 view .LVU2948
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12795              		.loc 11 190 7 is_stmt 0 view .LVU2949
 12796              	.LBE6174:
 12797              	.LBB6175:
 12798              	.LBI6165:
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 12799              		.loc 11 156 2 is_stmt 1 view .LVU2950
 12800              	.LBB6172:
 12801              	.LBB6170:
 12802              	.LBB6168:
 12803              	.LBI6168:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12804              		.loc 14 147 7 view .LVU2951
 12805              	.LBB6169:
 12806              	.LBI6169:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12807              		.loc 15 82 7 view .LVU2952
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12808              		.loc 15 82 7 is_stmt 0 view .LVU2953
 12809              	.LBE6169:
 12810              	.LBE6168:
 12811              	.LBE6170:
 12812              	.LBE6172:
 12813              	.LBE6175:
 12814              	.LBB6176:
 12815              	.LBB6177:
 12816              	.LBB6178:
 12817              	.LBB6179:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 12818              		.loc 11 247 23 view .LVU2954
 12819 003a 1A4A     		ldr	r2, .L424+20
 12820 003c 6846     		mov	r0, sp
 12821              	.LBE6179:
 12822              	.LBE6178:
 12823              	.LBE6177:
 12824              	.LBE6176:
 12825              	.LBB6183:
 12826              	.LBB6173:
 12827              	.LBB6171:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12828              		.loc 11 157 35 view .LVU2955
 12829 003e 0096     		str	r6, [sp]
 12830              	.LVL686:
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12831              		.loc 11 157 35 view .LVU2956
 12832              	.LBE6171:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 535


 12833              	.LBE6173:
 12834              	.LBE6183:
 12835              	.LBB6184:
 12836              	.LBI6184:
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 12837              		.loc 12 351 7 is_stmt 1 view .LVU2957
 12838              	.LBE6184:
 12839              	.LBE6186:
 12840              	.LBE6188:
 12841              	.LBE6220:
 12842              	.LBE6248:
 12843              	.LBE6252:
 12844              	.LBE6257:
 12845              	.LBE6297:
 12846              	.LBE6302:
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 12847              		.loc 12 357 2 view .LVU2958
 12848              	.LBB6303:
 12849              	.LBB6298:
 12850              	.LBB6258:
 12851              	.LBB6253:
 12852              	.LBB6249:
 12853              	.LBB6221:
 12854              	.LBB6189:
 12855              	.LBB6187:
 12856              	.LBB6185:
 12857              	.LBI6176:
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 12858              		.loc 11 263 9 view .LVU2959
 12859              	.LBB6182:
 12860              	.LBB6181:
 12861              	.LBI6178:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 12862              		.loc 11 243 9 view .LVU2960
 12863              	.LBB6180:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 12864              		.loc 11 247 23 is_stmt 0 view .LVU2961
 12865 0040 911F     		subs	r1, r2, #6
 12866 0042 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 12867              	.LVL687:
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 12868              		.loc 11 247 23 view .LVU2962
 12869              	.LBE6180:
 12870              	.LBE6181:
 12871              	.LBE6182:
 12872              	.LBE6185:
 12873              	.LBE6187:
 12874              	.LBE6189:
 12875              	.LBE6221:
 12876              	.LBB6222:
 12877              	.LBI6222:
 104:../../dsp_fv/biquad.h ****     {
 12878              		.loc 7 104 10 is_stmt 1 view .LVU2963
 12879              	.LBE6222:
 12880              	.LBE6249:
 12881              	.LBE6253:
 12882              	.LBE6258:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 536


 12883              	.LBE6298:
 12884              	.LBE6303:
 12885              		.loc 7 106 9 view .LVU2964
 12886              	.LBB6304:
 12887              	.LBB6299:
 12888              	.LBB6259:
 12889              	.LBB6254:
 12890              	.LBB6250:
 12891              	.LBB6226:
 12892              	.LBB6223:
 12893              	.LBI6223:
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12894              		.loc 11 665 7 view .LVU2965
 12895              	.LBB6224:
 12896              	.LBI6224:
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12897              		.loc 11 1335 7 view .LVU2966
 12898              	.LBB6225:
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 12899              		.loc 11 1366 17 is_stmt 0 view .LVU2967
 12900 0046 04F1C000 		add	r0, r4, #192
 12901 004a 6946     		mov	r1, sp
 12902 004c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 12903              	.LVL688:
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 12904              		.loc 11 1366 17 view .LVU2968
 12905              	.LBE6225:
 12906              	.LBE6224:
 12907              	.LBE6223:
 12908              	.LBE6226:
 12909              	.LBB6227:
 12910              	.LBI6227:
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 12911              		.loc 11 657 7 is_stmt 1 view .LVU2969
 12912              	.LBB6228:
 12913              	.LBB6229:
 12914              	.LBI6229:
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12915              		.loc 11 229 7 view .LVU2970
 12916              	.LBB6230:
 12917              	.LBB6231:
 12918              	.LBI6231:
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 12919              		.loc 11 221 7 view .LVU2971
 12920              	.LBB6232:
 12921              	.LBI6232:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 12922              		.loc 11 186 7 view .LVU2972
 12923              	.LBB6233:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12924              		.loc 11 187 28 is_stmt 0 view .LVU2973
 12925 0050 0098     		ldr	r0, [sp]
 12926              	.LVL689:
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12927              		.loc 11 187 28 view .LVU2974
 12928              	.LBE6233:
 12929              	.LBE6232:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 537


 12930              	.LBB6234:
 12931              	.LBI6234:
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12932              		.loc 11 200 7 is_stmt 1 view .LVU2975
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12933              		.loc 11 200 7 is_stmt 0 view .LVU2976
 12934              	.LBE6234:
 12935              	.LBE6231:
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 12936              		.loc 11 231 2 view .LVU2977
 12937 0052 B042     		cmp	r0, r6
 12938 0054 03D0     		beq	.L422
 12939              	.LVL690:
 12940              	.LBB6235:
 12941              	.LBI6235:
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 12942              		.loc 11 236 7 is_stmt 1 view .LVU2978
 12943              	.LBB6236:
 12944              	.LBB6237:
 12945              	.LBI6237:
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 12946              		.loc 16 491 7 view .LVU2979
 12947              	.LBB6238:
 12948              	.LBI6238:
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 12949              		.loc 15 120 7 view .LVU2980
 12950              	.LBE6238:
 12951              	.LBE6237:
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12952              		.loc 11 237 34 is_stmt 0 view .LVU2981
 12953 0056 0299     		ldr	r1, [sp, #8]
 12954              	.LBB6241:
 12955              	.LBB6240:
 12956              	.LBB6239:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12957              		.loc 15 133 19 view .LVU2982
 12958 0058 0131     		adds	r1, r1, #1
 12959              	.LVL691:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12960              		.loc 15 133 19 view .LVU2983
 12961 005a FFF7FEFF 		bl	_ZdlPvj
 12962              	.LVL692:
 12963              	.L422:
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 12964              		.loc 15 133 19 view .LVU2984
 12965              	.LBE6239:
 12966              	.LBE6240:
 12967              	.LBE6241:
 12968              	.LBE6236:
 12969              	.LBE6235:
 12970              	.LBE6230:
 12971              	.LBE6229:
 12972              	.LBB6242:
 12973              	.LBI6242:
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12974              		.loc 11 150 14 is_stmt 1 view .LVU2985
 12975              	.LBB6243:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 538


 12976              	.LBI6243:
 12977              		.loc 14 162 7 view .LVU2986
 12978              	.LBB6244:
 12979              	.LBI6244:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12980              		.loc 15 89 7 view .LVU2987
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12981              		.loc 15 89 7 is_stmt 0 view .LVU2988
 12982              	.LBE6244:
 12983              	.LBE6243:
 12984              	.LBE6242:
 12985              	.LBE6228:
 12986              	.LBE6227:
 12987              	.LBB6245:
 12988              	.LBI6245:
 12989              		.loc 14 162 7 is_stmt 1 view .LVU2989
 12990              	.LBB6246:
 12991              	.LBI6246:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12992              		.loc 15 89 7 view .LVU2990
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12993              		.loc 15 89 7 is_stmt 0 view .LVU2991
 12994              	.LBE6246:
 12995              	.LBE6245:
 12996              	.LBE6250:
 12997              	.LBE6254:
 12998              	.LBE6259:
   8:NewExampleProject.cpp **** Switch filterSelectButton;
 12999              		.loc 22 8 16 view .LVU2992
 13000 005e 0F4A     		ldr	r2, .L424+12
 13001 0060 1149     		ldr	r1, .L424+24
 13002 0062 0C48     		ldr	r0, .L424+4
 13003 0064 FFF7FEFF 		bl	__aeabi_atexit
 13004              	.LVL693:
 13005              	.LBB6260:
 13006              	.LBI6260:
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 13007              		.loc 1 41 5 is_stmt 1 view .LVU2993
  41:../../libDaisy//src/hid/switch.h ****     ~Switch() {}
 13008              		.loc 1 41 5 is_stmt 0 view .LVU2994
 13009              	.LBE6260:
   9:NewExampleProject.cpp **** 
 13010              		.loc 22 9 8 view .LVU2995
 13011 0068 0C4A     		ldr	r2, .L424+12
 13012 006a 1049     		ldr	r1, .L424+28
 13013 006c 1048     		ldr	r0, .L424+32
 13014 006e FFF7FEFF 		bl	__aeabi_atexit
 13015              	.LVL694:
 13016              	.LBB6261:
 13017              	.LBI6261:
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 13018              		.loc 11 431 7 is_stmt 1 view .LVU2996
 13019              	.LBB6262:
 13020              	.LBB6263:
 13021              	.LBI6263:
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13022              		.loc 11 190 7 view .LVU2997
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 539


 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13023              		.loc 11 190 7 is_stmt 0 view .LVU2998
 13024              	.LBE6263:
 13025              	.LBB6264:
 13026              	.LBI6264:
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 13027              		.loc 14 144 7 is_stmt 1 view .LVU2999
 13028              	.LBB6265:
 13029              	.LBI6265:
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13030              		.loc 15 79 7 view .LVU3000
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13031              		.loc 15 79 7 is_stmt 0 view .LVU3001
 13032              	.LBE6265:
 13033              	.LBE6264:
 13034              	.LBB6266:
 13035              	.LBI6266:
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 13036              		.loc 11 159 2 is_stmt 1 view .LVU3002
 13037              	.LBB6267:
 13038              	.LBB6268:
 13039              	.LBB6269:
 13040              	.LBI6269:
 13041              		.loc 21 101 5 view .LVU3003
 13042              		.loc 21 101 5 is_stmt 0 view .LVU3004
 13043              	.LBE6269:
 13044              	.LBB6270:
 13045              	.LBI6270:
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13046              		.loc 14 147 7 is_stmt 1 view .LVU3005
 13047              	.LBB6271:
 13048              	.LBI6271:
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13049              		.loc 15 82 7 view .LVU3006
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13050              		.loc 15 82 7 is_stmt 0 view .LVU3007
 13051              	.LBE6271:
 13052              	.LBE6270:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 13053              		.loc 11 160 46 view .LVU3008
 13054 0072 1048     		ldr	r0, .L424+36
 13055              	.LBE6268:
 13056              	.LBE6267:
 13057              	.LBE6266:
 13058              	.LBB6276:
 13059              	.LBB6277:
 13060              	.LBB6278:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13061              		.loc 11 183 26 view .LVU3009
 13062 0074 0023     		movs	r3, #0
 13063              	.LBE6278:
 13064              	.LBE6277:
 13065              	.LBE6276:
 13066              	.LBE6262:
 13067              	.LBE6261:
  11:NewExampleProject.cpp **** float samplerate;
 13068              		.loc 22 11 8 view .LVU3010
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 540


 13069 0076 094A     		ldr	r2, .L424+12
 13070              	.LBB6294:
 13071              	.LBB6292:
 13072              	.LBB6286:
 13073              	.LBB6274:
 13074              	.LBB6272:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 13075              		.loc 11 160 46 view .LVU3011
 13076 0078 00F10804 		add	r4, r0, #8
 13077              	.LBE6272:
 13078              	.LBE6274:
 13079              	.LBE6286:
 13080              	.LBE6292:
 13081              	.LBE6294:
  11:NewExampleProject.cpp **** float samplerate;
 13082              		.loc 22 11 8 view .LVU3012
 13083 007c 0E49     		ldr	r1, .L424+40
 13084              	.LBB6295:
 13085              	.LBB6293:
 13086              	.LBB6287:
 13087              	.LBB6280:
 13088              	.LBB6279:
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 13089              		.loc 11 183 26 view .LVU3013
 13090 007e 4360     		str	r3, [r0, #4]
 13091              	.LBE6279:
 13092              	.LBE6280:
 13093              	.LBB6281:
 13094              	.LBB6282:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13095              		.loc 12 322 14 view .LVU3014
 13096 0080 0372     		strb	r3, [r0, #8]
 13097              	.LBE6282:
 13098              	.LBE6281:
 13099              	.LBE6287:
 13100              	.LBB6288:
 13101              	.LBB6275:
 13102              	.LBB6273:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 13103              		.loc 11 160 46 view .LVU3015
 13104 0082 0460     		str	r4, [r0]
 13105              	.LVL695:
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 13106              		.loc 11 160 46 view .LVU3016
 13107              	.LBE6273:
 13108              	.LBE6275:
 13109              	.LBE6288:
 13110              	.LBB6289:
 13111              	.LBI6289:
 13112              		.loc 14 162 7 is_stmt 1 view .LVU3017
 13113              	.LBB6290:
 13114              	.LBI6290:
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13115              		.loc 15 89 7 view .LVU3018
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 13116              		.loc 15 89 7 is_stmt 0 view .LVU3019
 13117              	.LBE6290:
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 541


 13118              	.LBE6289:
 13119              	.LBB6291:
 13120              	.LBI6276:
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 13121              		.loc 11 214 7 is_stmt 1 view .LVU3020
 13122              	.LBB6284:
 13123              	.LBI6277:
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 13124              		.loc 11 182 7 view .LVU3021
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 13125              		.loc 11 182 7 is_stmt 0 view .LVU3022
 13126              	.LBE6284:
 13127              	.LBB6285:
 13128              	.LBI6281:
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 13129              		.loc 12 321 7 is_stmt 1 view .LVU3023
 13130              	.LBB6283:
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13131              		.loc 12 322 9 view .LVU3024
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 13132              		.loc 12 322 9 is_stmt 0 view .LVU3025
 13133              	.LBE6283:
 13134              	.LBE6285:
 13135              	.LBE6291:
 13136              	.LBE6293:
 13137              	.LBE6295:
 13138              	.LBE6299:
 13139              	.LBE6304:
 13140              		.loc 22 105 1 view .LVU3026
 13141 0084 06B0     		add	sp, sp, #24
 13142              		.cfi_def_cfa_offset 16
 13143              		@ sp needed
 13144 0086 BDE87040 		pop	{r4, r5, r6, lr}
 13145              		.cfi_restore 14
 13146              		.cfi_restore 6
 13147              		.cfi_restore 5
 13148              		.cfi_restore 4
 13149              		.cfi_def_cfa_offset 0
 13150              	.LBB6305:
 13151              	.LBB6300:
  11:NewExampleProject.cpp **** float samplerate;
 13152              		.loc 22 11 8 view .LVU3027
 13153 008a FFF7FEBF 		b	__aeabi_atexit
 13154              	.LVL696:
 13155              	.L425:
 13156 008e 00BF     		.align	2
 13157              	.L424:
 13158 0090 00000000 		.word	.LANCHOR0
 13159 0094 00000000 		.word	.LANCHOR5
 13160 0098 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 13161 009c 00000000 		.word	__dso_handle
 13162 00a0 08000000 		.word	_ZTV14ClassicFilters+8
 13163 00a4 06000000 		.word	.LC2+6
 13164 00a8 00000000 		.word	_ZN14ClassicFiltersD1Ev
 13165 00ac 00000000 		.word	_ZN5daisy6SwitchD1Ev
 13166 00b0 00000000 		.word	.LANCHOR2
 13167 00b4 00000000 		.word	.LANCHOR4
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 542


 13168 00b8 00000000 		.word	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 13169              	.LBE6300:
 13170              	.LBE6305:
 13171              		.cfi_endproc
 13172              	.LFE5505:
 13174              		.section	.init_array,"aw",%init_array
 13175              		.align	2
 13176 0000 00000000 		.word	_GLOBAL__sub_I_hardware(target1)
 13177              		.weak	_ZTV6Biquad
 13178              		.section	.rodata._ZTV6Biquad,"aG",%progbits,_ZTV6Biquad,comdat
 13179              		.align	2
 13182              	_ZTV6Biquad:
 13183 0000 00000000 		.word	0
 13184 0004 00000000 		.word	0
 13185 0008 00000000 		.word	_ZN6Biquad10resetCoeffEv
 13186 000c 00000000 		.word	_ZN6Biquad18processAudioSampleEf
 13187              		.weak	_ZTV14ClassicFilters
 13188              		.section	.rodata._ZTV14ClassicFilters,"aG",%progbits,_ZTV14ClassicFilters,comdat
 13189              		.align	2
 13192              	_ZTV14ClassicFilters:
 13193 0000 00000000 		.word	0
 13194 0004 00000000 		.word	0
 13195 0008 00000000 		.word	_ZN14ClassicFilters10resetCoeffEv
 13196 000c 00000000 		.word	_ZN14ClassicFilters18processAudioSampleEf
 13197              		.global	samplerate
 13198              		.global	_Z11filterStateB5cxx11
 13199              		.global	filterSelectButton
 13200              		.global	filter
 13201              		.global	hardware
 13202              		.section	.bss._Z11filterStateB5cxx11,"aw",%nobits
 13203              		.align	2
 13204              		.set	.LANCHOR4,. + 0
 13207              	_Z11filterStateB5cxx11:
 13208 0000 00000000 		.space	24
 13208      00000000 
 13208      00000000 
 13208      00000000 
 13208      00000000 
 13209              		.section	.bss._ZZ25processFilterSelectButtonvE11buttonState,"aw",%nobits
 13210              		.align	2
 13211              		.set	.LANCHOR3,. + 0
 13214              	_ZZ25processFilterSelectButtonvE11buttonState:
 13215 0000 00000000 		.space	4
 13216              		.section	.bss.filter,"aw",%nobits
 13217              		.align	2
 13218              		.set	.LANCHOR5,. + 0
 13221              	filter:
 13222 0000 00000000 		.space	216
 13222      00000000 
 13222      00000000 
 13222      00000000 
 13222      00000000 
 13223              		.section	.bss.filterSelectButton,"aw",%nobits
 13224              		.align	2
 13225              		.set	.LANCHOR2,. + 0
 13228              	filterSelectButton:
 13229 0000 00000000 		.space	16
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 543


 13229      00000000 
 13229      00000000 
 13229      00000000 
 13230              		.section	.bss.hardware,"aw",%nobits
 13231              		.align	2
 13232              		.set	.LANCHOR0,. + 0
 13235              	hardware:
 13236 0000 00000000 		.space	64
 13236      00000000 
 13236      00000000 
 13236      00000000 
 13236      00000000 
 13237              		.section	.bss.samplerate,"aw",%nobits
 13238              		.align	2
 13239              		.set	.LANCHOR1,. + 0
 13242              	samplerate:
 13243 0000 00000000 		.space	4
 13244              		.text
 13245              	.Letext0:
 13246              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 13247              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 13248              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 13249              		.file 33 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 13250              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\cpp_type_t
 13251              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 13252              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 13253              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 13254              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 13255              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 13256              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 13257              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_iterat
 13258              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 13259              		.file 43 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 13260              		.file 44 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 13261              		.file 45 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_constr
 13262              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 13263              		.file 47 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 13264              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 13265              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 13266              		.file 50 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 13267              		.file 51 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stringfwd.
 13268              		.file 52 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_tempbu
 13269              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\ptr_traits
 13270              		.file 54 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\functexcep
 13271              		.file 55 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 13272              		.file 56 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\ext\\type_traits
 13273              		.file 57 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 13274              		.file 58 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 13275              		.file 59 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 13276              		.file 60 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 13277              		.file 61 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 13278              		.file 62 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 13279              		.file 63 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 13280              		.file 64 "../../libDaisy//src/daisy_core.h"
 13281              		.file 65 "../../libDaisy//src/per/tim.h"
 13282              		.file 66 "../../libDaisy//src/util/wav_format.h"
 13283              		.file 67 "../../libDaisy//src/dev/max11300.h"
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 544


 13284              		.file 68 "../../libDaisy//src/per/gpio.h"
 13285              		.file 69 "../../libDaisy//src/dev/sdram.h"
 13286              		.file 70 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 13287              		.file 71 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 13288              		.file 72 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 13289              		.file 73 "../../DaisySP//Source/Control/adenv.h"
 13290              		.file 74 "../../DaisySP//Source/Utility/dsp.h"
 13291              		.file 75 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 13292              		.file 76 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 13293              		.file 77 "../../libDaisy//src/dev/sr_595.h"
 13294              		.file 78 "<built-in>"
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 545


DEFINED SYMBOLS
                            *ABS*:00000000 NewExampleProject.cpp
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:17     .text._ZN5daisy6SwitchD2Ev:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:26     .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD2Ev
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:26     .text._ZN5daisy6SwitchD2Ev:00000000 _ZN5daisy6SwitchD1Ev
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:43     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:51     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:51     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:92     .text._ZN6Biquad10resetCoeffEv:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:100    .text._ZN6Biquad10resetCoeffEv:00000000 _ZN6Biquad10resetCoeffEv
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:277    .rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.0.str1.4:00000000 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:281    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.0:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:288    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.0:00000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.0
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:656    .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.0:00000064 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:661    .rodata._ZNSt6vectorIfSaIfEE13_M_assign_auxIPKfEEvT_S5_St20forward_iterator_tag.isra.0.str1.4:00000000 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:665    .text._ZNSt6vectorIfSaIfEE13_M_assign_auxIPKfEEvT_S5_St20forward_iterator_tag.isra.0:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:672    .text._ZNSt6vectorIfSaIfEE13_M_assign_auxIPKfEEvT_S5_St20forward_iterator_tag.isra.0:00000000 _ZNSt6vectorIfSaIfEE13_M_assign_auxIPKfEEvT_S5_St20forward_iterator_tag.isra.0
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:1233   .text._ZNSt6vectorIfSaIfEE13_M_assign_auxIPKfEEvT_S5_St20forward_iterator_tag.isra.0:000000b8 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:1243   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.0:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:1250   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.0:00000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.0
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:1614   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.0:00000064 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:1619   .text._ZN14ClassicFilters10resetCoeffEv:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:1627   .text._ZN14ClassicFilters10resetCoeffEv:00000000 _ZN14ClassicFilters10resetCoeffEv
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:1808   .text._ZN14ClassicFiltersD2Ev:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:1816   .text._ZN14ClassicFiltersD2Ev:00000000 _ZN14ClassicFiltersD2Ev
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:2903   .text._ZN14ClassicFiltersD2Ev:000000d8 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13192  .rodata._ZTV14ClassicFilters:00000000 _ZTV14ClassicFilters
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13182  .rodata._ZTV6Biquad:00000000 _ZTV6Biquad
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:1816   .text._ZN14ClassicFiltersD2Ev:00000000 _ZN14ClassicFiltersD1Ev
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:2911   .rodata._ZN6Biquad18processAudioSampleEf.str1.4:00000000 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:2912   .rodata._ZN6Biquad18processAudioSampleEf.str1.4:00000000 .LC2
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:2915   .rodata._ZN6Biquad18processAudioSampleEf.str1.4:00000008 .LC3
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:2918   .rodata._ZN6Biquad18processAudioSampleEf.str1.4:00000014 .LC4
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:2921   .text._ZN6Biquad18processAudioSampleEf:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:2929   .text._ZN6Biquad18processAudioSampleEf:00000000 _ZN6Biquad18processAudioSampleEf
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:4196   .text._ZN6Biquad18processAudioSampleEf:000001a8 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:4207   .text._ZN14ClassicFilters18processAudioSampleEf:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:4215   .text._ZN14ClassicFilters18processAudioSampleEf:00000000 _ZN14ClassicFilters18processAudioSampleEf
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:4241   .text._ZN6BiquadC2Ev:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:4249   .text._ZN6BiquadC2Ev:00000000 _ZN6BiquadC2Ev
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:5376   .text._ZN6BiquadC2Ev:000000d8 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:4249   .text._ZN6BiquadC2Ev:00000000 _ZN6BiquadC1Ev
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:5384   .text._Z15prepareHardwarev:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:5392   .text._Z15prepareHardwarev:00000000 _Z15prepareHardwarev
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:5489   .text._Z15prepareHardwarev:00000084 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:5497   .rodata._Z25processFilterSelectButtonv.str1.4:00000000 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:5498   .rodata._Z25processFilterSelectButtonv.str1.4:00000000 .LC5
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:5501   .rodata._Z25processFilterSelectButtonv.str1.4:00000008 .LC6
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:5504   .rodata._Z25processFilterSelectButtonv.str1.4:00000010 .LC7
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:5510   .text._Z25processFilterSelectButtonv:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:5518   .text._Z25processFilterSelectButtonv:00000000 _Z25processFilterSelectButtonv
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:5829   .text._Z25processFilterSelectButtonv:00000088 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:5845   .rodata._ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_.str1.4:00000000 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:5849   .text._ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:5857   .text._ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_:00000000 _ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:6371   .text._ZNSt6vectorIfSaIfEE17_M_realloc_insertIJfEEEvN9__gnu_cxx17__normal_iteratorIPfS1_EEDpOT_:000000cc $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:6379   .text._ZN14ClassicFilters15setCoefficientsEffff:00000000 $t
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 546


C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:6387   .text._ZN14ClassicFilters15setCoefficientsEffff:00000000 _ZN14ClassicFilters15setCoefficientsEffff
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:9106   .text._ZN14ClassicFilters15setCoefficientsEffff:0000032c $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:9147   .text._ZN14ClassicFilters15setCoefficientsEffff:00000344 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:11709  .text._ZN14ClassicFilters15setCoefficientsEffff:000006f8 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:11723  .text._Z13prepareToPlayf:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:11731  .text._Z13prepareToPlayf:00000000 _Z13prepareToPlayf
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:12026  .text._Z13prepareToPlayf:00000054 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:12033  .text.startup.main:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:12041  .text.startup.main:00000000 main
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:12083  .text.startup.main:00000020 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:12099  .text._Z17processAudioBlockPKPKfPPfj:00000000 _Z17processAudioBlockPKPKfPPfj
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:12091  .text._Z17processAudioBlockPKPKfPPfj:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:12488  .text._Z17processAudioBlockPKPKfPPfj:000000c8 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:12500  .text.startup._GLOBAL__sub_I_hardware:00000000 $t
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:12507  .text.startup._GLOBAL__sub_I_hardware:00000000 _GLOBAL__sub_I_hardware
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13158  .text.startup._GLOBAL__sub_I_hardware:00000090 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13175  .init_array:00000000 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13179  .rodata._ZTV6Biquad:00000000 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13189  .rodata._ZTV14ClassicFilters:00000000 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13242  .bss.samplerate:00000000 samplerate
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13207  .bss._Z11filterStateB5cxx11:00000000 _Z11filterStateB5cxx11
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13228  .bss.filterSelectButton:00000000 filterSelectButton
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13221  .bss.filter:00000000 filter
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13235  .bss.hardware:00000000 hardware
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13203  .bss._Z11filterStateB5cxx11:00000000 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13210  .bss._ZZ25processFilterSelectButtonvE11buttonState:00000000 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13214  .bss._ZZ25processFilterSelectButtonvE11buttonState:00000000 _ZZ25processFilterSelectButtonvE11buttonState
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13217  .bss.filter:00000000 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13224  .bss.filterSelectButton:00000000 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13231  .bss.hardware:00000000 $d
C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s:13238  .bss.samplerate:00000000 $d
                           .group:00000000 _ZN5daisy6SwitchD5Ev
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev
                           .group:00000000 _ZN6BiquadC5Ev
                           .group:00000000 _ZN14ClassicFiltersD5Ev

UNDEFINED SYMBOLS
memset
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
memcpy
_ZSt19__throw_logic_errorPKc
_Znwj
_ZdlPvj
memmove
_ZSt20__throw_length_errorPKc
memcmp
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy6Switch8DebounceEv
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
ARM GAS  C:\Users\fv-19\AppData\Local\Temp\ccjm0nKP.s 			page 547


sinf
cosf
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
_ZSt17__throw_bad_allocv
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
_ZNK5daisy9AdcHandle8GetFloatEh
__aeabi_atexit
__dso_handle
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
